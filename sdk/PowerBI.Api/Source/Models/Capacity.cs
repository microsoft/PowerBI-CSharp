// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Power BI capacity
    /// </summary>
    public partial class Capacity
    {
        /// <summary>
        /// Initializes a new instance of the Capacity class.
        /// </summary>
        public Capacity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Capacity class.
        /// </summary>
        /// <param name="id">The capacity ID</param>
        /// <param name="state">The capacity state. Possible values include:
        /// 'NotActivated', 'Active', 'Provisioning', 'ProvisionFailed',
        /// 'Suspended', 'PreSuspended', 'Deleting', 'Deleted', 'Invalid',
        /// 'UpdatingSku'</param>
        /// <param name="capacityUserAccessRight">Access right user has on the
        /// capacity. Possible values include: 'None', 'Assign',
        /// 'Admin'</param>
        /// <param name="displayName">The capacity display name</param>
        /// <param name="admins">An array of capacity admins.</param>
        /// <param name="sku">The capacity SKU.</param>
        /// <param name="region">The Azure region where the capacity is
        /// provisioned</param>
        /// <param name="tenantKeyId">The ID of an encryption key (only
        /// applicable to the admin route)</param>
        /// <param name="tenantKey">Encryption key information (Only applicable
        /// for admin route)</param>
        public Capacity(System.Guid id, CapacityState state, CapacityUserAccessRight capacityUserAccessRight, string displayName = default(string), IList<string> admins = default(IList<string>), string sku = default(string), string region = default(string), System.Guid? tenantKeyId = default(System.Guid?), TenantKey tenantKey = default(TenantKey))
        {
            Id = id;
            DisplayName = displayName;
            Admins = admins;
            Sku = sku;
            State = state;
            CapacityUserAccessRight = capacityUserAccessRight;
            Region = region;
            TenantKeyId = tenantKeyId;
            TenantKey = tenantKey;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the capacity ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets the capacity display name
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets an array of capacity admins.
        /// </summary>
        [JsonProperty(PropertyName = "admins")]
        public IList<string> Admins { get; set; }

        /// <summary>
        /// Gets or sets the capacity SKU.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// Gets or sets the capacity state. Possible values include:
        /// 'NotActivated', 'Active', 'Provisioning', 'ProvisionFailed',
        /// 'Suspended', 'PreSuspended', 'Deleting', 'Deleted', 'Invalid',
        /// 'UpdatingSku'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public CapacityState State { get; set; }

        /// <summary>
        /// Gets or sets access right user has on the capacity. Possible values
        /// include: 'None', 'Assign', 'Admin'
        /// </summary>
        [JsonProperty(PropertyName = "capacityUserAccessRight")]
        public CapacityUserAccessRight CapacityUserAccessRight { get; set; }

        /// <summary>
        /// Gets or sets the Azure region where the capacity is provisioned
        /// </summary>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }

        /// <summary>
        /// Gets or sets the ID of an encryption key (only applicable to the
        /// admin route)
        /// </summary>
        [JsonProperty(PropertyName = "tenantKeyId")]
        public System.Guid? TenantKeyId { get; set; }

        /// <summary>
        /// Gets or sets encryption key information (Only applicable for admin
        /// route)
        /// </summary>
        [JsonProperty(PropertyName = "tenantKey")]
        public TenantKey TenantKey { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
