// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Power BI artifact access entry for user
    /// </summary>
    public partial class ArtifactAccessEntry
    {
        /// <summary>
        /// Initializes a new instance of the ArtifactAccessEntry class.
        /// </summary>
        public ArtifactAccessEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ArtifactAccessEntry class.
        /// </summary>
        /// <param name="artifactId">Artifact ID</param>
        /// <param name="displayName">Display name of the artifact</param>
        /// <param name="artifactType">Type of the artifact</param>
        /// <param name="accessRight">Access right that the user has for the
        /// artifact.</param>
        public ArtifactAccessEntry(string artifactId, string displayName, string artifactType, string accessRight)
        {
            ArtifactId = artifactId;
            DisplayName = displayName;
            ArtifactType = artifactType;
            AccessRight = accessRight;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets artifact ID
        /// </summary>
        [JsonProperty(PropertyName = "artifactId")]
        public string ArtifactId { get; set; }

        /// <summary>
        /// Gets or sets display name of the artifact
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets type of the artifact
        /// </summary>
        [JsonProperty(PropertyName = "artifactType")]
        public string ArtifactType { get; set; }

        /// <summary>
        /// Gets or sets access right that the user has for the artifact.
        /// </summary>
        [JsonProperty(PropertyName = "accessRight")]
        public string AccessRight { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ArtifactId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ArtifactId");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (ArtifactType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ArtifactType");
            }
            if (AccessRight == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AccessRight");
            }
        }
    }
}
