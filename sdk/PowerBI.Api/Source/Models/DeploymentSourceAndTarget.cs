// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Source and target items.
    /// </summary>
    public partial class DeploymentSourceAndTarget
    {
        /// <summary>
        /// Initializes a new instance of the DeploymentSourceAndTarget class.
        /// </summary>
        public DeploymentSourceAndTarget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeploymentSourceAndTarget class.
        /// </summary>
        /// <param name="source">The ID of the artifact being deployed from the
        /// source stage.</param>
        /// <param name="target">The ID of the artifact being overwritten on
        /// the target stage. Only applicable when overwriting an
        /// artifact.</param>
        public DeploymentSourceAndTarget(System.Guid source, System.Guid? target = default(System.Guid?))
        {
            Source = source;
            Target = target;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ID of the artifact being deployed from the source
        /// stage.
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public System.Guid Source { get; set; }

        /// <summary>
        /// Gets or sets the ID of the artifact being overwritten on the target
        /// stage. Only applicable when overwriting an artifact.
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public System.Guid? Target { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
