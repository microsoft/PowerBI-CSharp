// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DashboardUserAccessRight.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DashboardUserAccessRightConverter))]
    public struct DashboardUserAccessRight : System.IEquatable<DashboardUserAccessRight>
    {
        private DashboardUserAccessRight(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// No permission to content in dashboard
        /// </summary>
        public static readonly DashboardUserAccessRight None = "None";

        /// <summary>
        /// Grants Read access to content in dashboard
        /// </summary>
        public static readonly DashboardUserAccessRight Read = "Read";

        /// <summary>
        /// Grants Read and Write access to content in dashboard
        /// </summary>
        public static readonly DashboardUserAccessRight ReadWrite = "ReadWrite";

        /// <summary>
        /// Grants Read and Reshare access to content in dashboard
        /// </summary>
        public static readonly DashboardUserAccessRight ReadReshare = "ReadReshare";

        /// <summary>
        /// Grants Read, Write and Reshare access to content in report
        /// </summary>
        public static readonly DashboardUserAccessRight Owner = "Owner";


        /// <summary>
        /// Underlying value of enum DashboardUserAccessRight
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for DashboardUserAccessRight
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type DashboardUserAccessRight
        /// </summary>
        public bool Equals(DashboardUserAccessRight e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to DashboardUserAccessRight
        /// </summary>
        public static implicit operator DashboardUserAccessRight(string value)
        {
            return new DashboardUserAccessRight(value);
        }

        /// <summary>
        /// Implicit operator to convert DashboardUserAccessRight to string
        /// </summary>
        public static implicit operator string(DashboardUserAccessRight e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum DashboardUserAccessRight
        /// </summary>
        public static bool operator == (DashboardUserAccessRight e1, DashboardUserAccessRight e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum DashboardUserAccessRight
        /// </summary>
        public static bool operator != (DashboardUserAccessRight e1, DashboardUserAccessRight e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for DashboardUserAccessRight
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DashboardUserAccessRight && Equals((DashboardUserAccessRight)obj);
        }

        /// <summary>
        /// Returns for hashCode DashboardUserAccessRight
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
