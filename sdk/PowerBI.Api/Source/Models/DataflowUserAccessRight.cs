// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DataflowUserAccessRight.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DataflowUserAccessRightConverter))]
    public struct DataflowUserAccessRight : System.IEquatable<DataflowUserAccessRight>
    {
        private DataflowUserAccessRight(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Removes permission to content in dataflow
        /// </summary>
        public static readonly DataflowUserAccessRight None = "None";

        /// <summary>
        /// Grants Read access to content in dataflow
        /// </summary>
        public static readonly DataflowUserAccessRight Read = "Read";

        /// <summary>
        /// Grants Read and Write access to content in dataflow
        /// </summary>
        public static readonly DataflowUserAccessRight ReadWrite = "ReadWrite";

        /// <summary>
        /// Grants Read and Reshare access to content in dataflow
        /// </summary>
        public static readonly DataflowUserAccessRight ReadReshare = "ReadReshare";

        /// <summary>
        /// Grants Read, Write and Reshare access to content in dataflow
        /// </summary>
        public static readonly DataflowUserAccessRight Owner = "Owner";


        /// <summary>
        /// Underlying value of enum DataflowUserAccessRight
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for DataflowUserAccessRight
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type DataflowUserAccessRight
        /// </summary>
        public bool Equals(DataflowUserAccessRight e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to DataflowUserAccessRight
        /// </summary>
        public static implicit operator DataflowUserAccessRight(string value)
        {
            return new DataflowUserAccessRight(value);
        }

        /// <summary>
        /// Implicit operator to convert DataflowUserAccessRight to string
        /// </summary>
        public static implicit operator string(DataflowUserAccessRight e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum DataflowUserAccessRight
        /// </summary>
        public static bool operator == (DataflowUserAccessRight e1, DataflowUserAccessRight e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum DataflowUserAccessRight
        /// </summary>
        public static bool operator != (DataflowUserAccessRight e1, DataflowUserAccessRight e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for DataflowUserAccessRight
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DataflowUserAccessRight && Equals((DataflowUserAccessRight)obj);
        }

        /// <summary>
        /// Returns for hashCode DataflowUserAccessRight
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
