// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Power BI dataflow transaction
    /// </summary>
    public partial class DataflowTransaction
    {
        /// <summary>
        /// Initializes a new instance of the DataflowTransaction class.
        /// </summary>
        public DataflowTransaction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataflowTransaction class.
        /// </summary>
        /// <param name="id">The transaction ID</param>
        /// <param name="refreshType">The type of refresh transaction</param>
        /// <param name="startTime">Start time of the transaction</param>
        /// <param name="endTime">End time of the transaction</param>
        /// <param name="status">Status of the transaction</param>
        public DataflowTransaction(string id, string refreshType = default(string), string startTime = default(string), string endTime = default(string), string status = default(string))
        {
            Id = id;
            RefreshType = refreshType;
            StartTime = startTime;
            EndTime = endTime;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the transaction ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the type of refresh transaction
        /// </summary>
        [JsonProperty(PropertyName = "refreshType")]
        public string RefreshType { get; set; }

        /// <summary>
        /// Gets or sets start time of the transaction
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Gets or sets end time of the transaction
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public string EndTime { get; set; }

        /// <summary>
        /// Gets or sets status of the transaction
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
