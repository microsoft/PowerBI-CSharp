// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.PowerBI.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Power BI assign to Power BI dataflow storage account request
    /// </summary>
    public partial class AssignToDataflowStorageRequest
    {
        /// <summary>
        /// Initializes a new instance of the AssignToDataflowStorageRequest
        /// class.
        /// </summary>
        public AssignToDataflowStorageRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssignToDataflowStorageRequest
        /// class.
        /// </summary>
        /// <param name="dataflowStorageId">The Power BI dataflow storage
        /// account ID. To unassign the specified workspace from a Power BI
        /// dataflow storage account, use an empty GUID
        /// (`00000000-0000-0000-0000-000000000000`).</param>
        public AssignToDataflowStorageRequest(System.Guid dataflowStorageId)
        {
            DataflowStorageId = dataflowStorageId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Power BI dataflow storage account ID. To unassign
        /// the specified workspace from a Power BI dataflow storage account,
        /// use an empty GUID (`00000000-0000-0000-0000-000000000000`).
        /// </summary>
        [JsonProperty(PropertyName = "dataflowStorageId")]
        public System.Guid DataflowStorageId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
