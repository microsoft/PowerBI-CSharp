{
    "swagger": "2.0",
    "info": {
        "version": "v1.0",
        "title": "Power BI Client"
    },
    "host": "api.powerbi.com",
    "schemes": [
        "https"
    ],
    "consumes": [

    ],
    "produces": [

    ],
    "paths": {
        "/v1.0/myorg/datasets": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of datasets from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasets",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasets"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Creates a new dataset on **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_PostDataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "body",
                        "description": "Dataset definition to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDatasetRequest"
                        }
                    },
                    {
                        "name": "defaultRetentionPolicy",
                        "description": "The default retention policy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "None",
                            "basicFIFO"
                        ],
                        "x-ms-enum": {
                            "name": "DefaultRetentionPolicy",
                            "modelAsExtensible": true,
                            "values": [
                                {
                                    "value": "None",
                                    "description": "None"
                                },
                                {
                                    "value": "basicFIFO",
                                    "description": "basicFIFO"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "Push example": {
                        "parameters": {
                            "defaultRetentionPolicy": "basicFIFO",
                            "dataset": {
                                "name": "SalesMarketing",
                                "defaultMode": "Push",
                                "tables": [
                                    {
                                        "name": "Product",
                                        "columns": [
                                            {
                                                "name": "ProductID",
                                                "dataType": "Int64"
                                            },
                                            {
                                                "name": "Name",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "Category",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "IsCompete",
                                                "dataType": "bool"
                                            },
                                            {
                                                "name": "ManufacturedOn",
                                                "dataType": "DateTime"
                                            },
                                            {
                                                "name": "Sales",
                                                "dataType": "Int64",
                                                "formatString": "Currency"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "201": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "defaultRetentionPolicy": "basicFIFO"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDataset",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "addRowsAPIEnabled": false,
                                    "configuredBy": "john@contoso.com",
                                    "isRefreshable": true,
                                    "isEffectiveIdentityRequired": true,
                                    "isEffectiveIdentityRolesRequired": true,
                                    "isOnPremGatewayRequired": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Deletes the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_DeleteDataset",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/executeQueries": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Executes Data Analysis Expressions (DAX) queries against the provided dataset (Preview). The dataset must reside in **My workspace** or another [new workspace experience](/power-bi/collaborate-share/service-new-workspaces) workspace.",
                "description": "\nDAX query errors will result in:\n\n- A response error, such as `DAX query failure`.\n- A failure HTTP status code (400).\n\nA query that requests more than one table, or more than 100,000 table rows, will result in:\n\n- Limited data being returned.\n- A response error, such as `More than one result table in a query` or `More than 100k rows in a query result`.\n- A successful HTTP status code (200).\n\nColumns that are fully qualified in the query will be returned with a fully qualified name, for example, `MyTable[MyColumn]`. Columns that are renamed or created in the query will be returned within square bracket, for example, `[MyNewColumn]`.\n\n## Permissions\n\nThe user must have [Manage dataset access permissions](/power-bi/connect-data/service-datasets-manage-access-permissions).\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\n- Only datasets in a [new workspace experience](/power-bi/collaborate-share/service-new-workspaces) workspace, that is to say a **V2** workspace, are supported.\n- Datasets that are hosted in Azure Analysis Services or that have a live connection to an on-premises Azure Analysis Services model aren't supported.\n- The tenant setting **[Allow XMLA endpoints and Analyze in Excel with on-premises datasets](/power-bi/admin/service-premium-connect-tools)** must be enabled.\n- One query per API call.\n- One table request per query.\n- Maximum of 100,000 table rows per query.\n- Service Principals are not supported for datasets with RLS per [RLS limitations](/admin/service-admin-rls#considerations-and-limitations) and user impersonation is not supported. \n\n######\n",
                "operationId": "Datasets_ExecuteQueries",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestMessage",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatasetExecuteQueriesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetExecuteQueriesResponse"
                        }
                    }
                },
                "deprecated": false,
                "x-ms-examples": {
                    "Execute queries example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "requestMessage": {
                                "queries": [
                                    {
                                        "query": "EVALUATE VALUES(MyTable[Column])"
                                    }
                                ],
                                "serializerSettings": {
                                    "includeNulls": true
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "results": [
                                        {
                                            "tables": [
                                                {
                                                    "rows": [
                                                        {
                                                            "MyTable[Year]": 2010,
                                                            "MyTable[Quarter]": "Q1"
                                                        },
                                                        {
                                                            "MyTable[Year]": 2010,
                                                            "MyTable[Quarter]": "Q2"
                                                        },
                                                        {
                                                            "MyTable[Year]": 2011,
                                                            "MyTable[Quarter]": "Q1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/tables": {
            "get": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Returns a list of tables within the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_GetTables",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tables"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/tables/{tableName}": {
            "put": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Updates the metadata and schema for the specified table within the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_PutTable",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "Table name and columns to update existing table",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "tableName": "NewProduct",
                                "columns": [
                                    {
                                        "name": "ProductID",
                                        "dataType": "Int64"
                                    },
                                    {
                                        "name": "Name",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "Category",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "IsCompete",
                                        "dataType": "bool"
                                    },
                                    {
                                        "name": "ManufacturedOn",
                                        "dataType": "DateTime"
                                    },
                                    {
                                        "name": "NewColumn",
                                        "dataType": "string"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "NewProduct"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/tables/{tableName}/rows": {
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Adds new data rows to the specified table within the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- This API only supports **push datasets**.\n- See [Power BI REST API limitations](/power-bi/developer/automation/api-rest-api-limitations).\n\n######\n",
                "operationId": "Datasets_PostRows",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "description": "The dataset ID",
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostRowsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "rows": [
                                    {
                                        "ProductID": 1,
                                        "Name": "Adjustable Race",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 2,
                                        "Name": "LL Crankarm",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 3,
                                        "Name": "HL Mountain Frame - Silver",
                                        "Category": "Bikes",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Deletes all rows from the specified table within the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_DeleteRows",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/refreshes": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh history for the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nOneDrive refresh history isn't returned.\n\n######\n",
                "operationId": "Datasets_GetRefreshHistory",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "description": "The requested number of entries in the refresh history. If not provided, the default is all available entries.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshes"
                        }
                    }
                },
                "x-ms-examples": {
                    "in progress refresh example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "status": "Unknown",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "completed refresh example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "status": "Completed",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Failed refresh example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "serviceExceptionJson": "{\"errorCode\":\"ModelRefreshFailed_CredentialsNotSpecified\"}",
                                            "status": "Failed",
                                            "requestId": "11bf290a-346b-48b7-8973-c5df149337ff"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Triggers a refresh for the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- For Shared capacities, a maximum of eight requests per day, which includes refreshes executed using a scheduled refresh.\n- For Premium capacities, the maximum requests per day is only limited by the available resources in the capacity. If available resources are overloaded, refreshes are throttled until the load is reduced. The refresh will fail if throttling exceeds 1 hour.\n\n######\n",
                "operationId": "Datasets_RefreshDataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refreshRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "refreshRequest": {
                                "notifyOption": "MailOnFailure"
                            }
                        },
                        "responses": {
                            "202": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/refreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetRefreshSchedule",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "Refresh Schedule example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [ "Sunday", "Friday", "Saturday" ],
                                    "times": [ "05:00", "11:30", "17:30", "23:00" ],
                                    "enabled": true,
                                    "localTimeZoneId": "UTC",
                                    "notifyOption": "MailOnFailure"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for the specified dataset from **My workspace**.",
                "description": "\nA request that disables the refresh schedule should contain no other changes.\n\nAt least one day must be specified. If no times are specified, then Power BI will use a default single time per day.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThe limit on the number of time slots per day depends on whether a [Premium](/power-bi/admin/service-premium-what-is) or Shared capacity is used.\n\n######\n",
                "operationId": "Datasets_UpdateRefreshSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetModelRefreshScheduleRequest",
                        "description": "Update Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "change notification option": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "notifyOption": "NoNotification"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "change days and times": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "days": [ "Sunday", "Tuesday", "Friday", "Saturday" ],
                                    "times": [ "07:00", "11:30", "16:00", "23:30" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "update times": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "times": [ "08:00", "16:00" ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "disable scheduled refresh": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "enabled": false
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/directQueryRefreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDirectQueryRefreshSchedule",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "By Days Schedule example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [ "Sunday", "Friday", "Saturday" ],
                                    "times": [ "05:00", "11:30", "17:30", "23:00" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    },
                    "By Frequency Schedule example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "frequency": 15,
                                    "days": [],
                                    "times": [],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from **My workspace**.",
                "description": "\nA request should contain either a set of days and times *or* a valid frequency, but not both. If you choose a set of days without specifying any times, then Power BI will use a default single time per day. Setting the frequency will automatically overwrite the days and times setting.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_UpdateDirectQueryRefreshSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetDQRefreshScheduleRequest",
                        "description": "Patch DirectQuery or LiveConnection Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "change to frequency based schedule": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "frequency": 30
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "switch to days and times based schedule": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "days": [ "Sunday", "Tuesday", "Friday", "Saturday" ],
                                    "times": [ "07:00", "11:30", "16:00", "23:30" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "update the times of existing days based schedule": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "times": [ "07:00", "16:30", "23:30" ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "disable scheduled refresh": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "enabled": false
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/parameters": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of parameters for the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nDatasets with SQL, Oracle, Teradata, and SAP HANA [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections aren't supported.\n\n######\n",
                "operationId": "Datasets_GetParameters",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MashupParameters"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "ServerName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTest.database.windows.net"
                                        },
                                        {
                                            "name": "DatabaseName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTestDB"
                                        },
                                        {
                                            "name": "FromDate",
                                            "type": "DateTime",
                                            "isRequired": true,
                                            "currentValue": "2/8/2002 12:00:00 AM"
                                        },
                                        {
                                            "name": "FilterBlanks",
                                            "type": "Logical",
                                            "isRequired": true,
                                            "currentValue": "TRUE"
                                        },
                                        {
                                            "name": "MaxId",
                                            "type": "Number",
                                            "isRequired": true,
                                            "currentValue": "77"
                                        },
                                        {
                                            "name": "AnyParam",
                                            "type": "Any",
                                            "isRequired": true,
                                            "currentValue": "uu63"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.UpdateParameters": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the parameters values for the specified dataset from **My workspace**.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - If you're using **enhanced dataset metadata**, refresh the dataset to apply the new parameter values.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Datasets created using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those data sources, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections are only supported with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- Datasets with Azure Analysis Services live connections aren't supported.\n- Maximum of 100 parameters per request.\n- All specified parameters must exist in the dataset.\n- Parameters values should be of the expected type.\n- The parameter list cannot be empty or include duplicate parameters.\n- Parameters names are case-sensitive.\n- Parameter `IsRequired` must have a non-empty value.\n- The parameter types `Any` and `Binary` cannot be updated.\n\n######\n",
                "operationId": "Datasets_UpdateParameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateMashupParametersRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateMashupParametersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateMashupParametersRequest": {
                                "updateDetails": [
                                    {
                                        "name": "DatabaseName",
                                        "newValue": "NewDB"
                                    },
                                    {
                                        "name": "MaxId",
                                        "newValue": "5678"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/datasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of data sources for the specified dataset from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasources",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "Analysis Services": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "AnalysisServices",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Azure Analysis Services": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "AnalysisServices",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SQL": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Azure SQL": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Excel": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "File",
                                            "connectionDetails": {
                                                "path": "c:\\users\\username\\documents\\orders1.xlsx"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "OData": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "http://services.odata.org/MyOdata/MyOdata.svc"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SharePoint": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                    "value": [
                                        {
                                            "datasourceType": "SharePointList",
                                            "connectionDetails": {
                                                "url": "https://microsoft.sharepoint.com/hello/myproj/"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SAP HANA": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                "value": [
                                    {
                                        "datasourceType": "SAPHana",
                                        "connectionDetails": {
                                            "server": "My-SapHana-Server",
                                            "database": "My-SapHana-Database"
                                        },
                                        "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                        "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                    }
                                ]
                            }
                        }
                    },
                    "Oracle": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "@odata.context": "http://api.powerbi.com/v1.0/myorg/groups/222f0f33-3abc-4a57-9f98-ff01bd2aaabb/$metadata#datasources",
                                "value": [
                                    {
                                        "datasourceType": "Oracle",
                                        "connectionDetails": {
                                            "server": "My-Oracle-Server",
                                            "database": "My-Oracle-Database"
                                        },
                                        "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                        "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.UpdateDatasources": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the data sources of the specified dataset from **My workspace**.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - The original data source and the new data source must have the exact same schema.\n> - If you're using **enhanced dataset metadata**, refresh the dataset to get data from the new data sources.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Limitations\n\n- Datasets created using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those data sources, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- Only these data sources are supported: SQL Server, Azure SQL Server, Azure Analysis Services, Azure Synapse, OData, SharePoint, Teradata, and SAP HANA. For other data sources, use the [Update Parameters](/rest/api/power-bi/datasets/update-parameters) API call.\n- Changing the data source type isn't supported.\n- Data sources that contain parameters in the connection string aren't supported.\n- Updating data sources that are part of merged or joined tables is only supported if you're using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- For an Advanced Query that references multiple data sources, only the first data source will be updated. To overcome this limitation, define the data source as a parameter and use the [Update Parameters](/rest/api/power-bi/datasets/update-parameters) API call.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_UpdateDatasources",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateDatasourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateDatasourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasourcesRequest": {
                                "updateDetails": [
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-Sql-Server",
                                                "database": "My-Sql-Database"
                                            }
                                        },
                                        "connectionDetails": {
                                            "server": "New-Sql-Server",
                                            "database": "New-Sql-Database"
                                        }
                                    },
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "http://services.odata.org/V4/Northwind/Northwind.svc"
                                            }
                                        },
                                        "connectionDetails": {
                                            "url": "http://services.odata.org/V4/Odata/Northwind.svc"
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.SetAllConnections": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates all connections for the specified dataset from **My workspace**. This API only supports SQL DirectQuery datasets.",
                "description": "\n> [!IMPORTANT]\n> This API call is deprecated and no longer supported. This API call isn't compatible with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n>\n> Instead use:\n>\n> - [Update Parameters](/rest/api/power-bi/datasets/update-parameters) to update connections for SQL, Azure Synapse, OData, and SharePoint data sources.\n> - [Update Datasources](/rest/api/power-bi/datasets/update-datasources) to connections for other data sources.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_SetAllDatasetConnections",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectionDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "parameters": {
                                "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.BindToGateway": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Binds the specified dataset from **My workspace** to the specified gateway, optionally with a given set of data source IDs. If you don’t supply a specific data source ID, the dataset will be bound to the first matching data source in the gateway.",
                "description": "\n> [!IMPORTANT]\n> Add the API caller principal as a data source user on the gateway.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nOnly supports the on-premises data gateway\n\n######\n",
                "operationId": "Datasets_BindToGateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bindToGatewayRequest",
                        "in": "body",
                        "description": "The bind to gateway request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BindToGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example without datasourceIds": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example with datasourceIds": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                "datasourceObjectIds": [ "dc2f2dac-e5e2-4c37-af76-2a0bc10f16cb", "3bfe5d33-ab7d-4d24-b0b5-e2bb8eb01cf5" ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.GetBoundGatewayDatasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateway data sources for the specified dataset from **My workspace**.",
                "description": "\n> [!IMPORTANT]\n> This API is deprecated, use [Get Datasources](/rest/api/power-bi/datasets/get-datasources) instead.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetGatewayDatasources",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "datasourceType": "Sql",
                                            "connectionDetails": "{\"server\":\"MyServer.database.windows.net\",\"database\":\"MyDatabase\"}"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/Default.DiscoverGateways": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateways that the specified dataset from **My workspace** can be bound to.",
                "description": "\nThis API call is only relevant to datasets that have at least one on-premises connection. For datasets with cloud-only connections, this API call returns an empty list.\n\n## Required scope\n\nDataset.Read.All\n\n######\n",
                "operationId": "Datasets_DiscoverGateways",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Gateways"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "name": "ContosoGateway",
                                            "type": "Resource",
                                            "publicKey": {
                                                "exponent": "AQAB",
                                                "modulus": "o6j2....cLk="
                                            }
                                        }

                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/users": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Grants the specified user the specified permissions to the specified dataset.",
                "description": "\nWhen user permissions to a dataset have been recently updated, the new permissions might not be immediately available through API calls. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n\n## Required scope\n\nDataset.ReadWrite.All\n## Limitations\n\n- Only datasets in a [new workspace experience](/power-bi/collaborate-share/service-new-workspaces) workspace, that is to say a V2 workspace, are supported.\n- This API only supports adding permissions to principals who don't have permissions to the dataset. It cannot be used to change existing dataset permissions.\n- Adding permissions to service principals (app principalType) is not supported\n\n######\n",
                "operationId": "Datasets_PostDatasetUserInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessRight",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatasetUserAccess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "accessRight": {
                                "identifier": "john@contoso.com",
                                "principalType": "User",
                                "groupUserAccessRight": "Read"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example for giving ReadExplore right to a security group": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "userDetails": {
                                "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                "groupUserAccessRight": "ReadReshare",
                                "principalType": "Group"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/datasets/{datasetId}/users": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Grants the specified user the specified permissions to the specified dataset from **My workspace**.",
                "description": "\nWhen user permissions to a dataset have been recently updated, the new permissions might not be immediately available through API calls. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n\n## Required scope\n\nDataset.ReadWrite.All\n## Limitations\n\n- Only datasets in a [new workspace experience](/power-bi/collaborate-share/service-new-workspaces) workspace, that is to say a V2 workspace, are supported.\n- This API only supports adding permissions to principals who don't have permissions to the dataset. It cannot be used to change existing dataset permissions.\n- Adding permissions to service principals (app principalType) is not supported\n\n######\n",
                "operationId": "Datasets_PostDatasetUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessRight",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatasetUserAccess"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "accessRight": {
                                "identifier": "john@contoso.com",
                                "principalType": "User",
                                "groupUserAccessRight": "Read"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example for giving ReadExplore right to a security group": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "userDetails": {
                                "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                "groupUserAccessRight": "ReadReshare",
                                "principalType": "Group"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/RefreshUserPermissions": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Refreshes user permissions in Power BI.",
                "description": "\nWhen a user is granted permissions to a workspace, app, or Power BI item (such as a report or a dashboard), the new permissions might not be immediately available through API calls. This operation refreshes user permissions to ensure they're fully updated.\n\n> [!IMPORTANT]\n>\n> - Call **Refresh User Permissions** before making other API calls.\n> - Since it takes about two minutes for the permissions to get refreshed, wait for two minutes before making other API calls.\n\n## Required scope\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Limitations\n\nMaximum one call per hour.\n\n######\n",
                "operationId": "Users_RefreshUserPermissions",
                "consumes": [
                ],
                "produces": [
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/imports": {
            "get": {
                "tags": [
                    "Imports"
                ],
                "summary": "Returns a list of imports from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Imports_GetImports",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Imports"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                            "importState": "Succeeded",
                                            "createdDateTime": "2018-05-08T14:56:18.477Z",
                                            "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                            "name": "SalesMarketing",
                                            "connectionType": "import",
                                            "source": "Upload",
                                            "datasets": [
                                                {
                                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                                }
                                            ],
                                            "reports": [
                                                {
                                                    "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Imports"
                ],
                "summary": "Creates new content in **My workspace**.",
                "description": "\n> [!NOTE]\n> Supported content:\n>\n> - **.pbix** (Power BI Desktop reports)\n> - **.json** (JSON files)\n> - **.xlsx** (Excel files)\n> - **.rdl** (SQL Server Report Definition Language files)\n\n- To import a file, specify the content type **multipart/form-data** in the request headers and encode the file as [form data](https://www.w3.org/TR/html401/interact/forms.html) in the request body.\n- To import an **.rdl** file, include the file extension in the name specified by `datasetDisplayName`, as described in [URI parameters](/rest/api/power-bi/imports/post-import-in-group#uri-parameters).\n- To import an **.xlsx** file from OneDrive for Business, include the content type **application/json** in the request headers. Include [ImportInfo](/rest/api/power-bi/imports/post-import-in-group#importinfo) with `filePath` set to the .xlsx file path in the request body.\n- To import large **.pbix** files that are between 1 GB and 10 GB in size, see [Create Temporary Upload Location](/rest/api/power-bi/imports/create-temporary-upload-location). This is only supported for Premium capacity workspaces.\n- To create a dataflow from a model.json file, set `datasetDisplayName` to *model.json*, as described in [URI parameters](/rest/api/power-bi/imports/post-import-in-group#uri-parameters).\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Dataflows with service principal aren't supported.\n- Importing a **.pbix** file from OneDrive isn't supported.\n\n######\n",
                "operationId": "Imports_PostImport",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetDisplayName",
                        "in": "query",
                        "required": true,
                        "description": "The display name of the dataset, should include file extension. Not supported when importing from OneDrive for Business.",
                        "type": "string"
                    },
                    {
                        "name": "nameConflict",
                        "in": "query",
                        "required": false,
                        "description": "Determines what to do if a dataset with the same name already exists. Default value is 'Ignore'.<br/>Only Abort and Overwrite are supported with Rdl files.",
                        "type": "string",
                        "enum": [
                            "Ignore",
                            "Abort",
                            "Overwrite",
                            "CreateOrOverwrite",
                            "GenerateUniqueName"
                        ],
                        "x-ms-enum": {
                            "name": "ImportConflictHandlerMode",
                            "modelAsExtensible": true,
                            "values": [
                                {
                                    "value": "Ignore",
                                    "description": "If dataset with the same name already exists, Import operation will create a new dataset with the same name."
                                },
                                {
                                    "value": "Abort",
                                    "description": "If dataset with the same name already exists, Import operation will be aborted."
                                },
                                {
                                    "value": "Overwrite",
                                    "description": "If dataset with the same name already exists, Import operation will replace the existing dataset with the new one.<br/>Import operation will fail if there is no conflict or if there are more than one datasets with the same name."
                                },
                                {
                                    "value": "CreateOrOverwrite",
                                    "description": "If dataset with the same name already exists, Import operation will replace the existing dataset with the new one.<br/>Import operation will fail if there are more than one datasets with the same name."
                                },
                                {
                                    "value": "GenerateUniqueName",
                                    "description": "If a dataflow with the same name already exists, Import operation will generate a new unique name for the dataflow."
                                }
                            ]
                        }
                    },
                    {
                        "name": "skipReport",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to skip report import, if specified value must be 'true'. Only supported for PBIX files.",
                        "type": "boolean"
                    },
                    {
                        "name": "overrideReportLabel",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to override existing label on report during republish of PBIX file, service default value is true.",
                        "type": "boolean"
                    },
                    {
                        "name": "overrideModelLabel",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to override existing label on model during republish of PBIX file, service default value is true.",
                        "type": "boolean"
                    },
                    {
                        "name": "importInfo",
                        "in": "body",
                        "description": "The import to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    }
                },
                "x-ms-examples": {
                    "Post import example": {
                        "parameters": {
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "MyReport",
                            "nameConflict": "Ignore",
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data AA...ZZ --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    },
                    "Post import with skipReport example": {
                        "parameters": {
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "MyReport",
                            "nameConflict": "Ignore",
                            "skipReport": true,
                            "overrideReportLabel": true,
                            "overrideModelLabel": true,
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data AA...ZZ --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    },
                    "Import dataflow example": {
                        "parameters": {
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "model.json",
                            "nameConflict": "Abort",
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data name=model.json; filename=model.json Content-Type: application/json [Contents of Model JSON Encoded] --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/myorg/imports/{importId}": {
            "get": {
                "tags": [
                    "Imports"
                ],
                "summary": "Returns the specified import from **My workspace**.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Imports_GetImport",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "description": "The import ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    }
                },
                "x-ms-examples": {
                    "in progress import example": {
                        "parameters": {
                            "importId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "importState": "Publishing",
                                    "createdDateTime": "2018-05-08T14:56:18.477Z",
                                    "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                    "name": "SalesMarketing",
                                    "connectionType": "import",
                                    "source": "Upload",
                                    "datasets": [

                                    ],
                                    "reports": [

                                    ]

                                }
                            }
                        }
                    },
                    "completed import example": {
                        "parameters": {
                            "importId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "importState": "Succeeded",
                                    "createdDateTime": "2018-05-08T14:56:18.477Z",
                                    "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                    "name": "SalesMarketing",
                                    "connectionType": "import",
                                    "source": "Upload",
                                    "datasets": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/imports/createTemporaryUploadLocation": {
            "post": {
                "tags": [
                    "Imports"
                ],
                "summary": "Creates a temporary blob storage upload location for importing large .pbix files that are between 1 GB and 10 GB in size.",
                "description": "\nTo import large .pbix files:\n\n1. Create a temporary upload location using this API call.\n1. Upload the .pbix files using the *shared access signature* URL from the API call response.\n1. Call [Post Import In Group](/rest/api/power-bi/imports/post-import), specifying the *shared access signature* URL in the `fileUrl` parameter of the [request body](/rest/api/power-bi/imports/post-import#request-body).\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nImporting large .pbix files between 1 GB and 10 GB in size is only available for Premium capacity workspaces.\n\n######\n",
                "operationId": "Imports_CreateTemporaryUploadLocation",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemporaryUploadLocation"
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of reports from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<br>**Note:** Paginated reports (rdl) don’t have a dataset. As a result, in the API response for paginated reports, the dataset ID value isn’t displayed.",
                "operationId": "Reports_GetReports",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reports"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com//reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the specified report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetReport",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                    "name": "SalesMarketing",
                                    "webUrl": "https://app.powerbi.com//reports/5b218778-e7a5-4d73-8187-f10824047715",
                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Deletes the specified report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_DeleteReport",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/Clone": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Clones the specified report from **\"My Workspace\"**.",
                "description": "<br/>If after cloning the report and its dataset reside in two different upgraded workspaces or \"My Workspace\", a shared dataset will be created in the report's workspace. <br/>Reports with live connection will lose the live connection when cloning, and will have a direct binding to the target dataset.<br/>**Required scope**: Content.Create<br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <br/>**Required permissions**: Report - Write permissions. Target dataset (if provided) - Build permissions.",
                "operationId": "Reports_CloneReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Clone report parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/Export": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Exports the specified report from **\"My Workspace\"** to a .pbix file.",
                "description": "<br/>**Note**: As a [workaround for fixing timeout issues](/power-bi/developer/embedded/embedded-troubleshoot#how-to-fix-timeout-exceptions-when-using-import-and-export-apis), you can set `preferClientRouting` to true.<br/>Large files are downloaded to a temporary blob. Their URL is returned in the response and stored in the locally downloaded PBIX file.<br/><br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <h2>Restrictions</h2>Export of a report with [Power BI service live connection](https://docs.microsoft.com/power-bi/desktop-report-lifecycle-datasets) after calling [rebind report](/rest/api/power-bi/reports/RebindReport) is not supported. Refer to [Download a report from the Power BI service to Power BI Desktop](https://docs.microsoft.com/power-bi/create-reports/service-export-to-pbix) for requirements and limitations.<br/>",
                "operationId": "Reports_ExportReport",
                "consumes": [],
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "file"
                        },
                        "description": "Exported File"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/UpdateReportContent": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Updates the specified report from **\"My Workspace\"** to have the same content as the report in the request body.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_UpdateReportContent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "UpdateReportContent parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReportContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "sourceReport": {
                                    "sourceReportId": "8e4d5880-81d6-4804-ab97-054665050799",
                                    "sourceWorkspaceId": "2f42a406-a075-4a15-bbf2-97ef958c94cb"
                                },
                                "sourceType": "ExistingReport"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/Rebind": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Rebinds the specified report from **\"My Workspace\"** to the requested dataset.",
                "description": "<br/>If the dataset resides in a different upgraded workspace, a shared dataset will be created in \"My Workspace\".<br/>Reports with live connection will lose the live connection when rebinding, and will have a direct binding to the target dataset.<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <br/>**Required permissions**: Report - Write permissions. Target dataset - Build permissions.",
                "operationId": "Reports_RebindReport",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Rebind report parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RebindReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/pages": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of pages within the specified report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetPages",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pages"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "879445d6-3a9e-4a74-b5ae-7c0ddabf0f11"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "Regional Sales Analysis",
                                            "name": "ReportSection",
                                            "order": "0"
                                        },
                                        {
                                            "displayName": "Geographic Analysis",
                                            "name": "ReportSection1",
                                            "order": "1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/pages/{pageName}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the specified page within the specified report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetPage",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "required": true,
                        "description": "The page name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "879445d6-3a9e-4a74-b5ae-7c0ddabf0f11",
                            "pageName": "ReportSection"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "displayName": "Regional Sales Analysis",
                                    "name": "ReportSection",
                                    "order": "0"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/datasources": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of datasources for the specified RDL report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetDatasources",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "reportId": "cfafbeb1-8037-4d0c-896e-a46fb27ff228"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "MyDatasource",
                                            "datasourceType": "AnalysisServices",
                                            "datasourceId": "f8c56590-43cb-43bf-8daa-233ba2520f51",
                                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e931",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/Default.UpdateDatasources": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Updates the datasources of the specified paginated report from **\"My Workspace\"**. (Preview)",
                "description": "<br/>**Important**: The original datasource and the new datasource must have the exact same schema.<br/>**Required scope**: Reports.ReadWrite.All<br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<h2>Restrictions</h2><ul><li>This operation is only supported for the datasource owner</li><li>Update datasources supports only paginated reports</li><li>Changing datasource type is not supported</li></ul>",
                "operationId": "Reports_UpdateDatasources",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "updateRdlDatasourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRdlDatasourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateRdlDatasourcesRequest": {
                                "updateDetails": [
                                    {
                                        "datasourceName": "SqlDatasource",
                                        "connectionDetails": {
                                            "server": "New-Sql-Server",
                                            "database": "New-Sql-Database"
                                        }
                                    },
                                    {
                                        "datasourceName": "SqlAzureDatasource",
                                        "connectionDetails": {
                                            "server": "New-SqlAzure-Server.windows.net",
                                            "database": "New-SqlAzure-Database"
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/ExportTo": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Exports the specified report from **\"My Workspace\"** to the requested format.",
                "description": "<br/>**Required scope**: (all of the below) <ul><li>Report.ReadWrite.All or Report.Read.All</li><li>Dataset.ReadWrite.All or Dataset.Read.All</li></ul>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<br/><br/>**Limitations:** Check the limitations in the [Export to File API article](https://docs.microsoft.com/power-bi/developer/embedded/export-to#limitations).",
                "operationId": "Reports_ExportToFile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Export to file request parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportReportRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/exports/{exportId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the status of the Export to file job from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetExportToFileStatus",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "required": true,
                        "description": "The export ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/reports/{reportId}/exports/{exportId}/file": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the file of the Export to file job of the specified report from **\"My Workspace\"**.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetFileOfExportToFile",
                "consumes": [

                ],
                "produces": [
                    "application/*",
                    "image/*",
                    "text/csv",
                    "text/xml",
                    "multipart/related"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "required": true,
                        "description": "The export ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "file"
                        },
                        "description": "The exported file"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/dashboards": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns a list of dashboards from **My workspace**.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetDashboards",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboards"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "displayName": "SalesMarketing",
                                            "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "isReadOnly": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Creates a new empty dashboard in **My workspace**.",
                "description": "\n## Required scope\n\nContent.Create\n\n######\n",
                "operationId": "Dashboards_AddDashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "description": "Add dashboard parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddDashboardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "requestParameters": {
                                "name": "SalesMarketing"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "displayName": "SalesMarketing",
                                    "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "isReadOnly": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/dashboards/{dashboardId}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns the specified dashboard from **My workspace**.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetDashboard",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "displayName": "SalesMarketing",
                                    "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "isReadOnly": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/dashboards/{dashboardId}/tiles": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns a list of tiles within the specified dashboard from **My workspace**.",
                "description": "\nSupported tiles include datasets and live tiles that contain an entire report page.\n\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetTiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tiles"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "title": "SalesMarketingTile",
                                            "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "rowSpan": 0,
                                            "colSpan": 0,
                                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/dashboards/{dashboardId}/tiles/{tileId}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns the specified tile within the specified dashboard from **My workspace**.",
                "description": "\nSupported tiles include datasets and live tiles that contain an entire report page.\n\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetTile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tile"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileId": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                    "title": "SalesMarketingTile",
                                    "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                    "rowSpan": 0,
                                    "colSpan": 0,
                                    "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/dashboards/{dashboardId}/tiles/{tileId}/Clone": {
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Clones the specified tile from **My workspace**.",
                "description": "\nWhen a tile is cloned to another workspace and bound to another report and dataset, it's cloned as is with its underlying query containing the original report filters.\n\nIf the target report ID and target dataset are missing, the following can occur:\n- If you're cloning a tile within the same workspace, the report and dataset links will be cloned from the source tile.\n- If you're cloning a tile within a different workspace, report and dataset links will be removed, and the tile will be broken.\n\n## Required scope\n\nDashboard.ReadWrite.All\n\n######\n",
                "operationId": "Dashboards_CloneTile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Clone tile parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneTileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tile"
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups/{groupId}/datasets": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of datasets from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasetsInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasets"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Creates a new dataset in the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_PostDatasetInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataset",
                        "in": "body",
                        "description": "Create dataset parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDatasetRequest"
                        }
                    },
                    {
                        "name": "defaultRetentionPolicy",
                        "description": "The default retention policy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "None",
                            "basicFIFO"
                        ],
                        "x-ms-enum": {
                            "name": "DefaultRetentionPolicy",
                            "modelAsExtensible": true,
                            "values": [
                                {
                                    "value": "None",
                                    "description": "None"
                                },
                                {
                                    "value": "basicFIFO",
                                    "description": "basicFIFO"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "Push example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "defaultRetentionPolicy": "basicFIFO",
                            "dataset": {
                                "name": "SalesMarketing",
                                "defaultMode": "Push",
                                "tables": [
                                    {
                                        "name": "Product",
                                        "columns": [
                                            {
                                                "name": "ProductID",
                                                "dataType": "Int64"
                                            },
                                            {
                                                "name": "Name",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "Category",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "IsCompete",
                                                "dataType": "bool"
                                            },
                                            {
                                                "name": "ManufacturedOn",
                                                "dataType": "DateTime"
                                            },
                                            {
                                                "name": "Sales",
                                                "dataType": "Int64",
                                                "formatString": "Currency"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "201": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "defaultRetentionPolicy": "basicFIFO"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/upstreamDataflows": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of upstream dataflows for datasets from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasetToDataflowsLinksInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetToDataflowLinksResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasetInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "addRowsAPIEnabled": false,
                                    "configuredBy": "john@contoso.com",
                                    "isRefreshable": true,
                                    "isEffectiveIdentityRequired": true,
                                    "isEffectiveIdentityRolesRequired": true,
                                    "isOnPremGatewayRequired": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Deletes the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_DeleteDatasetInGroup",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables": {
            "get": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Returns a list of tables within the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_GetTablesInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tables"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables/{tableName}": {
            "put": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Updates the metadata and schema for the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_PutTableInGroup",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "tableName": "NewProduct",
                                "columns": [
                                    {
                                        "name": "ProductID",
                                        "dataType": "Int64"
                                    },
                                    {
                                        "name": "Name",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "Category",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "IsCompete",
                                        "dataType": "bool"
                                    },
                                    {
                                        "name": "ManufacturedOn",
                                        "dataType": "DateTime"
                                    },
                                    {
                                        "name": "NewColumn",
                                        "dataType": "string"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "NewProduct"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables/{tableName}/rows": {
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Adds new data rows to the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- This API only supports **push datasets**.\n- See [Power BI REST API limitations](/power-bi/developer/automation/api-rest-api-limitations).\n\n######\n",
                "operationId": "Datasets_PostRowsInGroup",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "description": "The dataset ID",
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostRowsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "rows": [
                                    {
                                        "ProductID": 1,
                                        "Name": "Adjustable Race",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 2,
                                        "Name": "LL Crankarm",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 3,
                                        "Name": "HL Mountain Frame - Silver",
                                        "Category": "Bikes",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Deletes all rows from the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API only supports **push datasets**.\n\n######\n",
                "operationId": "Datasets_DeleteRowsInGroup",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshes": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh history for the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nOneDrive refresh history isn't returned.\n\n######\n",
                "operationId": "Datasets_GetRefreshHistoryInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "description": "The requested number of entries in the refresh history. If not provided, the default is all available entries.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshes"
                        }
                    }
                },
                "x-ms-examples": {
                    "in progress refresh example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "status": "Unknown",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "completed refresh example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "status": "Completed",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Failed refresh example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "serviceExceptionJson": "{\"errorCode\":\"ModelRefreshFailed_CredentialsNotSpecified\"}",
                                            "status": "Failed",
                                            "requestId": "11bf290a-346b-48b7-8973-c5df149337ff"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Triggers a refresh for the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- For Shared capacities, a maximum of eight requests per day, which includes refreshes executed using a scheduled refresh.\n- For Premium capacities, the maximum requests per day is only limited by the available resources in the capacity. If available resources are overloaded, refreshes are throttled until the load is reduced. The refresh will fail if throttling exceeds 1 hour.\n\n######\n",
                "operationId": "Datasets_RefreshDatasetInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "refreshRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "refreshRequest": {
                                "notifyOption": "MailOnFailure"
                            }
                        },
                        "responses": {
                            "202": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetRefreshScheduleInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "Refresh Schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [ "Sunday", "Friday", "Saturday" ],
                                    "times": [ "05:00", "11:30", "17:30", "23:00" ],
                                    "enabled": true,
                                    "localTimeZoneId": "UTC",
                                    "notifyOption": "MailOnFailure"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for the specified dataset from the specified workspace.",
                "description": "\nA request that disables the refresh schedule should contain no other changes.\n\nAt least one day must be specified. If no times are specified, then Power BI will use a default single time per day.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThe limit on the number of time slots per day depends on whether a [Premium](/power-bi/admin/service-premium-what-is) or Shared capacity is used.\n\n######\n",
                "operationId": "Datasets_UpdateRefreshScheduleInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetModelRefreshScheduleRequest",
                        "description": "Update Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "change notification option": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "notifyOption": "NoNotification"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "change days and times": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "days": [ "Sunday", "Tuesday", "Friday", "Saturday" ],
                                    "times": [ "07:00", "11:30", "16:00", "23:30" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "update times": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "times": [ "08:00", "16:00" ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "disable scheduled refresh": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "enabled": false
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/directQueryRefreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDirectQueryRefreshScheduleInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "By Days Schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [ "Sunday", "Friday", "Saturday" ],
                                    "times": [ "05:00", "11:30", "17:30", "23:00" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    },
                    "By Frequency Schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "frequency": 15,
                                    "days": [],
                                    "times": [],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from the specified workspace.",
                "description": "\nA request should contain either a set of days and times *or* a valid frequency, but not both. If you choose a set of days without specifying any times, then Power BI will use a default single time per day. Setting the frequency will automatically overwrite the days and times setting.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_UpdateDirectQueryRefreshScheduleInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetDQRefreshScheduleRequest",
                        "description": "Patch DirectQuery or LiveConnection Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "change to frequency based schedule": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "frequency": 30
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "switch to days and times based schedule": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "days": [ "Sunday", "Tuesday", "Friday", "Saturday" ],
                                    "times": [ "07:00", "11:30", "16:00", "23:30" ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "update the times of existing days based schedule": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "times": [ "07:00", "16:30", "23:30" ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/parameters": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of parameters for the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nDatasets with SQL, Oracle, Teradata, and SAP HANA [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections aren't supported.\n\n######\n",
                "operationId": "Datasets_GetParametersInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MashupParameters"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "ServerName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTest.database.windows.net"
                                        },
                                        {
                                            "name": "DatabaseName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTestDB"
                                        },
                                        {
                                            "name": "FromDate",
                                            "type": "DateTime",
                                            "isRequired": true,
                                            "currentValue": "2/8/2002 12:00:00 AM"
                                        },
                                        {
                                            "name": "FilterBlanks",
                                            "type": "Logical",
                                            "isRequired": true,
                                            "currentValue": "TRUE"
                                        },
                                        {
                                            "name": "MaxId",
                                            "type": "Number",
                                            "isRequired": true,
                                            "currentValue": "77"
                                        },
                                        {
                                            "name": "AnyParam",
                                            "type": "Any",
                                            "isRequired": true,
                                            "currentValue": "uu63"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.UpdateParameters": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the parameters values for the specified dataset from the specified workspace.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - If you're using **enhanced dataset metadata**, refresh the dataset to apply the new parameter values.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Datasets created using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those data sources, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections are only supported with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- Datasets with Azure Analysis Services live connections aren't supported.\n- Maximum of 100 parameters per request.\n- All specified parameters must exist in the dataset.\n- Parameters values should be of the expected type.\n- The parameter list cannot be empty or include duplicate parameters.\n- Parameters names are case-sensitive.\n- Parameter `IsRequired` must have a non-empty value.\n- The parameter types `Any` and `Binary` cannot be updated.\n\n######\n",
                "operationId": "Datasets_UpdateParametersInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateMashupParametersRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateMashupParametersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateMashupParametersRequest": {
                                "updateDetails": [
                                    {
                                        "name": "DatabaseName",
                                        "newValue": "NewDB"
                                    },
                                    {
                                        "name": "MaxId",
                                        "newValue": "5678"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/datasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of data sources for the specified dataset from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetDatasourcesInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "direct query model example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "301",
                                            "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False",
                                            "datasourceType": "Sql",
                                            "datasourceId": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "server": "MyServer.database.windows.net",
                                                "database": "MyDatabase"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "cached model example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "AnalysisServices",
                                            "datasourceId": "f8c56590-43cb-43bf-8daa-233ba2520f55",
                                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            }
                                        },
                                        {
                                            "datasourceType": "Web",
                                            "datasourceId": "96e4bb31-7b77-4b6d-8483-d76855639a23",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "url": "http://myWebSource.com"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.UpdateDatasources": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the data sources of the specified dataset from the specified workspace.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - The original data source and the new data source must have the exact same schema.\n> - If you're using **enhanced dataset metadata**, refresh the dataset to get data from the new data sources.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\nThe user must be the dataset owner.\n\n## Limitations\n\n- Datasets created using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those data sources, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- Only these data sources are supported: SQL Server, Azure SQL Server, Azure Analysis Services, Azure Synapse, OData, SharePoint, Teradata, and SAP HANA. For other data sources, use the [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) API call.\n- Changing the data source type isn't supported.\n- Data sources that contain parameters in the connection string aren't supported.\n- Updating data sources that are part of merged or joined tables is only supported if you're using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- For an Advanced Query that reference multiple data sources, only the first data source will be updated. To overcome this limitation, define the data source as a parameter and use the [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) API call.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_UpdateDatasourcesInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateDatasourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateDatasourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasourcesRequest": {
                                "updateDetails": [
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-Sql-Server",
                                                "database": "My-Sql-Database"
                                            }
                                        },
                                        "connectionDetails": {
                                            "server": "New-Sql-Server",
                                            "database": "New-Sql-Database"
                                        }
                                    },
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "http://services.odata.org/V4/Northwind/Northwind.svc"
                                            }
                                        },
                                        "connectionDetails": {
                                            "url": "http://services.odata.org/V4/Odata/Northwind.svc"
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.SetAllConnections": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates all connections for the specified dataset from the specified workspace. This API only supports SQL DirectQuery datasets.",
                "description": "\n> [!IMPORTANT]\n> This API call is deprecated and no longer supported. This API call isn't compatible with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n>\n> Instead use:\n>\n> - [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) to update connections for SQL, Azure Synapse, OData, and SharePoint data sources.\n> - [Update Datasources In Group](/rest/api/power-bi/datasets/update-datasources-in-group) to connections for other data sources.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nSupports SQL DirectQuery datasets.\n\n######\n",
                "operationId": "Datasets_SetAllDatasetConnectionsInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectionDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "parameters": {
                                "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.BindToGateway": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Binds the specified dataset from the specified workspace to the specified gateway, optionally with a given set of data source IDs. If you don’t supply a specific data source ID, the dataset will be bound to the first matching data source in the gateway.",
                "description": "\n> [!IMPORTANT]\n> Add the API caller principal as a data source user on the gateway.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nOnly supports the on-premises data gateway\n\n######\n",
                "operationId": "Datasets_BindToGatewayInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bindToGatewayRequest",
                        "in": "body",
                        "description": "The bind to gateway request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BindToGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example without datasourceIds": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example with datasourceIds": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                "datasourceObjectIds": [ "dc2f2dac-e5e2-4c37-af76-2a0bc10f16cb", "3bfe5d33-ab7d-4d24-b0b5-e2bb8eb01cf5" ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.GetBoundGatewayDatasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateway data sources for the specified dataset from the specified workspace.",
                "description": "\n> [!IMPORTANT]\n> This API is deprecated, use [Get Datasources In Group](/rest/api/power-bi/datasets/get-datasources-in-group) instead.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GetGatewayDatasourcesInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "datasourceType": "Sql",
                                            "connectionDetails": "{\"server\":\"MyServer.database.windows.net\",\"database\":\"MyDatabase\"}"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.DiscoverGateways": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateways that the specified dataset from the specified workspace can be bound to.",
                "description": "\nThis API call is only relevant to datasets that have at least one on-premises connection. For datasets with cloud-only connections, this API call returns an empty list.\n\n## Required scope\n\nDataset.Read.All\n\n######\n",
                "operationId": "Datasets_DiscoverGatewaysInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Gateways"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "name": "My_Sample_Gateway",
                                            "type": "Resource",
                                            "publicKey": {
                                                "exponent": "AQAB",
                                                "modulus": "o6j2....cLk="
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.TakeOver": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Transfers ownership over the specified dataset to the current authorized user.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_TakeOverInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups/{groupId}/imports": {
            "get": {
                "tags": [
                    "Imports"
                ],
                "summary": "Returns a list of imports from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nImporting .pbix files from OneDrive isn't supported.\n\n######\n",
                "operationId": "Imports_GetImportsInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Imports"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                            "importState": "Succeeded",
                                            "createdDateTime": "2018-05-08T14:56:18.477Z",
                                            "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                            "name": "SalesMarketing",
                                            "connectionType": "import",
                                            "source": "Upload",
                                            "datasets": [
                                                {
                                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                                }
                                            ],
                                            "reports": [
                                                {
                                                    "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Imports"
                ],
                "summary": "Creates new content in the specified workspace.",
                "description": "\n> [!NOTE]\n> Supported content:\n>\n> - **.pbix** (Power BI Desktop reports)\n> - **.json** (JSON files)\n> - **.xlsx** (Excel files)\n> - **.rdl** (SQL Server Report Definition Language files)\n\n- To import a file, specify the content type **multipart/form-data** in the request headers and encode the file as [form data](https://www.w3.org/TR/html401/interact/forms.html) in the request body.\n- To import an **.rdl** file, include the file extension in the name specified by `datasetDisplayName`, as described in [URI parameters](/rest/api/power-bi/imports/post-import-in-group#uri-parameters).\n- To import an **.xlsx** file from OneDrive for Business, include the content type **application/json** in the request headers. Include [ImportInfo](/rest/api/power-bi/imports/post-import-in-group#importinfo) with `filePath` set to the .xlsx file path in the request body.\n- To import large **.pbix** files that are between 1 GB and 10 GB in size, see [Create Temporary Upload Location In Group](/rest/api/power-bi/imports/create-temporary-upload-location-in-group). This is only supported for Premium capacity workspaces.\n- To create a dataflow from a model.json file, set `datasetDisplayName` to *model.json*, as described in [URI parameters](/rest/api/power-bi/imports/post-import-in-group#uri-parameters).\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Dataflows with service principal aren't supported.\n- Importing a **.pbix** file from OneDrive isn't supported.\n\n######\n",
                "operationId": "Imports_PostImportInGroup",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetDisplayName",
                        "in": "query",
                        "required": true,
                        "description": "The display name of the dataset should include file extension. Not supported when importing from OneDrive for Business. For importing or creating dataflows, this parameter should be hardcoded to model.json.",
                        "type": "string"
                    },
                    {
                        "name": "nameConflict",
                        "in": "query",
                        "required": false,
                        "description": "Determines what to do if a dataset with the same name already exists. Default value is 'Ignore'.<br/>Only Abort and Overwrite are supported with Rdl files.<br/>Only Abort and GenerateUniqueName are supported with dataflow model.json files.",
                        "type": "string",
                        "enum": [
                            "Ignore",
                            "Abort",
                            "Overwrite",
                            "CreateOrOverwrite",
                            "GenerateUniqueName"
                        ],
                        "x-ms-enum": {
                            "name": "ImportConflictHandlerMode",
                            "modelAsExtensible": true,
                            "values": [
                                {
                                    "value": "Ignore",
                                    "description": "If dataset with the same name already exists, Import operation will create a new dataset with the same name."
                                },
                                {
                                    "value": "Abort",
                                    "description": "If dataset or dataflow with the same name already exists, Import operation will be aborted."
                                },
                                {
                                    "value": "Overwrite",
                                    "description": "If dataset with the same name already exists, Import operation will replace the existing dataset with the new one.<br/>Import operation will fail if there is no conflict or if there are more than one datasets with the same name."
                                },
                                {
                                    "value": "CreateOrOverwrite",
                                    "description": "If dataset with the same name already exists, Import operation will replace the existing dataset with the new one.<br/>Import operation will fail if there are more than one datasets with the same name."
                                },
                                {
                                    "value": "GenerateUniqueName",
                                    "description": "If a dataflow with the same name already exists, Import operation will generate a new unique name for the dataflow."
                                }
                            ]
                        }
                    },
                    {
                        "name": "skipReport",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to skip report import, if specified value must be 'true'. Only supported for PBIX files.",
                        "type": "boolean"
                    },
                    {
                        "name": "overrideReportLabel",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to override existing label on report during republish of PBIX file, service default value is true.",
                        "type": "boolean"
                    },
                    {
                        "name": "overrideModelLabel",
                        "in": "query",
                        "required": false,
                        "description": "Determines whether to override existing label on model during republish of PBIX file, service default value is true.",
                        "type": "boolean"
                    },
                    {
                        "name": "importInfo",
                        "in": "body",
                        "description": "The import to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ImportInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    }
                },
                "x-ms-examples": {
                    "Post import example": {
                        "parameters": {
                            "groupId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "MyReport",
                            "nameConflict": "Ignore",
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data AA...ZZ --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    },
                    "Post import skip report example": {
                        "parameters": {
                            "groupId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "MyReport",
                            "nameConflict": "Ignore",
                            "skipReport": true,
                            "overrideReportLabel": true,
                            "overrideModelLabel": true,
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data AA...ZZ --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    },
                    "Import dataflow model.json example": {
                        "parameters": {
                            "groupId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "consumes": "multipart/form-data;",
                            "boundary": "f05e5244-f876-43b9-bc87-d71598f6b32a",
                            "paramType": "form",
                            "datasetDisplayName": "model.json",
                            "nameConflict": "Abort",
                            "skipReport": true,
                            "importInfo": {
                                "value": "--f05e5244-f876-43b9-bc87-d71598f6b32a Content-Disposition: form-data name=model.json; filename=model.json Content-Type: application/json [Contents of Model JSON Encoded] --f05e5244-f876-43b9-bc87-d71598f6b32a--"
                            }
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "id": "d02b8896-e247-4d83-ae5a-014028cb0665"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/myorg/groups/{groupId}/imports/{importId}": {
            "get": {
                "tags": [
                    "Imports"
                ],
                "summary": "Returns the specified import from the specified workspace.",
                "description": "\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Imports_GetImportInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "importId",
                        "in": "path",
                        "required": true,
                        "description": "The import ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Import"
                        }
                    }
                },
                "x-ms-examples": {
                    "in progress import example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "importId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "importState": "Publishing",
                                    "createdDateTime": "2018-05-08T14:56:18.477Z",
                                    "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                    "name": "SalesMarketing",
                                    "connectionType": "import",
                                    "source": "Upload",
                                    "datasets": [

                                    ],
                                    "reports": [

                                    ]

                                }
                            }
                        }
                    },
                    "completed import example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "importId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "importState": "Succeeded",
                                    "createdDateTime": "2018-05-08T14:56:18.477Z",
                                    "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                    "name": "SalesMarketing",
                                    "connectionType": "import",
                                    "source": "Upload",
                                    "datasets": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/imports/createTemporaryUploadLocation": {
            "post": {
                "tags": [
                    "Imports"
                ],
                "summary": "Creates a temporary blob storage upload location for importing large .pbix files that are between 1 GB and 10 GB in size.",
                "description": "\nTo import large .pbix files:\n\n1. Create a temporary upload location using this API call.\n1. Upload the .pbix files using the *shared access signature* URL from the API call response.\n1. Call [Post Import In Group](/rest/api/power-bi/imports/post-import-in-group), specifying the *shared access signature* URL in the `fileUrl` parameter of the [request body](/rest/api/power-bi/imports/post-import-in-group#request-body).\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nImporting large .pbix files between 1 GB and 10 GB in size is only available for Premium capacity workspaces.\n\n######\n",
                "operationId": "Imports_CreateTemporaryUploadLocationInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemporaryUploadLocation"
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups/{groupId}/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of reports from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<br>**Note:** Paginated reports (rdl) don’t have a dataset. As a result, in the API response for paginated reports, the dataset ID value isn’t displayed.",
                "operationId": "Reports_GetReportsInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reports"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the specified report from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetReportInGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                    "name": "SalesMarketing",
                                    "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Reports"
                ],
                "summary": "Deletes the specified report from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_DeleteReportInGroup",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/Clone": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Clones the specified report from the specified workspace.",
                "description": "<br/>If after cloning the report and its dataset reside in two different upgraded workspaces or \"My Workspace\", a shared dataset will be created in the report's workspace. <br/>Reports with live connection will lose the live connection when cloning, and will have a direct binding to the target dataset.<br/>**Required scope**: Content.Create <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <br/>**Required permissions**: Report - Write permissions. Target dataset (if provided) - Build permissions",
                "operationId": "Reports_CloneReportInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Clone report parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/Export": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Exports the specified report from the specified workspace to a .pbix file.",
                "description": "<br/>**Note**: As a [workaround for fixing timeout issues](/power-bi/developer/embedded/embedded-troubleshoot#how-to-fix-timeout-exceptions-when-using-import-and-export-apis), you can set `preferClientRouting` to true.<br/>Large files are downloaded to a temporary blob. Their URL is returned in the response and stored in the locally downloaded PBIX file.<br/><br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <h2>Restrictions</h2>Export of a report with [Power BI service live connection](https://docs.microsoft.com/power-bi/desktop-report-lifecycle-datasets) after calling [rebind report](/rest/api/power-bi/reports/RebindReport) is not supported. Refer to [Download a report from the Power BI service to Power BI Desktop](https://docs.microsoft.com/power-bi/create-reports/service-export-to-pbix) for requirements and limitations.<br/>",
                "operationId": "Reports_ExportReportInGroup",
                "consumes": [],
                "produces": [
                    "application/zip"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "description": "The report ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "file"
                        },
                        "description": "Exported File"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/UpdateReportContent": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Updates the specified report from the specified workspace to have the same content as the specified report in the request body.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_UpdateReportContentInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "UpdateReportContent parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateReportContentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "sourceReport": {
                                    "sourceReportId": "8e4d5880-81d6-4804-ab97-054665050799",
                                    "sourceWorkspaceId": "2f42a406-a075-4a15-bbf2-97ef958c94cb"
                                },
                                "sourceType": "ExistingReport"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/Rebind": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Rebinds the specified report from the specified workspace to the requested dataset.",
                "description": "<br/>If the dataset resides in a different upgraded workspace or in \"My Workspace\", a shared dataset will be created in the report's workspace.<br/>Reports with live connection will lose the live connection when rebinding, and will have a direct binding to the target dataset.<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app). <br/>**Required permissions**: Report - Write permissions. Target dataset - Build permissions",
                "operationId": "Reports_RebindReportInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Rebind report parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RebindReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/pages": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of pages within the specified report from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetPagesInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pages"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "879445d6-3a9e-4a74-b5ae-7c0ddabf0f11"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "Regional Sales Analysis",
                                            "name": "ReportSection",
                                            "order": "0"
                                        },
                                        {
                                            "displayName": "Geographic Analysis",
                                            "name": "ReportSection1",
                                            "order": "1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/pages/{pageName}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the specified page within the specified report from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetPageInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "pageName",
                        "in": "path",
                        "required": true,
                        "description": "The page name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "879445d6-3a9e-4a74-b5ae-7c0ddabf0f11",
                            "pageName": "ReportSection"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "displayName": "Regional Sales Analysis",
                                    "name": "ReportSection",
                                    "order": "0"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/datasources": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns a list of datasources for the specified RDL report from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Reportt.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetDatasourcesInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "AnalysisServices",
                                            "datasourceId": "f8c56590-43cb-43bf-8daa-233ba2520f55",
                                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/Default.UpdateDatasources": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Updates the datasources of the specified paginated report from the specified workspace. (Preview)",
                "description": "<br/>**Important**: The original datasource and the new datasource must have the exact same schema.<br/>**Required scope**: Reports.ReadWrite.All<br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<h2>Restrictions</h2><ul><li>This operation is only supported for the datasource owner</li><li>Update datasources supports only paginated reports</li><li>Changing datasource type is not supported</li></ul>",
                "operationId": "Reports_UpdateDatasourcesInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "updateRdlDatasourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRdlDatasourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateRdlDatasourcesRequest": {
                                "updateDetails": [
                                    {
                                        "datasourceName": "SqlDatasource",
                                        "connectionDetails": {
                                            "server": "New-Sql-Server",
                                            "database": "New-Sql-Database"
                                        }
                                    },
                                    {
                                        "datasourceName": "SqlAzureDatasource",
                                        "connectionDetails": {
                                            "server": "New-SqlAzure-Server.windows.net",
                                            "database": "New-SqlAzure-Database"
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/ExportTo": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Exports the specified report from the specified workspace to the requested format.",
                "description": "<br/>**Required scope**: (all of the below) <ul><li>Report.ReadWrite.All or Report.Read.All</li><li>Dataset.ReadWrite.All or Dataset.Read.All</li></ul>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<br/><br/>**Limitations:** Check the limitations in the [Export to File API article](https://docs.microsoft.com/power-bi/developer/embedded/export-to#limitations).",
                "operationId": "Reports_ExportToFileInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Export to file request parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportReportRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/exports/{exportId}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the status of the Export to file job from the specified workspace.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetExportToFileStatusInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "required": true,
                        "description": "The export ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Export"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/exports/{exportId}/file": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Returns the file of the Export to file job of the specified report from the specified group.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All or Report.Read.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).",
                "operationId": "Reports_GetFileOfExportToFileInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/*",
                    "image/*",
                    "text/csv",
                    "text/xml",
                    "multipart/related"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "exportId",
                        "in": "path",
                        "required": true,
                        "description": "The export ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "file"
                        },
                        "description": "The exported file"
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns a list of dashboards from the specified workspace.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetDashboardsInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboards"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "displayName": "SalesMarketing",
                                            "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                            "isReadOnly": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Creates a new empty dashboard in the specified workspace.",
                "description": "\n## Required scope\n\nContent.Create\n\n######\n",
                "operationId": "Dashboards_AddDashboardInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Add dashboard parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddDashboardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "requestParameters": {
                                "name": "SalesMarketing"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "displayName": "SalesMarketing",
                                    "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                    "isReadOnly": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns the specified dashboard from the specified workspace.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetDashboardInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                    "displayName": "SalesMarketing",
                                    "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                    "isReadOnly": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}/tiles": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns a list of tiles within the specified dashboard from the specified workspace.",
                "description": "\nSupported tiles include datasets and live tiles that contain an entire report page.\n\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetTilesInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tiles"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "title": "SalesMarketingTile",
                                            "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                            "rowSpan": 0,
                                            "colSpan": 0,
                                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}/tiles/{tileId}": {
            "get": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Returns the specified tile within the specified dashboard from the specified workspace.",
                "description": "\nSupported tiles include datasets and live tiles that contain an entire report page.\n\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n######\n",
                "operationId": "Dashboards_GetTileInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tile"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileId": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                    "title": "SalesMarketingTile",
                                    "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                    "rowSpan": 0,
                                    "colSpan": 0,
                                    "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}/tiles/{tileId}/Clone": {
            "post": {
                "tags": [
                    "Dashboards"
                ],
                "summary": "Clones the specified tile from the specified workspace.",
                "description": "\nWhen a tile is cloned to another workspace and bound to another report and dataset, it's cloned as is with its underlying query containing the original report filters.\n\nIf the target report ID and target dataset are missing, the following can occur:\n- If you're cloning a tile within the same workspace, the report and dataset links will be cloned from the source tile.\n- If you're cloning a tile within a different workspace, report and dataset links will be removed, and the tile will be broken.\n\n## Required scope\n\nDashboard.ReadWrite.All\n\n######\n",
                "operationId": "Dashboards_CloneTileInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Clone tile parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CloneTileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tile"
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups/{groupId}/reports/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token to allow report creation in the specified workspace based on the specified dataset.",
                "description": "\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\nWhen using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Required scope\n\nAll of the following:\n\n- Content.Create\n- Report.ReadWrite.All or Report.Read.All\n- Dataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nFor Azure Analysis Services or Analysis Services on-premises live connection reports, generating an embed token with row-level security may not work for several minutes after a [Rebind Report](/rest/api/power-bi/reports/rebind-report) api call.\n\n######\n",
                "operationId": "Reports_GenerateTokenForCreateInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "Generate EmbedToken for report creation based on specified dataset": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "requestParameters": {
                                "accessLevel": "Create",
                                "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate EmbedToken for report creation based on specified dataset, with EffectiveIdentity": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "requestParameters": {
                                "accessLevel": "Create",
                                "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token to view or edit the specified report from the specified workspace.",
                "description": "\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\nWhen using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Required scope\n\nAll of the following, unless a requirement doesn't apply:\n\n- Report.ReadWrite.All or Report.Read.All\n- Dataset.ReadWrite.All or Dataset.Read.All\n- Content.Create, required if the `allowSaveAs` flag is specified in [GenerateTokenRequest](/rest/api/power-bi/embed-token/reports-generate-token-for-create-in-group#generatetokenrequest)\n\n## Limitations\n\nFor Azure Analysis Services or Analysis Services on-premises live connection reports, generating an embed token with row-level security may not work for several minutes after a [Rebind Report](/rest/api/power-bi/reports/rebind-report).\n\n######\n",
                "operationId": "Reports_GenerateTokenInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "Generate report EmbedToken with EffectiveIdentity": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate report EmbedToken with EffectiveIdentity (Using CustomData for Azure AS)": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "customData": "john_contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate report EmbedToken using EffectiveIdentity with multiple roles": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales", "marketing" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate report EmbedToken using EffectiveIdentity with IdentityBlob": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ],
                                        "identityBlob": {
                                            "value": "eyJ0eX....AAA="
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate report EmbedToken for editing, using EffectiveIdentity": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "Edit",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate report EmbedToken for view and allow saving as new report": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "allowSaveAs": "true"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate paginated report EmbedToken with EffectiveIdentity": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "John Smith",
                                        "reports": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token based on the specified dataset from the specified workspace.",
                "description": "\n> [!NOTE]\n> An embed token can be used to [embed Q&A](/power-bi/developer/qanda) within your application.\n\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\nWhen using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Datasets_GenerateTokenInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "requestParameters": {
                                "accessLevel": "View"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token to view the specified dashboard from the specified workspace.",
                "description": "\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\nWhen using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Required scope\n\nAll of the following:\n\n- Dashboard.ReadWrite.All or Dashboard.Read.All\n- Report.ReadWrite.All or Report.Read.All\n- Dataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Dashboards_GenerateTokenInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "Generate dashboard EmbedToken with multiple identities": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    },
                                    {
                                        "username": "john_contoso",
                                        "roles": [ "product" ],
                                        "datasets": [ "a8b062ca-5730-468f-9df7-43c2ba76bf5e" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate dashboard EmbedToken using EffectiveIdentity with IdentityBlob": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ],
                                        "identityBlob": {
                                            "value": "eyJ0eX....AAA="
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dashboards/{dashboardId}/tiles/{tileId}/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token to view the specified tile from the specified workspace.",
                "description": "\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\nWhen using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Required scope\n\nAll of the following:\n\n- Dashboard.ReadWrite.All or Dashboard.Read.All\n- Report.ReadWrite.All or Report.Read.All\n- Dataset.ReadWrite.All or Dataset.Read.All\n\n######\n",
                "operationId": "Tiles_GenerateTokenInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "Generate tile EmbedToken with effective identity": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileId": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate tile EmbedToken with effective identity (Using CustomData for Azure AS)": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileId": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "customData": "john_contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate tile EmbedToken using EffectiveIdentity with IdentityBlob": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileId": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                            "requestParameters": {
                                "accessLevel": "View",
                                "identities": [
                                    {
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ],
                                        "identityBlob": {
                                            "value": "eyJ0eX....AAA="
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns a list of installed apps.",
                "description": "\n## Required scope\n\nApp.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetApps",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Apps"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                            "description": "The finance app",
                                            "name": "Finance",
                                            "publishedBy": "Bill",
                                            "lastUpdate": "2019-01-13T09:46:53.094+02:00"
                                        },
                                        {
                                            "id": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                            "description": "The marketing app",
                                            "name": "Marketing",
                                            "publishedBy": "Ben",
                                            "lastUpdate": "2018-11-13T09:46:53.094+02:00"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/apps/{appId}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns the specified installed app.",
                "description": "\n## Required scope\n\nApp.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetApp",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                    "description": "The finance app",
                                    "name": "Finance",
                                    "publishedBy": "Bill",
                                    "lastUpdate": "2019-01-13T09:46:53.094+02:00"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/apps/{appId}/reports": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns a list of reports from the specified app.",
                "description": "\n## Required scope\n\nReport.ReadWrite.All or Report.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetReports",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Reports"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "id": "66b2570c-d9d3-40b2-83d9-1095c6700041",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/reports/66b2570c-d9d3-40b2-83d9-1095c6700041",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=66b2570c-d9d3-40b2-83d9-1095c6700041&appId=3d9b93c6-7b6d-4801-a491-1738910904fd&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVNPVVRILUNFTlRSQUwtVVMtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQifQ"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps/{appId}/reports/{reportId}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns the specified report from the specified app.",
                "description": "\n## Required scope\n\nReport.ReadWrite.All or Report.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetReport",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "description": "The report ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Report"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "id": "66b2570c-d9d3-40b2-83d9-1095c6700041",
                                    "name": "SalesMarketing",
                                    "webUrl": "https://app.powerbi.com/reports/66b2570c-d9d3-40b2-83d9-1095c6700041",
                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=66b2570c-d9d3-40b2-83d9-1095c6700041&appId=3d9b93c6-7b6d-4801-a491-1738910904fd&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVNPVVRILUNFTlRSQUwtVVMtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQifQ"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps/{appId}/dashboards": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns a list of dashboards from the specified app.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetDashboards",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboards"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                            "id": "03dac094-2ff8-47e8-b2b9-dedbbc4d22ac",
                                            "displayName": "SalesMarketing",
                                            "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=335aee4b-7b38-48fd-9e2f-306c3fd67482&appId=3d9b93c6-7b6d-4801-a491-1738910904fd&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVNPVVRILUNFTlRSQUwtVVMtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQifQ%3d%3d",
                                            "isReadOnly": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps/{appId}/dashboards/{dashboardId}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns the specified dashboard from the specified app.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetDashboard",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dashboard"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                            "dashboardKey": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                    "id": "03dac094-2ff8-47e8-b2b9-dedbbc4d22ac",
                                    "displayName": "SalesMarketing",
                                    "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=335aee4b-7b38-48fd-9e2f-306c3fd67482&appId=3d9b93c6-7b6d-4801-a491-1738910904fd&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVNPVVRILUNFTlRSQUwtVVMtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQifQ%3d%3d",
                                    "isReadOnly": false
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps/{appId}/dashboards/{dashboardId}/tiles": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns a list of tiles within the specified dashboard from the specified app.",
                "description": "\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetTiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tiles"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                            "dashboardKey": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "title": "SalesMarketingTile",
                                            "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly9XQUJJLVNPVVRILUNFTlRSQUwtVVMtcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQifQ%3d%3d",
                                            "rowSpan": 0,
                                            "colSpan": 0,
                                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/apps/{appId}/dashboards/{dashboardId}/tiles/{tileId}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Returns the specified tile within the specified dashboard from the specified app.",
                "description": "\nSupported tiles include datasets and live tiles that contain an entire report page.\n\n## Required scope\n\nDashboard.ReadWrite.All or Dashboard.Read.All\n\n## Limitations\n\nService principal authentication isn't supported.\n\n######\n",
                "operationId": "Apps_GetTile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "required": true,
                        "description": "The app ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tileId",
                        "description": "The tile ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tile"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                            "dashboardKey": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                            "tileKey": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                    "title": "SalesMarketingTile",
                                    "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                    "rowSpan": 0,
                                    "colSpan": 0,
                                    "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                    "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}": {
            "get": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Exports the specified dataflow definition to a JSON file.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All or Dataflow.Read.All\n\n######\n",
                "operationId": "Dataflows_GetDataflow",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exported Json file",
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Deletes a dataflow from Power BI data prep storage, including its definition file and model.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_DeleteDataflow",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021bd3a80abd",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Updates dataflow properties, capabilities and settings.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_UpdateDataflow",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowUpdateRequest",
                        "description": "Patch dataflow properties, capabilities and settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataflowUpdateRequestMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021bd3a80abd",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce",
                            "dataflowUpdateRequest": {
                                "name": "newDataflowName",
                                "description": "New dataflow description",
                                "allowNativeQueries": "false",
                                "computeEngineBehavior": "computeOptimized"
                            }
                        },
                        "responses": {
                            "200": {
                                "description": "Ok"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}/refreshes": {
            "post": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Triggers a refresh for the specified dataflow.",
                "description": "\nSupported email notification options are **MailOnFailure** and **NoNotification**. **MailOnCompletion** isn't supported.\n\n## Required scope\n\nDataflow.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_RefreshDataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RefreshRequest"
                        }
                    },
                    {
                        "name": "processType",
                        "description": "Type of refresh process to use.",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid",
                        "enum": [
                            "default",
                            "processFull"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021bd3a80abd",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce",
                            "refreshRequest": {
                                "notifyOption": "MailOnFailure"
                            },
                            "processType": "default"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}/datasources": {
            "get": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Returns a list of data sources for the specified dataflow.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All or Dataflow.Read.All\n\n######\n",
                "operationId": "Dataflows_GetDataflowDataSources",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021bd3a80abd",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "Sql",
                                            "datasourceId": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "server": "MyServer.database.windows.net",
                                                "database": "MyDatabase"
                                            }
                                        },
                                        {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "https://services.odata.org/V4/Northwind/Northwind.svc"
                                            },
                                            "datasourceId": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows": {
            "get": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Returns a list of all dataflows from the specified workspace.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All or Dataflow.Read.All\n\n######\n",
                "operationId": "Dataflows_GetDataflows",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataflows"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "a2f89923-421a-464e-bf4c-25eab39bb09f"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "objectId": "bd32e5c0-363f-430b-a03b-5535a4804b9b",
                                            "name": "AdventureWorks",
                                            "description": "Our Adventure Works",
                                            "modelUrl": "https://MyDataflowStorageAccount.dfs.core.windows.net/powerbi/contoso/AdventureWorks/model.json"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}/upstreamDataflows": {
            "get": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Returns a list of upstream dataflows for the specified dataflow.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All or Dataflow.Read.All\n\n######\n",
                "operationId": "Dataflows_GetUpstreamDataflowsInGroup",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DependentDataflows"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}/refreshSchedule": {
            "patch": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Creates or updates the refresh schedule for a specified dataflow.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_UpdateRefreshSchedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshScheduleRequest",
                        "in": "body",
                        "description": "The dataflow refresh schedule to create or update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Every day schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce",
                            "refreshScheduleRequest": {
                                "value": {
                                    "days": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "times": [
                                        "10:00",
                                        "16:00"
                                    ],
                                    "enabled": true,
                                    "localTimeZoneId": "UTC",
                                    "notifyOption": "NoNotification"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Update times schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce",
                            "refreshScheduleRequest": {
                                "value": {
                                    "times": [
                                        "10:30",
                                        "16:30"
                                    ],
                                    "enabled": true,
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Disable schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce",
                            "refreshScheduleRequest": {
                                "value": {
                                    "enabled": false
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/{dataflowId}/transactions": {
            "get": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Returns a list of transactions for the specified dataflow.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All or Dataflow.Read.All\n\n######\n",
                "operationId": "Dataflows_GetDataflowTransactions",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataflowTransactions"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021bd3a80abd",
                            "dataflowId": "928228ba-008d-4fd9-864a-92d2752ee5ce"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "@odata.context": "http://someserver.analysis.windows.net/v1.0/myorg/groups/98674fdf-baab-45e1-a04a-c17ab378dce1/$metadata#transactions",
                                    "value": [
                                        {
                                            "id": "2020-08-27T16:07:47.2487692Z@8dbd8c92-4d16-4947-8329-4172f04f4f93$2"
                                        },
                                        {
                                            "id": "2020-08-26T16:40:55.0968787Z@e33eed4d-5b1a-4bb9-8b5b-dff1cd371109$1",
                                            "refreshType": "OnDemand"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/dataflows/transactions/{transactionId}/cancel": {
            "post": {
                "tags": [
                    "Dataflows"
                ],
                "summary": "Attempts to cancel the specified transactions.",
                "description": "\n## Required scope\n\nDataflow.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_CancelDataflowTransaction",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "transactionId",
                        "description": "The transaction ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataflowTransactionStatus"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "51e47fc5-48fd-4826-89f0-021111110abd",
                            "transactionId": "2020-09-11T19:21:52.8778432Z@9cc7a369-6112-4dba-97b6-b07ff5699568$1374282"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "transactionId": "2020-09-11T19:21:52.8778432Z@9cc7a369-6112-4dba-97b6-b07ff5699568$1374282",
                                    "status": "SuccessfullyMarked"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/gateways": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Returns a list of gateways for which the user is an admin.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetGateways",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Gateways"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "name": "My_Sample_Gateway",
                                            "type": "Resource",
                                            "publicKey": {
                                                "exponent": "AQAB",
                                                "modulus": "o6j2....cLk="
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Returns the specified gateway.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetGateway",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Gateway"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                    "name": "My_Sample_Gateway",
                                    "type": "Resource",
                                    "publicKey": {
                                        "exponent": "AQAB",
                                        "modulus": "o6j2....cLk="
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}/datasources": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Returns a list of data sources from the specified gateway.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetDatasources",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "datasourceType": "Sql",
                                            "connectionDetails": "{\"server\":\"localSQL\",\"database\":\"salesDB\"}",
                                            "credentialType": "Windows",
                                            "datasourceName": "SQL Datasource"
                                        },
                                        {
                                            "id": "91f8aec2-4b32-476f-909b-3241999620ec",
                                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "datasourceType": "AnalysisServices",
                                            "connectionDetails": "{\"server\":\"localAS\",\"database\":\"marketingDB\"}",
                                            "credentialType": "Windows",
                                            "datasourceName": "AS Datasource"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Creates a new data source on the specified gateway.",
                "description": "\nTo encrypt credentials, see [Configure credentials programmatically](/power-bi/developer/automation/configure-credentials).\n\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_CreateDatasource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceToGatewayRequest",
                        "in": "body",
                        "description": "The datasource requested to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishDatasourceToGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasource"
                        }
                    }
                },
                "x-ms-examples": {
                    "SQL": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "datasourceToGatewayRequest": {
                                "dataSourceType": "SQL",
                                "connectionDetails": "{\"server\":\"MyServer\",\"database\":\"MyDatabase\"}",
                                "datasourceName": "Sample Datasource",
                                "credentialDetails": {
                                    "credentialType": "Windows",
                                    "credentials": "AB....EF==",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "RSA-OAEP",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Analysis Services": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "datasourceToGatewayRequest": {
                                "dataSourceType": "AnalysisServices",
                                "connectionDetails": "{\"server\":\"MyServer\",\"database\":\"MyDatabase\"}",
                                "datasourceName": "Sample Datasource",
                                "credentialDetails": {
                                    "credentialType": "Windows",
                                    "credentials": "AB....EF==",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "RSA-OAEP",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}/datasources/{datasourceId}": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Returns the specified data source from the specified gateway.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetDatasource",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasource"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                                    "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                    "datasourceType": "Sql",
                                    "connectionDetails": "{\"server\":\"MyServer\",\"database\":\"MyDatabase\"}",
                                    "credentialType": "Windows",
                                    "datasourceName": "Sample Datasource"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Deletes the specified data source from the specified gateway.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_DeleteDatasource",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Updates the credentials of the specified data source from the specified gateway.",
                "description": "\n- Set the parameter `useEndUserOAuth2Credentials` to `False` when changing from single sign-on to other credential types, such as **Basic** or **OAuth2**. See the [Basic credentials example](/rest/api/power-bi/gateways/update-datasource#basic-credentials-example).\n- To encrypt credentials, see [Configure credentials programmatically](/power-bi/developer/automation/configure-credentials).\n- For the **OAuth2** credential type, make sure the generated OAuth2 token audience was set correctly according to the data source type.\n- For **Extension** data sources, don't set `useCallerAADIdentity` to `true`. To set **OAuth2** credentials for other data sources, send the OAuth2 token in the payload as shown in the [OAuth2 credentials example](/rest/api/power-bi/gateways/update-datasource#oauth2-credentials-example).\n\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_UpdateDatasource",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "updateDatasourceRequest",
                        "in": "body",
                        "description": "The update datasource request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateDatasourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Basic credentials example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "updateDatasourceRequest": {
                                "credentialDetails": {
                                    "credentialType": "Basic",
                                    "credentials": "{\"credentialData\":[{\"name\":\"username\", \"value\":\"john\"},{\"name\":\"password\", \"value\":\"*****\"}]}",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "None",
                                    "privacyLevel": "None",
                                    "useEndUserOAuth2Credentials": "False"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Windows credentials example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "updateDatasourceRequest": {
                                "credentialDetails": {
                                    "credentialType": "Windows",
                                    "credentials": "{\"credentialData\":[{\"name\":\"username\", \"value\":\"contoso\\john\"},{\"name\":\"password\", \"value\":\"*****\"}]}",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "None",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Anonymous credentials example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "updateDatasourceRequest": {
                                "credentialDetails": {
                                    "credentialType": "Anonymous",
                                    "credentials": "{\"credentialData\":\"\"}",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "None",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "OAuth2 credentials example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "updateDatasourceRequest": {
                                "credentialDetails": {
                                    "credentialType": "OAuth2",
                                    "credentials": "{\"credentialData\":[{\"name\":\"accessToken\", \"value\":\"eyJ0....fwtQ\"}]}",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "None",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Key credentials example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "updateDatasourceRequest": {
                                "credentialDetails": {
                                    "credentialType": "Key",
                                    "credentials": "{\"credentialData\":[{\"name\":\"key\", \"value\":\"ec....LA=\"}]}",
                                    "encryptedConnection": "Encrypted",
                                    "encryptionAlgorithm": "None",
                                    "privacyLevel": "None"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}/datasources/{datasourceId}/status": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Checks the connectivity status of the specified data source from the specified gateway.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetDatasourceStatus",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Gateway unreachable example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970"
                        },
                        "responses": {
                            "400": {
                                "body": {
                                    "error": {
                                        "code": "DM_GWPipeline_Client_GatewayUnreachable",
                                        "pbi.error": {
                                            "code": "DM_GWPipeline_Client_GatewayUnreachable",
                                            "parameters": {},
                                            "details": [],
                                            "exceptionCulprit": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}/datasources/{datasourceId}/users": {
            "get": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Returns a list of users who have access to the specified data source.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_GetDatasourceUsers",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasourceUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "datasourceAccessRight": "Read",
                                        "displayName": "John Nick",
                                        "emailAddress": "john@contoso.com",
                                        "identifier": "john@contoso.com",
                                        "principalType": "User"
                                    },
                                    {
                                        "datasourceAccessRight": "ReadOverrideEffectiveIdentity",
                                        "displayName": "ContosoTestApp",
                                        "identifier": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "principalType": "App"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Grants or updates the permissions required to use the specified data source for the specified user.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_AddDatasourceUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "addUserToDatasourceRequest",
                        "in": "body",
                        "description": "The add user to datasource request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatasourceUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "addUserToDatasourceRequest": {
                                "emailAddress": "john@contoso.com",
                                "datasourceAccessRight": "Read"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example for giving ReadOverrideEffectiveIdentity access right to a service principal": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "addUserToDatasourceRequest": {
                                "identifier": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                "datasourceAccessRight": "ReadOverrideEffectiveIdentity"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/gateways/{gatewayId}/datasources/{datasourceId}/users/{emailAdress}": {
            "delete": {
                "tags": [
                    "Gateways"
                ],
                "summary": "Removes the specified user from the specified data source.",
                "description": "\n## Permissions\n\nThe user must have gateway admin permissions.\n\n## Required scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nVirtual network (VNet) gateways aren't supported.\n\n######\n",
                "operationId": "Gateways_DeleteDatasourceUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "gatewayId",
                        "in": "path",
                        "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster. In such cases, gateway ID is similar to gateway cluster ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasourceId",
                        "in": "path",
                        "description": "The datasource ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "emailAdress",
                        "in": "path",
                        "description": "The user's email address or the object ID of the service principal",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "gatewayId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                            "datasourceId": "252b9de8-d915-4788-aaeb-ec8c2395f970",
                            "emailAdress": "john@contoso.com"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Returns a list of workspaces the user has access to.",
                "description": "\nWhen user permissions to a workspace have been recently updated, the new permissions might not be immediately available through API calls. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n## Required scope\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_GetGroups",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Groups"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "sample group"
                                    },
                                    {
                                        "id": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "marketing group"
                                    },
                                    {
                                        "id": "a2f89923-421a-464e-bf4c-25eab39bb09f",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "contoso",
                                        "dataflowStorageId": "d692ae06-708c-485e-9987-06ff0fbdbb1f"
                                    }
                                ]
                            }
                        }
                    },
                    "example with filter": {
                        "parameters": {
                            "$filter": "$filter=contains(name,'marketing')%20or%20name%20eq%20'contoso'"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "marketing group"
                                    },
                                    {
                                        "id": "a2f89923-421a-464e-bf4c-25eab39bb09f",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "contoso",
                                        "dataflowStorageId": "d692ae06-708c-485e-9987-06ff0fbdbb1f"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Creates a new workspace.",
                "description": "\n## Required scope\n\nWorkspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_CreateGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "description": "Create group request parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupCreationRequest"
                        }
                    },
                    {
                        "name": "workspaceV2",
                        "in": "query",
                        "required": false,
                        "description": "Preview feature: Create a workspace V2. The only supported value is true.",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "requestParameters": {
                                "name": "sample group"
                            }
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "sample group"
                                    }
                                ]
                            }
                        }
                    },
                    "example creating a workspace V2": {
                        "parameters": {
                            "requestParameters": {
                                "name": "sample workspace V2"
                            },
                            "workspaceV2": true
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                        "isOnDedicatedCapacity": false,
                                        "name": "sample workspace V2"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}": {
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes the specified workspace.",
                "description": "\n## Required scope\n\nWorkspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_DeleteGroup",
                "consumes": [
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID to delete",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/users": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Returns a list of users that have access to the specified workspace.",
                "description": "\nWhen user permissions to a workspace have been recently updated, the new permissions might not be immediately available through API calls. As a result, this API call might return an HTTP 401 error when a user has permissions to a workspace. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n## Required scope\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_GetGroupUsers",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "displayName": "John Nick",
                                        "emailAddress": "john@contoso.com",
                                        "groupUserAccessRight": "Admin",
                                        "identifier": "john@contoso.com",
                                        "principalType": "User"
                                    },
                                    {
                                        "displayName": "Adam Wood",
                                        "emailAddress": "Adam@contoso.com",
                                        "groupUserAccessRight": "Member",
                                        "identifier": "Adam@contoso.com",
                                        "principalType": "User"
                                    },
                                    {
                                        "displayName": "ContosoTestApp",
                                        "groupUserAccessRight": "Admin",
                                        "identifier": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "principalType": "App"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Grants the specified user the specified permissions to the specified workspace.",
                "description": "\nWhen user permissions to a workspace have been recently updated, the new permissions might not be immediately available through API calls. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n## Required scope\n\nWorkspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_AddGroupUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userDetails",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "userDetails": {
                                "emailAddress": "john@contoso.com",
                                "groupUserAccessRight": "Admin"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example for giving Admin access right to a service principal": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "userDetails": {
                                "identifier": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                "groupUserAccessRight": "Admin",
                                "principalType": "App"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Updates the specified user permissions to the specified workspace.",
                "description": "\nWhen user permissions to a workspace have been recently updated, the new permissions might not be immediately available through API calls. To refresh user permissions, use the [Refresh User Permissions](/rest/api/power-bi/users/refresh-user-permissions) API call.\n\n## Required scope\n\nWorkspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_UpdateGroupUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userDetails",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "userDetails": {
                                "emailAddress": "john@contoso.com",
                                "groupUserAccessRight": "Admin"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "example for giving Admin access right to a service principal": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "userDetails": {
                                "identifier": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                "groupUserAccessRight": "Admin",
                                "principalType": "App"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/users/{user}": {
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes the specified user permissions from the specified workspace.",
                "description": "\n## Required scope\n\nWorkspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_DeleteUserInGroup",
                "consumes": [
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The email address of the user or object ID of the service principal to delete",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "user": "john@contoso.com"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/capacities": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns a list of capacities that the user has access to.",
                "description": "\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetCapacities",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Capacities"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                        "displayName": "MyCapacity",
                                        "admins": [ "john@contoso.com" ],
                                        "sku": "A1",
                                        "state": "Active",
                                        "region": "West Central US",
                                        "capacityUserAccessRight": "Admin"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/capacities/{capacityId}/Workloads": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns the current state of the specified capacity workloads. If the workload is enabled, the percentage of maximum memory that the workloads can consume is also returned.",
                "description": "\nWorkload APIs are not relevant for [Embedded Gen2](/power-bi/developer/embedded/power-bi-embedded-generation-2) capacities.\n\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetWorkloads",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "in": "path",
                        "description": "The capacity ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Workloads"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "state": "Enabled",
                                        "name": "Dataflows",
                                        "maxMemoryPercentageSetByUser": "66"
                                    },
                                    {
                                        "state": "Disabled",
                                        "name": "PaginatedReports"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/capacities/{capacityId}/Workloads/{workloadName}": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns the current state of a workload. If the workload is enabled, the percentage of maximum memory that the workload can consume is also returned.",
                "description": "\nWorkload APIs are not relevant for [Embedded Gen2](/power-bi/developer/embedded/power-bi-embedded-generation-2) capacities.\n\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetWorkload",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "in": "path",
                        "description": "The capacity ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "workloadName",
                        "in": "path",
                        "description": "The name of the workload",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Workload"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                            "workloadName": "Dataflows"
                        },
                        "responses": {
                            "200": {
                                "value": {
                                    "state": "Enabled",
                                    "name": "Dataflows",
                                    "maxMemoryPercentageSetByUser": "66"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Changes the state of a specific workload to *Enabled* or *Disabled*. When enabling a workload, specify the percentage of maximum memory that the workload can consume.",
                "description": "\nWorkload APIs are not relevant for [Embedded Gen2](/power-bi/developer/embedded/power-bi-embedded-generation-2) capacities.\n\n## Required scope\n\nCapacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_PatchWorkload",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "in": "path",
                        "description": "The capacity ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "workloadName",
                        "in": "path",
                        "description": "The name of the workload",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workload",
                        "in": "body",
                        "description": "Patch workload parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PatchWorkloadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                            "workloadName": "Dataflows",
                            "workload": {
                                "state": "Enabled",
                                "maxMemoryPercentageSetByUser": "66"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/capacities/refreshables": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns a list of refreshables for all capacities that the user has access to.",
                "description": "\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetRefreshables",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results.",
                        "required": true,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshables with capacities and groups expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshes with an average duration greater than thirty minutes": {
                        "parameters": {
                            "$filter": "averageDuration gt 1800"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 3289.3814,
                                            "medianDuration": 2268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:58:05.221Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }

                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/capacities/{capacityId}/refreshables": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns a list of refreshables for the specified capacity that the user has access to.",
                "description": "\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetRefreshablesForCapacity",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results.",
                        "required": true,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshables with capacities and groups expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshes with an average duration greater than thirty minutes": {
                        "parameters": {
                            "$filter": "averageDuration gt 1800"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 3289.3814,
                                            "medianDuration": 2268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:58:05.221Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }

                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/capacities/{capacityId}/refreshables/{refreshableId}": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Returns the specified refreshable for the specified capacity that the user has access to.",
                "description": "\n## Required scope\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetRefreshableForCapacity",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshableId",
                        "description": "The refreshable ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshable with capacity and group expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/AssignToCapacity": {
            "post": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Assigns **My Workspace** to the specified capacity.",
                "description": "\nTo unassign **My Workspace** from a capacity, provide an empty Guid (00000000-0000-0000-0000-000000000000) as the `capacityId`.\n\n## Permissions\n\nThe user must have administrator rights or assign permissions on the capacity.\n\n## Required scope\n\nCapacity.ReadWrite.All and Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_AssignMyWorkspaceToCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "in": "body",
                        "description": "Assign to capacity parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignToCapacityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "requestParameters": {
                                "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/AssignToCapacity": {
            "post": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Assigns the specified workspace to the specified capacity.",
                "description": "\nTo unassign **My Workspace** from a capacity, provide an empty Guid (00000000-0000-0000-0000-000000000000) as the `capacityId`.\n\n## Permissions\n\nThe user must have administrator rights or assign permissions on the capacity.\n\n## Required scope\n\nCapacity.ReadWrite.All and Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_AssignToCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "in": "body",
                        "description": "Assign to capacity parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignToCapacityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "requestParameters": {
                                "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/CapacityAssignmentStatus": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Gets the status of the **My Workspace** assignment-to-capacity operation.",
                "description": "\n## Required scope\n\nWorkspace.Read.All and Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_CapacityAssignmentStatusMyWorkspace",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceCapacityAssignmentStatus"
                        }
                    }
                },
                "x-ms-examples": {
                    "Assignment to shared capacity status example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "status": "CompletedSuccessfully",
                                    "activityId": "dec4010c-9aad-edb6-0063-94b313cfe121",
                                    "startTime": "2017-06-13T09:25:43.153Z",
                                    "endTime": "2017-06-13T09:26:43.153Z",
                                    "capacityId": "00000000-0000-0000-0000-000000000000"
                                }
                            }
                        }
                    },
                    "Assignment in progress status example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "status": "InProgress",
                                    "startTime": "2017-06-13T09:25:43.153Z",
                                    "capacityId": "EC719732-EC80-4034-8053-0026BD5996D4"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/CapacityAssignmentStatus": {
            "get": {
                "tags": [
                    "Capacities"
                ],
                "summary": "Gets the status of the assignment-to-capacity operation for the specified workspace.",
                "description": "\n## Permissions\n\nThe user must have administrator rights or assign permissions on the capacity.\n\n## Required scope\n\nWorkspace.Read.All and Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_CapacityAssignmentStatus",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceCapacityAssignmentStatus"
                        }
                    }
                },
                "x-ms-examples": {
                    "Assignment completed successfully status example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "status": "CompletedSuccessfully",
                                    "activityId": "dec4010c-9aad-edb6-0063-94b313cfe121",
                                    "startTime": "2017-06-13T09:25:43.153Z",
                                    "endTime": "2017-06-13T09:26:43.153Z",
                                    "capacityId": "EC719732-EC80-4034-8053-0026BD5996D4"
                                }
                            }
                        }
                    },
                    "Assignment in progress status example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "status": "InProgress",
                                    "startTime": "2017-06-13T09:25:43.153Z",
                                    "capacityId": "EC719732-EC80-4034-8053-0026BD5996D4"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/availableFeatures": {
            "get": {
                "tags": [
                    "AvailableFeatures"
                ],
                "summary": "Returns a list of available features for the user.",
                "description": "\nThis API doesn't require any scopes.\n\n######\n",
                "operationId": "AvailableFeatures_GetAvailableFeatures",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AvailableFeatures"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "features": [
                                        {
                                            "name": "embedTrial",
                                            "state": "Enabled",
                                            "extendedState": "Enabled",
                                            "additionalInfo": {
                                                "usage": 65
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/availableFeatures(featureName='{featureName}')": {
            "get": {
                "tags": [
                    "AvailableFeatures"
                ],
                "summary": "Returns the specified available feature for the user by name.",
                "description": "\nThis API doesn't require any scopes.\n\n######\n",
                "operationId": "AvailableFeatures_GetAvailableFeatureByName",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "featureName",
                        "description": "The feature name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AvailableFeature"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "featureName": "embedTrial"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "embedTrial",
                                    "state": "Enabled",
                                    "extendedState": "Enabled",
                                    "additionalInfo": {
                                        "usage": 65
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/pipelines": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns a list of deployment pipelines that the user has access to.",
                "description": "\n## Required scope\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n######\n",
                "operationId": "Pipelines_GetPipelines",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pipelines"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                        "displayName": "Marketing Deployment Pipeline",
                                        "description": "Power BI deployment pipeline to manage marketing reports"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Creates a new deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n######\n",
                "operationId": "Pipelines_CreatePipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "createPipelineRequest",
                        "in": "body",
                        "description": "The create pipeline request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePipelineRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                },
                "x-ms-examples": {
                    "Create a deployment pipeline": {
                        "parameters": {
                            "createPipelineRequest": {
                                "displayName": "My Deployment Pipeline Name",
                                "description": "My deployment pipeline description"
                            }
                        },
                        "responses": {
                            "201": {
                                "body": {
                                    "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                    "displayName": "My Deployment Pipeline Name",
                                    "description": "My deployment pipeline description"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipeline",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$expand",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: stages",
                        "in": "query",
                        "type": "string",
                        "required": false,
                        "default": "stages"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get pipeline without using expand stages": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                    "displayName": "Marketing Deployment Pipeline",
                                    "description": "Power BI deployment pipeline to manage marketing reports"
                                }
                            }
                        }
                    },
                    "Get pipeline using expand stages": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "$expand": "stages"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                    "displayName": "My Deployment Pipeline",
                                    "description": "My deployment pipeline",
                                    "stages": [
                                        {
                                            "order": 0,
                                            "workspaceId": "4de5bcc4-2c88-4efe-b827-4ee7b289b496",
                                            "workspaceName": "Workpsace-Development"
                                        },
                                        {
                                            "order": 1,
                                            "workspaceId": "44b499cf-1eeb-45e2-9ada-63b6ec9d516e"
                                        },
                                        {
                                            "order": 2
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Updates the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n######\n",
                "operationId": "Pipelines_UpdatePipeline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "updatePipelineRequest",
                        "in": "body",
                        "description": "The update pipeline request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePipelineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                },
                "x-ms-examples": {
                    "Updates a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "updatePipelineRequest": {
                                "displayName": "Updated Deployment Pipeline Name",
                                "description": "Updated deployment pipeline description"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                    "displayName": "Updated Deployment Pipeline Name",
                                    "description": "Updated deployment pipeline description"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Deletes the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n## Limitations\n\nThis operation will fail if there's an active deployment operation.\n\n######\n",
                "operationId": "Pipelines_DeletePipeline",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Delete a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/users": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns a list of users that have access to the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipelineUsers",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get users of a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "identifier": "john@contoso.com",
                                        "accessRight": "Admin",
                                        "principalType": "User"
                                    },
                                    {
                                        "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                        "accessRight": "Admin",
                                        "principalType": "Group"
                                    },
                                    {
                                        "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d",
                                        "accessRight": "Admin",
                                        "principalType": "App"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Grants user permissions to the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n######\n",
                "operationId": "Pipelines_UpdatePipelineUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "required": true,
                        "description": "The deployment pipeline ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userDetails",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PipelineUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Add user to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "john@contoso.com",
                                "accessRight": "Admin",
                                "principalType": "User"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Add group to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                "accessRight": "Admin",
                                "principalType": "Group"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Add service principal to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d",
                                "accessRight": "Admin",
                                "principalType": "App"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/users/{identifier}": {
            "delete": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Removes user permissions from the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n######\n",
                "operationId": "Pipelines_DeletePipelineUser",
                "consumes": [
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "required": true,
                        "description": "The deployment pipeline ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "description": "To delete user pipeline permissions, provide the user's User Principal Name (UPN). To delete a service principal or a security group's pipeline permissions, provide the Object ID of the service principal or security group.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Delete user access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "john@contoso.com"
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Delete group access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "5dba60b0-d9a7-42a3-b12c-6d9d51e7739a"
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Delete service principal access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/stages": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns the stages of the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipelineStages",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineStages"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get stages of a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "order": 0,
                                            "workspaceId": "4de5bcc4-2c88-4efe-b827-4ee7b289b496",
                                            "workspaceName": "Workpsace-Development"
                                        },
                                        {
                                            "order": 1,
                                            "workspaceId": "44b499cf-1eeb-45e2-9ada-63b6ec9d516e"
                                        },
                                        {
                                            "order": 2
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
            },
        "/v1.0/myorg/pipelines/{pipelineId}/stages/{stageOrder}/assignWorkspace": {
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Assigns the specified workspace to the specified deployment pipeline stage.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All and Workspace.ReadWrite.All\n\n## Limitations\n\n- The specified deployment pipeline stage is not already assigned.\n- You must be an admin of the specified workspace.\n- The specified workspace is not assigned to any other deployment pipeline.\n- This operation will fail if there's an active deployment operation.\n\n######\n",
                "operationId": "Pipelines_AssignWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stageOrder",
                        "in": "path",
                        "description": "The deployment pipeline stage order. Development (0), Test (1), Production (2).",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "assignWorkspaceRequest",
                        "in": "body",
                        "description": "The assign workspace request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Assign a workspace to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "stageOrder": 0,
                            "assignWorkspaceRequest": {
                                "workspaceId": "4de5bcc4-2c88-4efe-b827-4ee7b289b496"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/stages/{stageOrder}/unassignWorkspace": {
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Unassigns the workspace from the specified stage in the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All\n\n## Limitations\n\nThis operation will fail if there's an active deployment operation.\n\n######\n",
                "operationId": "Pipelines_UnassignWorkspace",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stageOrder",
                        "in": "path",
                        "description": "The deployment pipeline stage order. Development (0), Test (1), Production (2).",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Unassign a workspace from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "stageOrder": 0
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/stages/{stageOrder}/artifacts": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns the supported items from the workspace assigned to the specified stage of the specified deployment pipeline.",
                "description": "\nTo learn about items that aren't supported in deployment pipelines, see [Unsupported items](/power-bi/create-reports/deployment-pipelines-process#unsupported-items).\n\n## Permissions\n\nThe user must at least be a contributor on the workspace assigned to the specified stage. For more information, see [Permissions](/power-bi/create-reports/deployment-pipelines-process#permissions).\n\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipelineStageArtifacts",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "stageOrder",
                        "in": "path",
                        "description": "The deployment pipeline stage order. Development (0), Test (1), Production (2).",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineStageArtifacts"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get test stage artifacts": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "stageOrder": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "dataflows": [
                                        {
                                            "artifactId": "527700ab-3cdb-4637-8402-912a129b2a92",
                                            "artifactDisplayName": "Sales Dataflow",
                                            "sourceArtifactId": "29efcfb0-0063-44af-a4ed-6c0bee3417d3",
                                            "lastDeploymentTime ": "2021-06-06T11:55:59.057Z"
                                        }
                                    ],
                                    "datasets": [
                                        {
                                            "artifactId": "dd3b6aa1-4d40-405c-a19b-48314a27e8ee",
                                            "artifactName": "Sales Dataset",
                                            "sourceArtifactId": "1a201f2a-d1d8-45c0-8c61-1676338517de",
                                            "targetArtifactId": "a5cf347e-7b49-4198-8a2b-0aa92c37d8f8",
                                            "lastDeploymentTime ": "2020-12-13T09:26:41.153Z"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "artifactId": "9d5c1f0f-f85c-48f4-8a8e-4c77547116b3",
                                            "artifactName": "Sales Report",
                                            "sourceArtifactId": "2d225191-65f8-4ec3-b77d-06100602b1f7",
                                            "lastDeploymentTime ": "2020-12-13T09:26:41.153Z"
                                        }
                                    ],
                                    "dashboards": [
                                        {
                                            "artifactId": "9046e4cc-8aea-4a7a-a3b5-1a78b1447d82",
                                            "artifactName": "Sales Dashboard"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/operations": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns a list of the up-to-20 most recent deploy operations performed on the specified deployment pipeline.",
                "description": "\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipelineOperations",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineOperations"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get pipeline Operations": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "1065e6a3-a020-4c0c-ada7-92b5fe99eec5",
                                        "type": "Deploy",
                                        "status ": "Succeeded",
                                        "lastUpdatedTime": "2020-12-13T09:26:43.153",
                                        "executionStartTime ": "2020-12-13T09:25:43.153Z",
                                        "executionEndTime ": "2020-12-13T09:26:43.153Z",
                                        "sourceStageOrder": 0,
                                        "targetStageOrder": 1
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/operations/{operationId}": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Returns the details of the specified deploy operation performed on the specified deployment pipeline, including the deployment execution plan.",
                "description": "\nUse to track the status of a deploy operation.\n\n## Required scope\n\nPipeline.ReadWrite.All or Pipeline.Read.All\n\n######\n",
                "operationId": "Pipelines_GetPipelineOperation",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operationId",
                        "in": "path",
                        "description": "The operation ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineOperation"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get pipeline operation": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "operationId": "1065e6a3-a020-4c0c-ada7-92b5fe99eec5"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "1065e6a3-a020-4c0c-ada7-92b5fe99eec5",
                                    "type": "Deploy",
                                    "status ": "Succeeded",
                                    "lastUpdatedTime": "2020-12-13T09:26:43.153",
                                    "executionStartTime ": "2020-12-13T09:25:43.153Z",
                                    "executionEndTime ": "2020-12-13T09:26:43.153Z",

                                    "sourceStageOrder": 0,
                                    "targetStageOrder": 1,

                                    "executionPlan": {
                                        "Steps": [
                                            {
                                                "index": 0,
                                                "type": "DataflowDeployment",
                                                "status": "Succeeded",
                                                "sourceAndTarget": {
                                                    "source": "29efcfb0-0063-44af-a4ed-6c0bee3417d3"
                                                }
                                            },
                                            {
                                                "index": 1,
                                                "type": "DatasetDeployment",
                                                "status ": "Succeeded",
                                                "sourceAndTarget": {
                                                    "source": "1a201f2a-d1d8-45c0-8c61-1676338517de",
                                                    "target": "dd3b6aa1-4d40-405c-a19b-48314a27e8ee"
                                                }
                                            },
                                            {
                                                "index": 2,
                                                "type": "ReportDeployment",
                                                "status ": "Succeeded",
                                                "sourceAndTarget": {
                                                    "source": "2d225191-65f8-4ec3-b77d-06100602b1f7",
                                                    "target": "9d5c1f0f-f85c-48f4-8a8e-4c77547116b3"
                                                }
                                            },
                                            {
                                                "index": 3,
                                                "type": "DashboardDeployment",
                                                "status ": "Succeeded",
                                                "sourceAndTarget": {
                                                    "source": "9046e4cc-8aea-4a7a-a3b5-1a78b1447d82"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/deployAll": {
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Deploys all supported items from the source stage of the specified deployment pipeline.",
                "description": "\nTo learn about items that aren't supported in deployment pipelines, see [Unsupported items](/power-bi/create-reports/deployment-pipelines-process#unsupported-items).\n\n## Permissions\n\nThe user must at least be a member on both source and target deployment workspaces. For more information, see [Permissions](/power-bi/create-reports/deployment-pipelines-process#permissions).\n\n## Required scope\n\nPipeline.Deploy\n\n## Limitations\n\nMaximum 300 deployed items per request.\n\n######\n",
                "operationId": "Pipelines_DeployAll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "deployRequest",
                        "in": "body",
                        "description": "The deploy request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeployAllRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PipelineOperation"
                        }
                    }
                },
                "x-ms-examples": {
                    "Deploy all artifacts from Development stage": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "deployRequest": {
                                "sourceStageOrder": 0,
                                "options": {
                                    "allowOverwriteArtifact": true,
                                    "allowCreateArtifact": true
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "1065e6a3-a020-4c0c-ada7-92b5fe99eec5",
                                        "type": "Deploy",
                                        "status ": "NotStarted",
                                        "lastUpdatedTime": "2020-12-13T09:26:43.153",
                                        "executionStartTime ": "2020-12-13T09:25:43.153Z",
                                        "executionEndTime ": "2020-12-13T09:26:43.153Z",

                                        "sourceStageOrder": 0,
                                        "targetStageOrder": 1
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/pipelines/{pipelineId}/deploy": {
            "post": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Deploys the specified items from the source stage of the specified deployment pipeline.",
                "description": "\n## Permissions\n\nThe user must at least be a member on both source and target deployment workspaces. For more information, see [Permissions](/power-bi/create-reports/deployment-pipelines-process#permissions).\n\n## Required scope\n\nPipeline.Deploy\n\n## Limitations\n\nMaximum 300 deployed items per request.\n\n######\n",
                "operationId": "Pipelines_SelectiveDeploy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "description": "The deployment pipeline ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "deployRequest",
                        "in": "body",
                        "description": "The selective deploy request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SelectiveDeployRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/PipelineOperation"
                        }
                    }
                },
                "x-ms-examples": {
                    "Deploy specific artifacts from Development stage": {
                        "parameters": {
                            "pipelineId": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                            "deployRequest": {
                                "sourceStageOrder": 0,
                                "dataflows": [
                                    {
                                        "sourceId": "29efcfb0-0063-44af-a4ed-6c0bee3417d3"
                                    }
                                ],
                                "datasets": [
                                    {
                                        "sourceId": "1a201f2a-d1d8-45c0-8c61-1676338517de"
                                    }
                                ],
                                "reports": [
                                    {
                                        "sourceId": "2d225191-65f8-4ec3-b77d-06100602b1f7"
                                    }
                                ],
                                "dashboards": [
                                    {
                                        "sourceId": "9046e4cc-8aea-4a7a-a3b5-1a78b1447d82"
                                    },
                                    {
                                        "sourceId": "7f08923c-8f57-49d6-a010-8335bb9cbd1b"
                                    }
                                ],
                                "options": {
                                    "allowOverwriteArtifact": true,
                                    "allowCreateArtifact": true
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "1065e6a3-a020-4c0c-ada7-92b5fe99eec5",
                                        "type": "Deploy",
                                        "status ": "NotStarted",
                                        "lastUpdatedTime": "2020-12-13T09:26:43.153",
                                        "executionStartTime ": "2020-12-13T09:25:43.153Z",
                                        "executionEndTime ": "2020-12-13T09:26:43.153Z",

                                        "sourceStageOrder": 0,
                                        "targetStageOrder": 1
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/dataflowStorageAccounts": {
            "get": {
                "tags": [
                    "DataflowStorageAccounts"
                ],
                "summary": "Returns a list of dataflow storage accounts that the user has access to.",
                "description": "\n## Required scope\n\nStorageAccount.Read.All or StorageAccount.ReadWrite.All\n\n######\n",
                "operationId": "DataflowStorageAccounts_GetDataflowStorageAccounts",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataflowStorageAccounts"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "d692ae06-708c-485e-9987-06ff0fbdbb1f",
                                        "name": "MyDataflowStorageAccount",
                                        "isEnabled": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/AssignToDataflowStorage": {
            "post": {
                "tags": [
                    "DataflowStorageAccounts"
                ],
                "summary": "Assigns the specified workspace to the specified dataflow storage account.",
                "description": "\nTo perform this operation, the user must be an admin on the specified workspace and the Power BI dataflow storage account must be enabled.\n\nTo unassign the specified workspace from a Power BI dataflow storage account, provide an empty GUID (00000000-0000-0000-0000-000000000000) as the `dataflowStorageId`.\n\n## Required scope\n\nStorageAccount.ReadWrite.All and Workspace.ReadWrite.All\n\n######\n",
                "operationId": "Groups_AssignToDataflowStorage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "requestParameters",
                        "in": "body",
                        "description": "Assign to Power BI dataflow storage account parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignToDataflowStorageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "requestParameters": {
                                "dataflowStorageId": "d692ae06-708c-485e-9987-06ff0fbdbb1f"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/workspaces/getInfo": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Initiates a call to receive metadata for the requested list of workspaces. This is a preview API call.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Microsoft 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\n- Maximum 500 requests per hour.\n- Maximum 16 simultaneous requests.\n\n######\n",
                "operationId": "WorkspaceInfo_PostWorkspaceInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requiredWorkspaces",
                        "in": "body",
                        "description": "Required workspace IDs to get info for",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequiredWorkspaces"
                        }
                    },
                    {
                        "name": "lineage",
                        "in": "query",
                        "description": "Whether to return lineage info (upstream dataflows, tiles, datasource IDs)​",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "datasourceDetails",
                        "in": "query",
                        "description": "Whether to return datasource details​",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "datasetSchema",
                        "in": "query",
                        "description": "Whether to return dataset schema (Tables, Columns and Measures)​",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "datasetExpressions",
                        "in": "query",
                        "description": "Whether to return dataset expressions (Dax query and Mashup)​",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "getArtifactUsers",
                        "in": "query",
                        "description": "Whether to return artifact user details​ (Preview) (Permission level)",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/ScanRequest"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "lineage": true,
                            "datasourceDetails": true,
                            "datasetSchema": true,
                            "datasetExpressions": true,
                            "requiredWorkspaces": {
                                "workspaces": [
                                    "97d03602-4873-4760-b37e-1563ef5358e3",
                                    "67b7e93a-3fb3-493c-9e41-2c5051008f24"
                                ]
                            }
                        },
                        "responses": {
                            "202": {
                                "header": "Location",
                                "body": {
                                    "id": "e7d03602-4873-4760-b37e-1563ef5358e3",
                                    "createdDateTime": "2020-06-15T16:46:28.0487687Z",
                                    "status": "NotStarted"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/workspaces/scanStatus/{scanId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Gets the scan status for the specified scan. This is a preview API call.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Microsoft 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 10,000 requests per hour.\n\n######\n",
                "operationId": "WorkspaceInfo_GetScanStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "scanId",
                        "description": "The scan ID, which is included in the response from the workspaces or getInfo API that triggered the scan",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScanRequest"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "scanId": "e7d03602-4873-4760-b37e-1563ef5358e3"
                        },
                        "responses": {
                            "200": {
                                "header": "Location",
                                "body": {
                                    "id": "e7d03602-4873-4760-b37e-1563ef5358e3",
                                    "createdDateTime": "2020-06-15T16:46:28.0487687Z",
                                    "status": "Succeeded"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/workspaces/scanResult/{scanId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Gets the scan result for the specified scan. This is a preview API call.",
                "description": "\nOnly make this API call after a successful [GetScanStatus](/rest/api/power-bi/admin/workspace-info-get-scan-status) API call. The scan result will remain available for 24 hours.\n\n## Permissions\n\nThe user must have administrator rights (such as Microsoft 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 500 requests per hour.\n\n######\n",
                "operationId": "WorkspaceInfo_GetScanResult",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "scanId",
                        "description": "The scan ID, which is included in the response from the workspaces or getInfo API that triggered the scan",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceInfoResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "scanId": "e7d03602-4873-4760-b37e-1563ef5358e3"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "workspaces": [
                                        {
                                            "id": "d507422c-8d6d-4361-ac7a-30074a8cd0a1",
                                            "name": "V2 shared",
                                            "type": "Workspace",
                                            "state": "Active",
                                            "isOnDedicatedCapacity": false,
                                            "reports": [
                                                {
                                                    "id": "c6d072d1-ed20-4b60-8329-16c4b934203b",
                                                    "name": "CompositeModelParams-RLS",
                                                    "datasetId": "132593c4-bf8d-4548-8f25-1ebb16a1613c",
                                                    "createdDateTime": "2020-06-16T08:22:49.14",
                                                    "modifiedDateTime": "2020-06-16T08:22:49.14",
                                                    "modifiedBy": "john@contoso.com",
                                                    "reportType": "PaginatedReport",
                                                    "endorsementDetails": {
                                                        "endorsement": "Certified",
                                                        "certifiedBy": "john@contoso.com"
                                                    },
                                                    "sensitivityLabel": {
                                                        "labelId": "85b38049-4259-43a2-8feb-244e222d96c0"
                                                    },
                                                    "users": [
                                                        {
                                                            "displayName": "John Nick",
                                                            "emailAddress": "john@contoso.com",
                                                            "appUserAccessRight": "ReadExplore",
                                                            "identifier": "john@contoso.com",
                                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                            "principalType": "User"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "dashboards": [
                                                {
                                                    "id": "80814ece-9302-49e3-b6bc-bad2f7a86c1a",
                                                    "displayName": "CompositeModelParamsDashboard",
                                                    "isReadOnly": false,
                                                    "tiles": [
                                                        {
                                                            "id": "e687cc21-5b32-48f5-8c5e-4b844f190579",
                                                            "title": "CompositeModelParamsDashboard",
                                                            "reportId": "c6d072d1-ed20-4b60-8329-16c4b934203b",
                                                            "datasetId": "132593c4-bf8d-4548-8f25-1ebb16a1613c"
                                                        }
                                                    ],
                                                    "sensitivityLabel": {
                                                        "labelId": "d9b9581a-0594-4c39-81c5-91ddf40baeda"
                                                    },
                                                    "users": [
                                                        {
                                                            "displayName": "John Nick",
                                                            "emailAddress": "john@contoso.com",
                                                            "appUserAccessRight": "ReadExplore",
                                                            "identifier": "john@contoso.com",
                                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                            "principalType": "User"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "datasets": [
                                                {
                                                    "id": "e7e8a355-e77b-4418-a7b8-ae5972fdaa03",
                                                    "name": "ExportB",
                                                    "tables": [
                                                        {
                                                            "name": "EIM",
                                                            "columns": [
                                                                {
                                                                    "name": "RowNumber-2662979B-1795-4F74-8F37-6A1BA8059B61",
                                                                    "dataType": "Int64",
                                                                    "isHidden": true
                                                                }
                                                            ],
                                                            "measures": [
                                                                {
                                                                    "name": "MyMeasure",
                                                                    "expression": "CALCULATE(SELECTEDVALUE('EIM EIMTestToBeDeleted'[Numbers])*10)",
                                                                    "description": "My measure",
                                                                    "isHidden": false
                                                                }
                                                            ],
                                                            "isHidden": false,
                                                            "description": "My table",
                                                            "source": [
                                                                {
                                                                    "expression": "let\n Source = Sql.Database(\"pbianalytics.database.windows.net\", \"PBIConnectDM\"),\n EIM = Source{[Schema=\"EIM\",Item=\"EIMTestToBeDeleted\"]}[Data]\nin\n EIM"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "relationships": [],
                                                    "configuredBy": "john@contoso.com",
                                                    "targetStorageMode": "Abf",
                                                    "endorsementDetails": {
                                                        "endorsement": "Certified",
                                                        "certifiedBy": "john@contoso.com"
                                                    },
                                                    "upstreamDataflows": [
                                                        {
                                                            "targetDataflowId": "a842dbb1-32ca-46b0-9648-498b2c2d5e38",
                                                            "groupId": "b7416115-7421-42c0-b525-1505ce40d2f0"
                                                        },
                                                        {
                                                            "targetDataflowId": "06898194-2eaf-4122-bacc-133db1f8585d",
                                                            "groupId": "7263838d-80d7-4b8d-a1f6-50fc27e74a97"
                                                        }
                                                    ],
                                                    "datasourceUsages": [
                                                        {
                                                            "datasourceInstanceId": "c79ad907-df19-43fe-a0f7-d9f365d67070"
                                                        }
                                                    ],
                                                    "sensitivityLabel": {
                                                        "labelId": "bf3dc57d-d796-41c0-bbe9-a47f5ee3331e"
                                                    },
                                                    "users": [
                                                        {
                                                            "displayName": "John Nick",
                                                            "emailAddress": "john@contoso.com",
                                                            "appUserAccessRight": "ReadExplore",
                                                            "identifier": "john@contoso.com",
                                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                            "principalType": "User"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "dataflows": [
                                                {
                                                    "objectId": "a842dbb1-32ca-46b0-9648-498b2c2d5e38",
                                                    "name": "Azure SQL",
                                                    "description": "Azure SQL dataflow",
                                                    "configuredBy": "john@contoso.com",
                                                    "modifiedBy": "john@contoso.com",
                                                    "modifiedDateTime": "2020-06-16T08:27:47.783Z",
                                                    "endorsementDetails": {
                                                        "endorsement": "Certified",
                                                        "certifiedBy": "john@contoso.com"
                                                    },
                                                    "datasourceUsages": [
                                                        {
                                                            "datasourceInstanceId": "c79ad907-df19-43fe-a0f7-d9f365d67070"
                                                        }
                                                    ],
                                                    "sensitivityLabel": {
                                                        "labelId": "5c9f8c24-2a94-4fd2-a105-9a8b096c5af1"
                                                    },
                                                    "users": [
                                                        {
                                                            "displayName": "John Nick",
                                                            "emailAddress": "john@contoso.com",
                                                            "appUserAccessRight": "ReadExplore",
                                                            "identifier": "john@contoso.com",
                                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                            "principalType": "User"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "users": [
                                                {
                                                    "displayName": "John Nick",
                                                    "emailAddress": "john@contoso.com",
                                                    "appUserAccessRight": "ReadExplore",
                                                    "identifier": "john@contoso.com",
                                                    "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                    "principalType": "User"
                                                }
                                            ]
                                        }
                                    ],
                                    "datasourceInstances": [
                                        {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "qlserver.database.windows.net",
                                                "database": "dbo.largest_table"
                                            },
                                            "datasourceId": "c79ad907-df19-43fe-a0f7-d9f365d67070",
                                            "gatewayId": "e820592e-f8cf-4a6f-b1ed-566799d29565"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/workspaces/modified": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Gets a list of workspace IDs in the organization. This is a preview API call.",
                "description": "\nIf the optional `modifiedSince` parameter is set to a date-time, only the IDs of workspaces that changed after that date-time are returned. If the `modifiedSince` parameter isn't used, the IDs of all workspaces in the organization are returned. The date-time specified by the `modifiedSince` parameter must be in the range of 30 minutes (to allow workspace changes to take effect) to 30 days prior to the current time.\n\n## Permissions\n\nThe user must have administrator rights (such as Microsoft 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 30 requests per hour.\n\n######\n",
                "operationId": "WorkspaceInfo_GetModifiedWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "modifiedSince",
                        "in": "query",
                        "description": "Last modified date​ (must be in ISO 8601 compliant UTC format)",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "excludePersonalWorkspaces",
                        "in": "query",
                        "description": "Whether to exclude personal workspaces​",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "description": "The modified workspaces list",
                            "items": {
                                "$ref": "#/definitions/ModifiedWorkspace"
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "modifiedSince": "2020-10-02T05:51:30.0000000Z",
                            "excludePersonalWorkspaces": true
                        },
                        "responses": {
                            "200": {
                                "body": [
                                    {
                                        "Id": "3740504d-1f93-42f9-8e9d-c8ba9b787a3b"
                                    },
                                    {
                                        "Id": "19cb346c-9839-4e19-81e6-76364d0b836f"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/capacities/AssignWorkspaces": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Assigns the specified workspaces to the specified Premium capacity.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_AssignWorkspacesToCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "in": "body",
                        "description": "Admin assign workspaces capacity parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignWorkspacesToCapacityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "AssignWorkspacesToCapacityRequest": {
                                "capacityMigrationAssignments": [
                                    {
                                        "targetCapacityObjectId": "FA5923C2-A23f-4C0B-8345-9BA8645F883E",
                                        "workspacesToAssign": [ "0ebb517c-c6f5-4aa8-9f1d-42bd547e6297" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/capacities/UnassignWorkspaces": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Unassigns the specified workspaces from capacity.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_UnassignWorkspacesFromCapacity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "in": "body",
                        "description": "Admin assign workspaces to shared capacity parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnassignWorkspacesCapacityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/datasets": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of datasets for the organization.",
                "description": "\nEach request takes two seconds to process, during which time other requests are queued.\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_GetDatasetsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminDatasets"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/datasets/{datasetId}/datasources": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of data sources for the specified dataset.",
                "description": "\nEach request takes 0.5 seconds to process, during which time other requests are queued.\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal. \n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Datasets_GetDatasourcesAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "301",
                                            "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False",
                                            "datasourceType": "Sql",
                                            "datasourceId": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "server": "MyServer.database.windows.net",
                                                "database": "MyDatabase"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/datasets/{datasetId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified dataset. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Datasets_GetDatasetUsersAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "John Nick",
                                            "emailAddress": "john@contoso.com",
                                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                                            "identifier": "john@contoso.com",
                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                            "principalType": "User"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of workspaces for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_GetGroupsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results. This parameter is mandatory and must be in the range of 1-5000.",
                        "required": true,
                        "minimum": 1,
                        "maximum": 5000,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 5000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminGroups"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get workspaces with users expanded (only applicable for workspaces in the new workspace experience)": {
                        "parameters": {
                            "$expand": "users",
                            "$top": 100
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "e380d1d0-1fa6-460b-9a90-1a5c6b02414c",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Sample Group 1",
                                            "description": "Sample group",
                                            "type": "Workspace",
                                            "state": "Active",
                                            "users": [
                                                {
                                                    "emailAddress": "john@contoso.com",
                                                    "groupUserAccessRight": "Admin"
                                                }
                                            ]
                                        },
                                        {
                                            "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Sample Group 2",
                                            "description": "Deleted sample group",
                                            "type": "Workspace",
                                            "state": "Deleted",
                                            "users": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get orphaned workspaces (only applicable for workspaces in the new workspace experience)": {
                        "parameters": {
                            "$expand": "users",
                            "$top": 100,
                            "$filter": "(not users/any()) or (not users/any(u: u/groupUserAccessRight eq Microsoft.PowerBI.ServiceContracts.Api.GroupUserAccessRight'Admin'))"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "d5caa808-8c91-400a-911d-06af08dbcc31",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Orphaned Group",
                                            "description": "Sample orphan group",
                                            "type": "Workspace",
                                            "state": "Active",
                                            "users": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get workspaces with reports expanded": {
                        "parameters": {
                            "$expand": "reports",
                            "$top": 100,
                            "skip": 0
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "EC1EE11F-845D-495E-82A3-9DAC2072305A",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "capacityMigrationStatus": "Migrated",
                                            "description": "cvcv",
                                            "type": "Workspace",
                                            "state": "Active",
                                            "name": "WSv2Test12",
                                            "reports": []
                                        },
                                        {
                                            "id": "94E57E92-CEE2-486D-8CC8-218C97200579",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "capacityMigrationStatus": "Migrated",
                                            "description": "shorter description",
                                            "type": "Workspace",
                                            "state": "Removing",
                                            "name": "a",
                                            "reports": [
                                                {
                                                    "id": "5DBA60B0-D9A7-42AE-B12C-6D9D51E7739A",
                                                    "reportType": "PowerBIReport",
                                                    "name": "SQlAzure-Refresh",
                                                    "datasetId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523"
                                                },
                                                {
                                                    "id": "197E5C3C-D2F3-42D8-A536-875FB6D7D48C",
                                                    "reportType": "PowerBIReport",
                                                    "name": "NESGames",
                                                    "datasetId": "7d6a4f72-1906-4e08-a469-bd6bc1ab7b69"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get workspaces with dashboards expanded": {
                        "parameters": {
                            "$expand": "dashboards",
                            "$top": 100,
                            "skip": 0
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "94E57E92-CEE2-486D-8CC8-218C97200579",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "capacityMigrationStatus": "Migrated",
                                            "description": "shorter description",
                                            "type": "Workspace",
                                            "state": "Removing",
                                            "name": "a",
                                            "dashboards": [
                                                {
                                                    "id": "4668133c-ae3f-42fb-ad7c-214a8623280c",
                                                    "displayName": "SQlAzure-Refresh.pbix",
                                                    "isReadOnly": false
                                                },
                                                {
                                                    "id": "a8f18ca7-63e8-4220-bc1c-f576ec180b98",
                                                    "displayName": "cdvc",
                                                    "isReadOnly": false
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get workspaces with datasets expanded": {
                        "parameters": {
                            "$expand": "datasets",
                            "$top": 100,
                            "skip": 0
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "94E57E92-CEE2-486D-8CC8-218C97200579",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "capacityMigrationStatus": "Migrated",
                                            "description": "shorter description",
                                            "type": "Workspace",
                                            "state": "Removing",
                                            "name": "a",
                                            "datasets": [
                                                {
                                                    "id": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                                                    "name": "SQlAzure-Refresh",
                                                    "addRowsAPIEnabled": false,
                                                    "configuredBy": "admin@granularcontrols.ccsctp.net",
                                                    "isRefreshable": true,
                                                    "isEffectiveIdentityRequired": false,
                                                    "isEffectiveIdentityRolesRequired": false,
                                                    "isOnPremGatewayRequired": false,
                                                    "targetStorageMode": "Abf",
                                                    "createdDate": "2019-04-30T21:35:15.867-07:00",
                                                    "ContentProviderType": "PbixInImportMode"
                                                },
                                                {
                                                    "id": "7d6a4f72-1906-4e08-a469-bd6bc1ab7b69",
                                                    "name": "NESGames",
                                                    "addRowsAPIEnabled": false,
                                                    "configuredBy": "admin@granularcontrols.ccsctp.net",
                                                    "isRefreshable": true,
                                                    "isEffectiveIdentityRequired": false,
                                                    "isEffectiveIdentityRolesRequired": false,
                                                    "isOnPremGatewayRequired": false,
                                                    "targetStorageMode": "Abf",
                                                    "createdDate": "2019-04-30T21:35:15.867-07:00",
                                                    "ContentProviderType": "PbixInImportMode"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get deleted workspaces (only applicable for workspaces in the new workspace experience)": {
                        "parameters": {
                            "$top": 100,
                            "$filter": "state eq 'Deleted'"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Sample Group 2",
                                            "description": "Deleted sample group",
                                            "type": "Workspace",
                                            "state": "Deleted"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get workspaces with datasets expanded (only applicable for workspaces in the new workspace experience)": {
                        "parameters": {
                            "$expand": "datasets"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "e380d1d0-1fa6-460b-9a90-1a5c6b02414c",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Sample Group 1",
                                            "description": "Sample group",
                                            "type": "Workspace",
                                            "state": "Active",
                                            "datasets": [
                                                {
                                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                    "name": "SalesMarketing",
                                                    "addRowsAPIEnabled": false,
                                                    "configuredBy": "john@contoso.com",
                                                    "isRefreshable": true,
                                                    "isEffectiveIdentityRequired": false,
                                                    "isEffectiveIdentityRolesRequired": false,
                                                    "isOnPremGatewayRequired": false,
                                                    "encryption": {
                                                        "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                        "encryptionStatus": "InSyncWithWorkspace"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "name": "Sample Group 2",
                                            "description": "Deleted sample group",
                                            "type": "Workspace",
                                            "state": "Deleted",
                                            "datasets": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get workspaces with workbooks expanded": {
                        "parameters": {
                            "$expand": "workbooks",
                            "$top": 100,
                            "skip": 0
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "94E57E92-CEE2-486D-8CC8-218C97200579",
                                            "isReadOnly": false,
                                            "isOnDedicatedCapacity": false,
                                            "description": "shorter description",
                                            "type": "Workspace",
                                            "state": "Removing",
                                            "name": "a",
                                            "workbooks": [
                                                {
                                                    "name": "My Excel sheet",
                                                    "datasetId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a workspace for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_GetGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: users, reports, dashboards, datasets, dataflows, workbooks",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminGroup"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get workspaces with users expanded (only applicable for workspaces in the new workspace experience)": {
                        "parameters": {
                            "$expand": "users"
                        },
                        "responses": {
                            "200": {
                                        "id": "e380d1d0-1fa6-460b-9a90-1a5c6b02414c",
                                        "isReadOnly": false,
                                        "isOnDedicatedCapacity": false,
                                        "name": "Sample Group 1",
                                        "description": "Sample group",
                                        "type": "Workspace",
                                        "state": "Active",
                                        "users": [
                                            {
                                                "emailAddress": "john@contoso.com",
                                                "groupUserAccessRight": "Admin"
                                            }
                                        ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Updates the properties of the specified workspace.",
                "description": "\nThis API call call only updates workspaces in the new workspace experience. Only the name and description can be updated. The name must be unique inside an organization.\n\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_UpdateGroupAsAdmin",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "groupProperties",
                        "in": "body",
                        "required": true,
                        "description": "The properties to update",
                        "schema": {
                            "$ref": "#/definitions/AdminGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "e2284830-c8dc-416b-b19a-8cdcd2729332",
                            "groupProperties": {
                                "name": "Updated Sales Results",
                                "description": "Refreshed sales numbers"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified workspace. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_GetGroupUsersAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GroupUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "displayName": "John Nick",
                                        "emailAddress": "john@contoso.com",
                                        "groupUserAccessRight": "Admin",
                                        "identifier": "john@contoso.com",
                                        "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                        "principalType": "User"
                                    },
                                    {
                                        "displayName": "Adam Wood",
                                        "emailAddress": "Adam@contoso.com",
                                        "groupUserAccessRight": "Member",
                                        "identifier": "Adam@contoso.com",
                                        "graphId": "785e192c-0f1f-41ca-ae7a-a85da28e565a",
                                        "principalType": "User"
                                    },
                                    {
                                        "displayName": "ContosoTestApp",
                                        "groupUserAccessRight": "Admin",
                                        "identifier": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "graphId": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                        "principalType": "App"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Grants user permissions to the specified workspace.",
                "description": "\nThis API call only supports updating workspaces in the new workspace experience and adding a user principle.\n\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_AddUserAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userDetails",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "206d27ca-94e8-4a69-855b-5c32bdd458a8",
                            "userDetails": {
                                "emailAddress": "john@contoso.com",
                                "groupUserAccessRight": "Admin"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/users/{user}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Removes user permissions from the specified workspace.",
                "description": "\nThis API call only supports updating workspaces in the new workspace experience and adding a user principle.\n\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_DeleteUserAsAdmin",
                "consumes": [

                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user principal name (UPN) of the user to remove (usually the user's email).",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f7d76f5a-7190-43c6-bf12-7a135c6c2d69",
                            "user": "john@contoso.com"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/restore": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Restores a deleted workspace.",
                "description": "\nThis API call only supports restoring workspaces in the new workspace experience.\n\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_RestoreDeletedGroupAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [

                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "groupRestoreRequest",
                        "in": "body",
                        "description": "Details of the group restore request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupRestoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "3bec11ee-48a9-490c-8e4d-1ebba90d491a",
                            "groupRestoreRequest": {
                                "name": "Restored Workspace",
                                "emailAddress": "john@contoso.com"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/dataflows/{dataflowId}/upstreamDataflows": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of upstream dataflows for the specified dataflow.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dataflows_GetUpstreamDataflowsInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataflowId",
                        "in": "path",
                        "required": true,
                        "description": "The dataflow ID",
                        "type": "string",
                        "format": "uuid"
                    }

                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DependentDataflows"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "dataflowId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "targetDataflowId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                        },
                                        {
                                            "targetDataflowId": "67a4529b-0cdd-4584-9867-5c0e77d57a2f",
                                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/dashboards": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of dashboards from the specified workspace.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dashboards_GetDashboardsInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminDashboards"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "displayName": "SalesMarketing",
                                            "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                            "isReadOnly": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/reports": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of reports from the specified workspace.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Reports_GetReportsInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminReports"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715&groupId=f089354e-8366-4e18-aea3-4cb4a3a50b48"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/datasets": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of datasets from the specified workspace.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Datasets_GetDatasetsInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminDatasets"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Example with expand on encryption": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "$expand": "encryption"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false,
                                            "encryption": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "encryptionStatus": "InSyncWithWorkspace"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/datasets/upstreamDataflows": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of upstream dataflows for datasets from the specified workspace.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Datasets_GetDatasetToDataflowsLinksInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetToDataflowLinksResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasetObjectId": "0d6e2a35-c606-4fb7-8690-1b3a5370a294",
                                            "dataflowObjectId": "4caab73a-2660-4255-8e53-de6745f3d92c",
                                            "workspaceObjectId": "358240c2-b8f3-4817-aa7a-0efa03687a7b"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/dataflows": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of dataflows from the specified workspace.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dataflows_GetDataflowsInGroupAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataflows"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "objectId": "bd32e5c0-363f-430b-a03b-5535a4804b9b",
                                            "name": "AdventureWorks",
                                            "description": "Our Adventure Works",
                                            "modelUrl": "https://MyDataflowStorageAccount.dfs.core.windows.net/powerbi/contoso/AdventureWorks/model.json",
                                            "configuredBy": "john@contoso.com"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/groups/{groupId}/unused": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of datasets, reports, and dashboards that have not been used within 30 days for the specified workspace (Preview).",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Groups_GetUnusedArtifactsAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Token required to get the next chunk of the result set",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UnusedArtifactsResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "unusedArtifactEntities": [
                                    {
                                        "artifactId": "a987f160-96aa-43cf-b9db-a4ca0fc6b7c4",
                                        "displayName": "Sample",
                                        "artifactType": "Dataset",
                                        "artifactSizeInMB": 9,
                                        "createdDateTime": "2020-09-01T22:40:52.197Z",
                                        "lastAccessedDateTime": "2021-07-01T22:40:52.953Z"
                                    }
                                ],
                                "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/unused?continuationToken='LDEsMTAwMDAwLDA%3D'",
                                "continuationToken": "LDEsMTAwMDAwLDA%3D"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/reports": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of reports for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Reports_GetReportsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminReports"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "name": "SalesMarketing",
                                            "webUrl": "https://app.powerbi.com//reports/5b218778-e7a5-4d73-8187-f10824047715",
                                            "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/reports/{reportId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified report. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Reports_GetReportUsersAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReportUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "John Nick",
                                            "emailAddress": "john@contoso.com",
                                            "reportUserAccessRight": "Owner",
                                            "identifier": "john@contoso.com",
                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                            "principalType": "User"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },    
        "/v1.0/myorg/admin/reports/{reportId}/subscriptions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of subscriptions along with subscribees that the report subscribed to. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Reports_GetReportSubscriptionsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Subscriptions"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {                                
                                            "id": "18b746fe-c6d5-4a00-9523-05dc91424274",
                                            "title": "TestReportSubscription-1",
                                            "artifactId": "7b71b90a-a333-4006-b12c-ef3d767fa4e9",
                                            "artifactDisplayName": "Customer Profitability Sample",
                                            "subArtifactDisplayName": "Team Scorecard",
                                            "artifactType": "Report",
                                            "isEnabled": true,
                                            "frequency": "Daily",
                                            "startDate": "10/13/2021 12:00:00 AM",
                                            "endDate": "10/13/2022 12:00:00 AM",
                                            "linkToContent": true,
                                            "previewImage": true,
                                            "attachmentFormat": "PNG",
                                            "users": [
                                                {
                                                    "displayName": "John Nick",
                                                    "emailAddress": "john@contoso.com",
                                                    "identifier": "john@contoso.com",
                                                    "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                    "principalType": "User"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/dashboards": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of dashboards for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dashboards_GetDashboardsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: tiles",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminDashboards"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "displayName": "SalesMarketing",
                                            "embedUrl": "https://app.powerbi.com/dashboardEmbed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af",
                                            "isReadOnly": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dashboards/{dashboardId}/tiles": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of tiles within the specified dashboard.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dashboards_GetTilesAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminTiles"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "dashboardId": "69ffaa6c-b36d-4d01-96f5-1ed67c64d4af"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "title": "SalesMarketingTile",
                                            "embedUrl": "https://app.powerbi.com/embed?dashboardId=69ffaa6c-b36d-4d01-96f5-1ed67c64d4af&tileId=312fbfe9-2eda-44e0-9ed0-ab5dc571bb4b",
                                            "rowSpan": 0,
                                            "colSpan": 0,
                                            "reportId": "5b218778-e7a5-4d73-8187-f10824047715",
                                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dashboards/{dashboardId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified dashboard. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dashboards_GetDashboardUsersAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "description": "The dashboard ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DashboardUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "John Nick",
                                            "emailAddress": "john@contoso.com",
                                            "dashboardUserAccessRight": "Owner",
                                            "identifier": "john@contoso.com",
                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                            "principalType": "User"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dashboards/{dashboardId}/subscriptions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of subscriptions along with subscribees that the dashboard subscribed to. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dashboards_GetDashboardSubscriptionsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dashboardId",
                        "in": "path",
                        "description": "The dashboard ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Subscriptions"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {                                
                                            "id": "18b746fe-c6d5-4a00-9523-05dc91424275",
                                            "title": "TestDashboardSubscription-1",
                                            "artifactId": "7b71b90a-a333-4006-b12c-ef3d767fa4e9",
                                            "artifactDisplayName": "Customer Profitability Sample",
                                            "artifactType": "Dashboard",
                                            "isEnabled": true,
                                            "frequency": "Daily",
                                            "startDate": "10/13/2021 12:00:00 AM",
                                            "endDate": "10/13/2022 12:00:00 AM",
                                            "linkToContent": true,
                                            "previewImage": false,
                                            "users": [
                                                {
                                                    "displayName": "John Nick",
                                                    "emailAddress": "john@contoso.com",
                                                    "identifier": "john@contoso.com",
                                                    "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                                    "principalType": "User"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/admin/imports": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of imports for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Imports_GetImportsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Imports"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                            "importState": "Succeeded",
                                            "createdDateTime": "2018-05-08T14:56:18.477Z",
                                            "updatedDateTime": "2018-05-08T14:56:18.477Z",
                                            "name": "SalesMarketing",
                                            "connectionType": "import",
                                            "source": "Upload",
                                            "datasets": [
                                                {
                                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                                }
                                            ],
                                            "reports": [
                                                {
                                                    "id": "5b218778-e7a5-4d73-8187-f10824047715",
                                                    "name": "SalesMarketing",
                                                    "webUrl": "https://app.powerbi.com/reports/5b218778-e7a5-4d73-8187-f10824047715",
                                                    "embedUrl": "https://app.powerbi.com/reportEmbed?reportId=5b218778-e7a5-4d73-8187-f10824047715"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/tenantKeys": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Adds an encryption key for Power BI workspaces assigned to a capacity.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 600 requests per hour.\n\n######\n",
                "operationId": "Admin_AddPowerBIEncryptionKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tenantKeyCreationRequest",
                        "in": "body",
                        "description": "Tenant key information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TenantKeyCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TenantKey"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "tenantKeyCreationRequest": {
                                "name": "Contoso Sales",
                                "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2",
                                "activate": true,
                                "isDefault": true
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "name": "Contoso Sales",
                                    "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2",
                                    "isDefault": true,
                                    "createdAt": "2019-04-30T21:35:15.867-07:00",
                                    "updatedAt": "2019-04-30T21:35:15.867-07:00"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns the encryption keys for the tenant.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_GetPowerBIEncryptionKeys",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TenantKeys"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                            "name": "Contoso Sales",
                                            "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2",
                                            "isDefault": true,
                                            "createdAt": "2019-04-30T21:35:15.867-07:00",
                                            "updatedAt": "2019-04-30T21:35:15.867-07:00"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/tenantKeys/{tenantKeyId}/Default.Rotate": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Rotate the encryption key for Power BI workspaces assigned to a capacity.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 600 requests per hour.\n\n######\n",
                "operationId": "Admin_RotatePowerBIEncryptionKey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tenantKeyId",
                        "description": "The tenant key ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tenantKeyRotationRequest",
                        "in": "body",
                        "description": "Tenant key information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TenantKeyRotationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TenantKey"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "tenantKeyId": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                            "tenantKeyRotationRequest": {
                                "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                    "name": "Contoso Sales",
                                    "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2",
                                    "isDefault": true,
                                    "createdAt": "2019-04-30T21:35:15.867-07:00",
                                    "updatedAt": "2019-04-30T21:35:15.867-07:00"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of capacities for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_GetCapacitiesAsAdmin",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Capacities"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                            "displayName": "MyCapacity",
                                            "admins": [ "john@contoso.com" ],
                                            "sku": "A1",
                                            "state": "Active",
                                            "region": "West Central US",
                                            "capacityUserAccessRight": "Admin",
                                            "tenantKeyId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Example with expand on tenant key": {
                        "parameters": {
                            "$expand": "tenantKey"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                            "displayName": "MyCapacity",
                                            "admins": [ "john@contoso.com" ],
                                            "sku": "A1",
                                            "state": "Active",
                                            "region": "West Central US",
                                            "capacityUserAccessRight": "Admin",
                                            "tenantKeyId": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                            "tenantKey": {
                                                "id": "82d9a37a-2b45-4221-b012-cb109b8e30c7",
                                                "name": "Contoso Sales",
                                                "keyVaultKeyIdentifier": "https://contoso-vault2.vault.azure.net/keys/ContosoKeyVault/b2ab4ba1c7b341eea5ecaaa2wb54c4d2",
                                                "isDefault": true,
                                                "createdAt": "2019-04-30T21:35:15.867-07:00",
                                                "updatedAt": "2019-04-30T21:35:15.867-07:00"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities/{capacityId}": {
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Changes specific capacity information. Currently, this API call only supports changing the capacity's encryption key.",
                "description": "\n## Permissions\n\nThe user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_PatchCapacityAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "capacityPatchRequest",
                        "in": "body",
                        "description": "Patch capacity information",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CapacityPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "capacityId": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                            "capacityPatchRequest": {
                                "tenantKeyId": "82d9a37a-2b45-4221-b012-cb109b8e30c7"
                            }
                        },
                        "responses": {
                            "200": {
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities/{capacityId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified workspace. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Capacities_GetCapacityUsersAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CapacityUsers"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities/refreshables": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of refreshables for the organization within a capacity.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_GetRefreshables",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results.",
                        "required": true,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshables with capacities and groups expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshes with an average duration greater than thirty minutes": {
                        "parameters": {
                            "$filter": "averageDuration gt 1800"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 3289.3814,
                                            "medianDuration": 2268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:58:05.221Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities/{capacityId}/refreshables": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of refreshables for the specified capacity that the user has access to.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_GetRefreshablesForCapacity",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results.",
                        "required": true,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshables with capacities and groups expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshes with an average duration greater than thirty minutes": {
                        "parameters": {
                            "$filter": "averageDuration gt 1800"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 3289.3814,
                                            "medianDuration": 2268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:58:05.221Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/capacities/{capacityId}/refreshables/{refreshableId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns the specified refreshable for the specified capacity that the user has access to.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Admin_GetRefreshableForCapacity",
                "consumes": [
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "capacityId",
                        "description": "The capacity ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshableId",
                        "description": "The refreshable ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: capacities and groups",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshables"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get refreshable with capacity and group expanded": {
                        "parameters": {
                            "$expand": "capacity,group"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "kind": "Dataset",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-19T11:22:32.445Z",
                                            "refreshCount": 22,
                                            "refreshFailures": 0,
                                            "averageDuration": 289.3814,
                                            "medianDuration": 268.6245,
                                            "refreshesPerDay": 11,
                                            "lastRefresh": {
                                                "refreshType": "ViaApi",
                                                "startTime": "2017-06-13T09:25:43.153Z",
                                                "endTime": "2017-06-13T09:31:43.153Z",
                                                "status": "Completed",
                                                "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                            },
                                            "refreshSchedule": {
                                                "days": [
                                                    "Sunday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "times": [
                                                    "05:00",
                                                    "11:30",
                                                    "17:30",
                                                    "23:00"
                                                ],
                                                "enabled": true,
                                                "localTimeZoneId": "UTC",
                                                "notifyOption": "MailOnFailure"
                                            },
                                            "configuredBy": [
                                                "john@contoso.com"
                                            ],
                                            "capacity": {
                                                "id": "0f084df7-c13d-451b-af5f-ed0c466403b2",
                                                "displayName": "MyCapacity",
                                                "sku": "A1"
                                            },
                                            "group": {
                                                "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                                "name": "SalesMarketing"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dataflows": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of dataflows for the organization.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_GetDataflowsAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results, based on a boolean condition",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataflows"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "objectId": "bd32e5c0-363f-430b-a03b-5535a4804b9b",
                                            "name": "AdventureWorks",
                                            "description": "Our Adventure Works",
                                            "modelUrl": "https://MyDataflowStorageAccount.dfs.core.windows.net/powerbi/contoso/AdventureWorks/model.json",
                                            "configuredBy": "john@contoso.com"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dataflows/{dataflowId}/export": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Exports the definition for the specified dataflow to a JSON file.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_ExportDataflowAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exported Json file",
                        "schema": {
                            "type": "file"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dataflows/{dataflowId}/datasources": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of data sources for the specified dataflow.",
                "description": "\nDeleted datasources will still appear in the response. This may include both cloud and on-premise data gateway sources. For more information see [Dataflows considerations and limitations](/power-bi/transform-model/dataflows/dataflows-features-limitations).\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n######\n",
                "operationId": "Dataflows_GetDataflowDatasourcesAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "dataflowId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "301",
                                            "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False",
                                            "datasourceType": "Sql",
                                            "datasourceId": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "server": "MyServer.database.windows.net",
                                                "database": "MyDatabase"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/dataflows/{dataflowId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified dataflow. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Dataflows_GetDataflowUsersAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataflowId",
                        "description": "The dataflow ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataflowUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "displayName": "John Nick",
                                            "emailAddress": "john@contoso.com",
                                            "dataflowUserAccessRight": "ReadWrite",
                                            "identifier": "john@contoso.com",
                                            "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                            "principalType": "User"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },

        "/v1.0/myorg/GenerateToken": {
            "post": {
                "tags": [
                    "EmbedToken"
                ],
                "summary": "Generates an embed token for multiple reports, datasets, and target workspaces.",
                "description": "\n- Reports and datasets don't have to be related.\n- You can bind a report to a dataset during embedding.\n- You can only create a report in workspaces specified by the `targetWorkspaces` parameter.\n\n> [!IMPORTANT]\n> This API is only relevant to the [embed for your customers](/power-bi/developer/embed-sample-for-customers) scenario. To learn more about using this API, see [Considerations when generating an embed token](/power-bi/developer/embedded/generate-embed-token).\n\n## Permissions\n\n- When using a service principal for authentication, refer to [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n- For PowerBI reports with a paginated visual, include the paginated report ID in the API call. For more information, see [example](/rest/api/power-bi/embed-token/generate-token#examples).\n\n## Required scope\n\nAll of the following, unless a requirement doesn't apply:\n\n- Content.Create, required if a target workspace is specified in [GenerateTokenRequestV2](/rest/api/power-bi/embed-token/generate-token#generatetokenrequestv2).\n- Report.ReadWrite.All or Report.Read.All, required if a report is specified in [GenerateTokenRequestV2](/rest/api/power-bi/embed-token/generate-token#generatetokenrequestv2).\n- Report.ReadWrite.All, required if the `allowEdit` flag is specified for at least one report in [GenerateTokenRequestV2](/rest/api/power-bi/embed-token/generate-token#generatetokenrequestv2).\n- Dataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\n- You can only create a report in workspaces specified by the `targetWorkspaces` parameter.\n- All reports and datasets must reside in a **V2** workspace.\n- All target workspaces must be **V2** workspaces.\n- Maximum 50 reports.\n- Maximum 50 datasets.\n- Maximum 50 target workspaces.\n- For Azure Analysis Services or Analysis Services on-premises live connection reports, generating an embed token with row-level security might not work for several minutes after a [rebind](/rest/api/power-bi/reports/rebind-report).\n\n######\n",
                "operationId": "EmbedToken_GenerateToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "description": "Generate token parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateTokenRequestV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmbedToken"
                        }
                    }
                },
                "x-ms-examples": {
                    "Generate EmbedToken for two datasets with RLS identities and a single report with read-only permissions. This token allows to view the report dynamically bound to two different datasets": {
                        "parameters": {
                            "requestParameters": {
                                "datasets": [
                                    {
                                        "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                    },
                                    {
                                        "id": "e75afc47-1150-45e0-aba7-4eb04e4876e5"
                                    }
                                ],
                                "reports": [
                                    {
                                        "id": "b2e49b01-2356-4456-bfb9-3f4c2bc4ddbd"
                                    }
                                ],
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    },
                                    {
                                        "username": "iris@contoso.com",
                                        "roles": [ "executive" ],
                                        "datasets": [ "e75afc47-1150-45e0-aba7-4eb04e4876e5" ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "4b76f5ed-5a06-4150-8d1b-60f8e4c186f4",
                                    "expiration": "2028-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate EmbedToken for a dataset and two reports. Editing is allowed for only one of the two reports": {
                        "parameters": {
                            "requestParameters": {
                                "datasets": [
                                    {
                                        "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                    }
                                ],
                                "reports": [
                                    {
                                        "allowEdit": true,
                                        "id": "b2e49b01-2356-4456-bfb9-3f4c2bc4ddbd"
                                    },
                                    {
                                        "id": "759908bb-ead8-4a43-9645-7ffbf921c68d"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate an Embed Token expiring in 10 minutes": {
                        "parameters": {
                            "requestParameters": {
                                "datasets": [
                                    {
                                        "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                    }
                                ],
                                "reports": [
                                    {
                                        "id": "b2e49b01-2356-4456-bfb9-3f4c2bc4ddbd"
                                    }
                                ],
                                "identities": [
                                    {
                                        "username": "john@contoso.com",
                                        "roles": [ "sales" ],
                                        "datasets": [ "cfafbeb1-8037-4d0c-896e-a46fb27ff229" ]
                                    }
                                ],
                                "lifetimeInMinutes": 10
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "4b76f5ed-5a06-4150-8d1b-60f8e4c186f4",
                                    "expiration": "2028-07-29T17:58:19Z"
                                }
                            }
                        }
                    },
                    "Generate an EmbedToken for a Power BI report with a paginated visual. The paginated Report ID \"(f904e89a-7ebe-4aa0-8647-e409063b4850)\" of the paginated visual has to be included in the report IDs section.": {
                        "parameters": {
                            "requestParameters": {
                                "datasets": [
                                    {
                                        "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                                    }
                                ],
                                "reports": [
                                    {
                                        "id": "b2e49b01-2356-4456-bfb9-3f4c2bc4ddbd"
                                    },
                                    {
                                        "id": "f904e89a-7ebe-4aa0-8647-e409063b4850"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "token": "H4sI....AAA=",
                                    "tokenId": "49ae3742-54c0-4c29-af52-619ff93b5c80",
                                    "expiration": "2018-07-29T17:58:19Z"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/apps": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of apps in the organization. This is a preview API call.",
                "description": "\nThe query parameter $top is required.\n\n## Permissions\n\nDelegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Apps_GetAppsAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$top",
                        "description": "The requested number of entries in the refresh history. If not provided, the default is all available entries.",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Apps"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "$top": 10
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                                            "description": "The finance app",
                                            "name": "Finance",
                                            "publishedBy": "Bill",
                                            "lastUpdate": "2019-01-13T09:46:53.094+02:00"
                                        },
                                        {
                                            "id": "3d9b93c6-7b6d-4801-a491-1738910904fd",
                                            "description": "The marketing app",
                                            "name": "Marketing",
                                            "publishedBy": "Ben",
                                            "lastUpdate": "2018-11-13T09:46:53.094+02:00"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/apps/{appId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to the specified app. This is a preview API call.",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Apps_GetAppUsersAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "description": "The app ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AppUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "appId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "displayName": "John Nick",
                                        "emailAddress": "john@contoso.com",
                                        "appUserAccessRight": "ReadExplore",
                                        "identifier": "john@contoso.com",
                                        "graphId": "3fadb6e4-130c-4a8f-aeac-416e38b66756",
                                        "principalType": "User"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/users/{userId}/artifactAccess": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of artifacts that the given user have access to (Preview).",
                "description": "\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Users_GetUserArtifactAccessAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The graph ID or UPN of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Token required to get the next chunk of the result set",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArtifactAccessResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "userId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "artifactAccessEntities": [
                                        {
                                            "artifactId": "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "displayName": "test report",
                                            "artifactType": "Report",
                                            "accessRight": "ReadWrite"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/users/f089354e-8366-4e18-aea3-4cb4a3a50b48/artifactAccess?continuationToken='LDEsMTAwMDAwLDA%3D'",
                                    "continuationToken": "LDEsMTAwMDAwLDA%3D"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/users/{userId}/subscriptions": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of subscriptions that the given user has subscribed to (Preview).",
                "description": "\n### Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Users_GetUserSubscriptionsAsAdmin",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The graph ID or UPN of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Token required to get the next chunk of the result set",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionsByUserResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "userId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "subscriptionEntities": [
                                        {
                                            "id": "9225d0bc-9f5e-4819-a637-799c0c4fh3f1",
                                            "title": "Team Scorecard-test",
                                            "artifactId": "0b50f0bf-b22b-4685-83b9-b6d17f7f4e46",
                                            "artifactDisplayName": "Customer Profitability Sample",
                                            "subArtifactDisplayName": "Team Scorecard",
                                            "artifactType": "Report",
                                            "isEnabled": false,
                                            "frequency": "Daily",
                                            "startDate": "8/10/2021 12:00:00 AM",
                                            "endDate": "8/10/2022 12:00:00 AM",
                                            "linkToContent": false,
                                            "previewImage": true,
                                            "attachmentFormat": "PNG",
                                            "users": []
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/users/f089354e-8366-4e18-aea3-4cb4a3a50b48/subscriptions?continuationToken='LDEsMTAwMDAwLDA%3D'",
                                    "continuationToken": "LDEsMTAwMDAwLDA%3D"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/activityevents": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of audit activity events for a tenant.",
                "description": "\nProvide either a continuation token or both a start and end date time. `StartDateTime` and `EndDateTime` must be in the same UTC day and should be wrapped in single quotes.\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator) or authenticate using a service principal.\n- Delegated permissions are supported.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\n- Maximum 200 requests per hour.\n- Activity logging isn't supported for Microsoft Cloud Deutschland.\n\n######\n",
                "operationId": "Admin_GetActivityEvents",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startDateTime",
                        "in": "query",
                        "description": "Start date and time of the window for audit event results. Must be in ISO 8601 compliant UTC format.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDateTime",
                        "in": "query",
                        "description": "End date and time of the window for audit event results. Must be in ISO 8601 compliant UTC format.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "Token required to get the next chunk of the result set",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition, using 'Activity', 'UserId', or both properties. Supports only 'eq' and 'and' operators.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActivityEventResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get audit activity events between a time window": {
                        "parameters": {
                            "startDateTime": "'2019-08-13T07:55:00.000Z'",
                            "endDateTime": "'2019-08-13T08:55:00.000Z'"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "activityEventEntities": [
                                        {
                                            "Id": "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "CreationTime": "2019-08-13T07:55:15",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "779438769",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "127.0.0.1"
                                        },
                                        {
                                            "Id": "c632aa64-70fc-4e80-88f3-9fc2cdcacce8",
                                            "CreationTime": "2019-08-13T07:55:10",
                                            "Operation": "ViewDashboard",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "321HK34324",
                                            "Activity": "ViewDashboard",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "131.107.160.240"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/activityevents?continuationToken='%2BRID%3A244SAKlHY7YGAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AAQYAAAAAAAAAFwAAAAAAAAA%3D'",
                                    "continuationToken": "%2BRID%3A244SAKlHY7YGAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AAQYAAAAAAAAAFwAAAAAAAAA%3D"
                                }
                            }
                        }
                    },
                    "Get audit activity events between a time window and with a specific activity type": {
                        "parameters": {
                            "startDateTime": "'2019-08-13T07:55:00.000Z'",
                            "endDateTime": "'2019-08-13T08:55:00.000Z'",
                            "$filter": "Activity eq 'ViewReport'"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "activityEventEntities": [
                                        {
                                            "Id": "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "CreationTime": "2019-08-13T07:55:15",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "123456",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "127.0.0.1"
                                        },
                                        {
                                            "Id": "c632aa64-70fc-4e80-88f3-9fc2cdcacce8",
                                            "CreationTime": "2019-08-13T07:55:10",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "42343KJK53K45J",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "131.107.160.240"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/activityevents?continuationToken='%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D'&$filter=Activity eq 'ViewReport'",
                                    "continuationToken": "%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D"
                                }
                            }
                        }
                    },
                    "Get audit activity events within a time window for a specific user ID": {
                        "parameters": {
                            "startDateTime": "'2019-08-13T07:55:00.000Z'",
                            "endDateTime": "'2019-08-13T08:55:00.000Z'",
                            "$filter": "UserId eq 'john@contoso.com'"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "activityEventEntities": [
                                        {
                                            "Id": "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "CreationTime": "2019-08-13T07:55:15",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "123456",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "127.0.0.1"
                                        },
                                        {
                                            "Id": "c632aa64-70fc-4e80-88f3-9fc2cdcacce8",
                                            "CreationTime": "2019-08-13T07:55:10",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "42343KJK53K45J",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "131.107.160.240"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/activityevents?continuationToken='%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D'&$filter=Activity eq 'ViewReport'",
                                    "continuationToken": "%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D"
                                }
                            }
                        }
                    },
                    "Get audit activity events within a time window for a specific activity type and user ID": {
                        "parameters": {
                            "startDateTime": "'2019-08-13T07:55:00.000Z'",
                            "endDateTime": "'2019-08-13T08:55:00.000Z'",
                            "$filter": "Activity eq 'viewreport' and UserId eq 'john@contoso.com'"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "activityEventEntities": [
                                        {
                                            "Id": "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "CreationTime": "2019-08-13T07:55:15",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "123456",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "127.0.0.1"
                                        },
                                        {
                                            "Id": "c632aa64-70fc-4e80-88f3-9fc2cdcacce8",
                                            "CreationTime": "2019-08-13T07:55:10",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "42343KJK53K45J",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "131.107.160.240"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/activityevents?continuationToken='%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D'&$filter=Activity eq 'ViewReport'",
                                    "continuationToken": "%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D"
                                }
                            }
                        }
                    },
                    "Get the next set of audit activity events by sending the continuation token to the API": {
                        "parameters": {
                            "continuationToken": "%2BRID%3A244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "activityEventEntities": [
                                        {
                                            "Id": "91ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                            "CreationTime": "2019-08-13T08:55:15",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "d43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "1236",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "127.0.0.1"
                                        },
                                        {
                                            "Id": "g632bb64-70fc-4e80-88f3-9fc2cdcacce8",
                                            "CreationTime": "2019-08-13T09:55:10",
                                            "Operation": "ViewReport",
                                            "OrganizationId": "e43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                            "UserKey": "42343KJK55J",
                                            "Activity": "ViewReport",
                                            "Workload": "PowerBI",
                                            "UserId": "john@contoso.com",
                                            "ClientIP": "131.107.160.240"
                                        }
                                    ],
                                    "continuationUri": "https://api.powerbi.com/v1.0/myorg/admin/activityevents?continuationToken='%2BRID%$4Z244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D'",
                                    "continuationToken": "%2BRID%$4Z244SAKlHY7YQAAAAAAAAAA%3D%3D%23RT%3A1%23TRC%3A5%23FPC%3AARAAAAAAAAAAFwAAAAAAAAA%3D"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/informationprotection/removeLabels": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Remove sensitivity labels from artifacts by artifact ID.",
                "description": "\nFor a usage example, see [Set or remove sensitivity labels](/power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api).\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n- The admin user must have sufficient [usage rights](/azure/information-protection/configure-usage-rights) to delete labels.\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\n- Maximum 25 requests per hour.\n- Each request can update up to 2000 artifacts.\n\n######\n",
                "operationId": "InformationProtection_RemoveLabelsAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "artifacts",
                        "description": "A composite of artifact ID lists for each type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InformationProtectionArtifactsChangeLabel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InformationProtectionChangeLabelResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "artifacts": {
                                "dashboards": [
                                    {
                                        "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542a"
                                    },
                                    {
                                        "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8b"
                                    }
                                ],
                                "reports": [
                                    {
                                        "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542c"
                                    }
                                ],
                                "datasets": [
                                    {
                                        "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542e"
                                    },
                                    {
                                        "id": "myDatabaseName"
                                    }
                                ],
                                "dataflows": [
                                    {
                                        "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8g"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "dashboards": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542a",
                                            "status": "NotFound"
                                        },
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8b",
                                            "status": "Failed"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542c",
                                            "status": "Succeeded"
                                        }
                                    ],
                                    "datasets": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542e",
                                            "status": "InsufficientUsageRights"
                                        },
                                        {
                                            "id": "myDatabaseName",
                                            "status": "FailedToGetUsageRights"
                                        }
                                    ],
                                    "dataflows": [
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8g",
                                            "status": "Succeeded"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/informationprotection/setLabels": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Set sensitivity labels on content in Power BI by artifact ID.",
                "description": "\nTo set a sensitivity label using this API, the admin user or the delegated user (if provided) must have the label included in their [label policy](/microsoft-365/compliance/create-sensitivity-labels?view=o365-worldwide). For a usage example, see [Set or remove sensitivity labels](/power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api).\n\n## Permissions\n\n- The user must have administrator rights (such as Office 365 Global Administrator or Power BI Service Administrator).\n- The admin user and the delegated user (if provided) must have sufficient [usage rights](/azure/information-protection/configure-usage-rights) to set labels.\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\n- Maximum 25 requests per hour.\n- Each request can update up to 2000 artifacts.\n\n######\n",
                "operationId": "InformationProtection_SetLabelsAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "informationProtectionChangeLabelDetails",
                        "description": "Set label details.",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InformationProtectionChangeLabelDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InformationProtectionChangeLabelResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "informationProtectionChangeLabelDetails": {
                                "artifacts": {
                                    "dashboards": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542a"
                                        },
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8b"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542c"
                                        }
                                    ],
                                    "datasets": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542e"
                                        },
                                        {
                                            "id": "myDatabaseName"
                                        }
                                    ],
                                    "dataflows": [
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8g"
                                        }
                                    ]
                                },
                                "labelId": "fe472f5e-636e-4c10-a1c6-7e9edc0b542p",
                                "assignmentMethod": "Standard",
                                "delegatedUser": {
                                    "emailAddress": "john@contoso.com"
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "dashboards": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542a",
                                            "status": "NotFound"
                                        },
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8b",
                                            "status": "Failed"
                                        }
                                    ],
                                    "reports": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542c",
                                            "status": "Succeeded"
                                        }
                                    ],
                                    "datasets": [
                                        {
                                            "id": "fe472f5e-636e-4c10-a1c6-7e9edc0b542e",
                                            "status": "InsufficientUsageRights"
                                        },
                                        {
                                            "id": "myDatabaseName",
                                            "status": "FailedToGetUsageRights"
                                        }
                                    ],
                                    "dataflows": [
                                        {
                                            "id": "476fcafe-b514-495d-b13f-ca9a4f0b1d8g",
                                            "status": "Succeeded"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/pipelines": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of deployment pipelines for the organization.",
                "description": "\n## Permissions\n\nThe user must have administrator rights or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Pipelines_GetPipelinesAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expands related entities inline, receives a comma-separated list of data types. Supported: users, stages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filters the results based on a boolean condition.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Returns only the first n results. This parameter must be in the range of 1-5000.",
                        "required": false,
                        "minimum": 1,
                        "maximum": 5000,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Skips the first n results. Use with top to fetch results beyond the first 5000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AdminPipelines"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get deployment pipelines": {
                        "parameters": {},
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                        "displayName": "Marketing Deployment Pipeline",
                                        "description": "Power BI deployment pipeline to manage marketing reports"
                                    },
                                    {
                                        "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                        "displayName": "Financing Deployment Pipeline",
                                        "description": "Power BI deployment pipeline to manage financing reports"
                                    }
                                ]
                            }
                        }
                    },
                    "Get deployment pipelines with users expanded": {
                        "parameters": {
                            "$expand": "users",
                            "$top": 100
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                            "displayName": "Marketing Deployment Pipeline",
                                            "description": "Power BI deployment pipeline to manage marketing reports",
                                            "users": [
                                                {
                                                    "identifier": "john@contoso.com",
                                                    "accessRight": "Admin",
                                                    "principalType": "User"
                                                },
                                                {
                                                    "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                                    "accessRight": "Admin",
                                                    "principalType": "Group"
                                                },
                                                {
                                                    "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d",
                                                    "accessRight": "Admin",
                                                    "principalType": "App"
                                                }
                                            ]
                                        },
                                        {
                                            "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                            "displayName": "Financing Deployment Pipeline",
                                            "description": "Power BI deployment pipeline to manage financing reports",
                                            "users": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get orphaned deployment pipelines": {
                        "parameters": {
                            "$expand": "users",
                            "$top": 100,
                            "$filter": "(not users/any())"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "183dcf10-47b8-48c4-84aa-f0bf9d5f8fcf",
                                            "displayName": "Financing Deployment Pipeline",
                                            "description": "Power BI deployment pipeline to manage financing reports",
                                            "users": []
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Get deployment pipelines with stages expanded": {
                        "parameters": {
                            "$expand": "stages",
                            "$top": 100,
                            "skip": 0
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "a5ded933-57b7-41f4-b072-ed4c1f9d5824",
                                            "displayName": "Marketing Deployment Pipeline",
                                            "description": "Power BI deployment pipeline to manage marketing reports",
                                            "stages": [
                                                {
                                                    "order": "0",
                                                    "workspaceId": "5dba60b0-d9a7-42a3-b12c-6d9d51e7739a",
                                                    "workspaceName": "SQlAzure-Refresh"

                                                },
                                                {
                                                    "order": "1",
                                                    "workspaceId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                                                    "workspaceName": "SQlAzure-Refresh[Test]"
                                                },
                                                {
                                                    "order": "2"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/pipelines/{pipelineId}/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Returns a list of users that have access to a specified deployment pipeline.",
                "description": "\n## Permissions\n\nThe user must have administrator rights or authenticate using a service principal.\n\n## Required scope\n\nTenant.Read.All or Tenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Pipelines_GetPipelineUsersAsAdmin",
                "consumes": [

                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "required": true,
                        "description": "The deployment pipeline ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PipelineUsers"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get users of a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "identifier": "john@contoso.com",
                                        "accessRight": "Admin",
                                        "principalType": "User"
                                    },
                                    {
                                        "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                        "accessRight": "Admin",
                                        "principalType": "Group"
                                    },
                                    {
                                        "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d",
                                        "accessRight": "Admin",
                                        "principalType": "App"
                                    }
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Grants user permissions to a specified deployment pipeline.",
                "description": "\n## Permissions\n\nThe user must have administrator rights.\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Pipelines_UpdateUserAsAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "required": true,
                        "description": "The deployment pipeline ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userDetails",
                        "in": "body",
                        "description": "Details of user access right",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PipelineUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Add user to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "john@contoso.com",
                                "accessRight": "Admin",
                                "principalType": "User"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Add group to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "154aef10-47b8-48c4-ab97-f0bf9d5f8fcf",
                                "accessRight": "Admin",
                                "principalType": "Group"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Add service principal to a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "userDetails": {
                                "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d",
                                "accessRight": "Admin",
                                "principalType": "App"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/admin/pipelines/{pipelineId}/users/{identifier}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Removes user permissions from a specified deployment pipeline.",
                "description": "\n## Permissions\n\nThe user must have administrator rights.\n\n## Required scope\n\nTenant.ReadWrite.All\n\n## Limitations\n\nMaximum 200 requests per hour.\n\n######\n",
                "operationId": "Pipelines_DeleteUserAsAdmin",
                "consumes": [
                ],
                "produces": [
                ],
                "parameters": [
                    {
                        "name": "pipelineId",
                        "in": "path",
                        "required": true,
                        "description": "The deployment pipeline ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "description": "For Principal type 'User' provide UPN , otherwise provide [Object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Delete user access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "john@contoso.com"
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Delete group access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "5dba60b0-d9a7-42a3-b12c-6d9d51e7739a"
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Delete service principal access from a deployment pipeline": {
                        "parameters": {
                            "pipelineId": "8ce96c50-85a0-4db3-85c6-7ccc3ed46523",
                            "identifier": "a35d842b-90d5-59a1-c56a-5f8fcff0bf9d"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/CreateTemplateAppInstallTicket": {
            "post": {
                "tags": [
                    "TemplateApps"
                ],
                "summary": "Generates an installation ticket for the [automated install flow](/power-bi/developer/template-apps/template-apps-auto-install) of the specified template app.",
                "description": "\n## Permissions\n\nThe caller must use service principal for authentication. For more information, see [Embed Power BI content with service principal](/power-bi/developer/embed-service-principal) and [Considerations and limitations](/power-bi/developer/embedded/embed-service-principal#considerations-and-limitations).\n\n## Limitations\n\n- The tenant making this API call *must* own the specified template app.\n- The template app must either be published to Microsoft AppSource, or, both the ticket creator and the end-user installing with the ticket must have explicit access to the app.\n- All query parameters in the install ticket *must* be configured.\n\n######\n",
                "operationId": "TemplateApps_CreateInstallTicket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestParameters",
                        "description": "Create Install Ticket parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateInstallTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/InstallTicket"
                        }
                    }
                },
                "x-ms-examples": {
                    "Create install ticket for Template app with 2 query parameters to set": {
                        "parameters": {
                            "requestParameters": {
                                "appId": "91ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87",
                                "packageKey": "g632bb64...OfsoqT56xEM=",
                                "ownerTenantId": "d43e3248-3d83-44aa-a94d-c836bd7f9b79",
                                "config": {
                                    "configuration": {
                                        "param1": "value1",
                                        "param2": "value2"
                                    }
                                }
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "ticket": "H4sI....AAA=",
                                    "ticketId": "4b76f5ed-5a06-4150-8d1b-60f8e4c186f4",
                                    "expiration": "2020-07-29T17:58:19Z"
                                }
                            },
                            "401": {
                                "body": {
                                    "error": {
                                        "code": "ServiceAppApplicationOwnershipValidationFailed",
                                        "pbi.error": {
                                            "code": "ServiceAppApplicationOwnershipValidationFailed",
                                            "parameters": {},
                                            "details": [],
                                            "exceptionCulprit": 1
                                        }
                                    }
                                }
                            },
                            "400": {
                                "body": {
                                    "error": {
                                        "code": "ServiceAppInstallTicketInvalidConfiguration",
                                        "pbi.error": {
                                            "code": "ServiceAppInstallTicketInvalidConfiguration",
                                            "parameters": {},
                                            "details": [],
                                            "exceptionCulprit": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/reports/{reportId}/Default.TakeOver": {
            "post": {
                "tags": [
                    "Reports"
                ],
                "summary": "Transfers ownership over the specified paginated report datasources to the current authorized user.",
                "description": "<br/>**Required scope**: Report.ReadWrite.All <br/>To set the permissions scope, see [Register an app](https://docs.microsoft.com/power-bi/developer/register-app).<li>TakeOver report datasources supports only paginated reports</li>",
                "operationId": "Reports_TakeOverInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The report ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "reportId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "EndorsementDetails": {
            "description": "Power BI endorsement details",
            "properties": {
                "endorsement": {
                    "type": "string",
                    "description": "The endorsement status"
                },
                "certifiedBy": {
                    "type": "string",
                    "description": "The user that certified the artifact"
                }
            }
        },
        "DatasourceUsage": {
            "required": [
                "datasourceInstanceId"
            ],
            "description": "Data source usage",
            "properties": {
                "datasourceInstanceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The data source instance ID"
                }
            }
        },
        "SensitivityLabel": {
            "required": [
                "labelId"
            ],
            "description": "Artifact sensitivity label info",
            "properties": {
                "labelId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The sensitivity label ID"
                }
            }
        },
        "ModifiedWorkspace": {
            "required": [
                "Id"
            ],
            "description": "A modified workspace",
            "properties": {
                "Id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace object ID"
                }
            }
        },
        "ScanRequest": {
            "description": "A scan request",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The scan ID"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The scan creation date and time"
                },
                "status": {
                    "type": "string",
                    "description": "The scan state"
                },
                "error": {
                    "$ref": "#/definitions/PowerBIApiErrorResponseDetail",
                    "description": "The scan error (if any)"
                }
            }
        },
        "PowerBIApiErrorResponseDetail": {
            "description": "Detailed information about a Power BI error response",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error code"
                },
                "message": {
                    "type": "string",
                    "description": "The error message"
                },
                "target": {
                    "type": "string",
                    "description": "The error target"
                }
            }
        },
        "RequiredWorkspaces": {
            "description": "A required workspaces request",
            "properties": {
                "workspaces": {
                    "type": "array",
                    "description": "The required workspace IDs to be scanned (supports 1 to 100 workspace IDs)",
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Workspace object ID"
                    }
                }
            }
        },
        "WorkspaceInfoResponse": {
            "description": "Workspace info response",
            "properties": {
                "workspaces": {
                    "type": "array",
                    "description": "The workspace info associated with this scan",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfo"
                    }
                },
                "datasourceInstances": {
                    "type": "array",
                    "description": "The data source instances associated with this scan",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                }
            }
        },
        "WorkspaceInfo": {
            "required": [
                "id"
            ],
            "description": "Workspace info details",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace object ID"
                },
                "name": {
                    "type": "string",
                    "description": "The workspace name"
                },
                "description": {
                    "type": "string",
                    "description": "The workspace description"
                },
                "type": {
                    "type": "string",
                    "description": "The workspace type"
                },
                "state": {
                    "type": "string",
                    "description": "The workspace state"
                },
                "dataRetrievalState": {
                    "type": "string",
                    "description": "The workspace data retrieval state"
                },
                "isOnDedicatedCapacity": {
                    "type": "boolean",
                    "description": "Whether the workspace is on dedicated capacity"
                },
                "capacityId": {
                    "type": "string",
                    "description": "The workspace capacity ID"
                },
                "reports": {
                    "type": "array",
                    "description": "The reports associated with this workspace. The list of report properties returned varies for different API calls, so you might not see all report properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards associated with this workspace. The list of dashboard properties returned varies for different API calls, so you might not see all dashboard properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDashboard"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets associated with this workspace. The list of dataset properties returned varies for different API calls, so you might not see all dataset properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDataset"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows associated with this workspace. The list of dataflow properties returned varies for different API calls, so you might not see all dataflow properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDataflow"
                    }
                },
                "users": {
                    "type": "array",
                    "description": "The users with access to the workspace. The list is returned only when explicitly requested, and is only retrieved for workspaces in the new workspace experience. To retrieve a list of users for a classic workspace, use the Azure Active Directory Graph API.",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                }
            }
        },
        "Import": {
            "required": [
                "id"
            ],
            "description": "The import object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The import ID"
                },
                "name": {
                    "type": "string",
                    "description": "The import name"
                },
                "importState": {
                    "type": "string",
                    "description": "The import upload state",
                    "enum": [
                        "Publishing",
                        "Succeeded",
                        "Failed"
                    ]
                },
                "reports": {
                    "type": "array",
                    "description": "The reports associated with this import",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets associated with this import",
                    "items": {
                        "$ref": "#/definitions/Dataset"
                    }
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Import creation date and time"
                },
                "updatedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Import last update date and time"
                }
            }
        },
        "ImportInfo": {
            "description": "The information about the import",
            "properties": {
                "filePath": {
                    "type": "string",
                    "description": "The path of the OneDrive for Business Excel (.xlsx) file to import, which can be absolute or relative. Power BI Desktop report (.pbix) files aren't supported."
                },
                "connectionType": {
                    "type": "string",
                    "description": "The import connection type for a OneDrive for Business file",
                    "enum": [
                        "import",
                        "connect"
                    ],
                    "x-ms-enum": {
                        "name": "connectionType",
                        "modelAsExtensible": true
                    }
                },
                "fileUrl": {
                    "type": "string",
                    "description": "The shared access signature URL of the temporary blob storage used to import large Power BI Desktop report (.pbix) files between 1 GB and 10 GB in size."
                }
            }
        },
        "Object": {
            "properties": {

            }
        },
        "Datasets": {
            "description": "A dataset OData list wrapper",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The datasets",
                    "items": {
                        "$ref": "#/definitions/Dataset"
                    }
                }
            }
        },
        "AdminDatasets": {
            "description": "A dataset odata list wrapper",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The datasets",
                    "items": {
                        "$ref": "#/definitions/AdminDataset"
                    }
                }
            }
        },
        "DatasetNavigationProperties": {
            "description": "A list of navigation related properties of a dataset.",
            "properties": {
                "CreateReportEmbedURL": {
                    "type": "string",
                    "description": "The dataset create report embed URL"
                },
                "QnaEmbedURL": {
                    "type": "string",
                    "description": "The dataset Q&A embed URL"
                },
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the dataset"
                }
            }
        },
        "DatasetBaseProperties": {
            "required": [
                "id"
            ],
            "description": "A Power BI dataset. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The dataset ID"
                },
                "name": {
                    "type": "string",
                    "description": "The dataset name"
                },
                "configuredBy": {
                    "type": "string",
                    "description": "The dataset owner"
                },
                "CreatedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The dataset creation date and time"
                },
                "ContentProviderType": {
                    "type": "string",
                    "description": "The content provider type for the dataset"
                },
                "description": {
                    "type": "string",
                    "description": "The dataset description"
                },
                "upstreamDataflows": {
                    "type": "array",
                    "description": "The upstream dataflows",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                }
            }
        },
        "DatasetMiscProperties": {
            "description": "A list of miscellaneous properties returned for a dataset. Returned by User and Admin APIs.",
            "properties": {
                "addRowsAPIEnabled": {
                    "type": "boolean",
                    "description": "Whether the dataset allows adding new rows"
                },
                "IsRefreshable": {
                    "type": "boolean",
                    "description": "Whether the dataset can be refreshed"
                }
            }
        },
        "DatasetSecurityProperties": {
            "description": "A list of security related properties of a Power BI dataset.",
            "properties": {
                "IsEffectiveIdentityRequired": {
                    "type": "boolean",
                    "description": "Whether the dataset requires an effective identity, which you must send in a [GenerateToken](/rest/api/power-bi/embed-token/generate-token) API call."
                },
                "IsEffectiveIdentityRolesRequired": {
                    "type": "boolean",
                    "description": "Whether row-level security is defined inside the Power BI Desktop report (.pbix) file. If so, you must specify a role."
                },
                "IsOnPremGatewayRequired": {
                    "type": "boolean",
                    "description": "The dataset requires an on-premises data gateway"
                },
                "Encryption": {
                    "$ref": "#/definitions/Encryption",
                    "description": "Dataset encryption information. Only applicable when `$expand` is specified."
                }
            }
        },
        "DatasetUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The dataset user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Dataset Users as Admin](/rest/api/power-bi/admin/datasets-get-dataset-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/DatasetUser"
                    }
                }
            }
        },
        "DatasetSchemaProperties": {
            "description": "A list of properties related to the schema of the dataset.",
            "properties": {
                "tables": {
                    "type": "array",
                    "description": "The dataset tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                },
                "schemaRetrievalError": {
                    "type": "string",
                    "description": "The dataset schema retrieval error"
                },
                "schemaMayNotBeUpToDate": {
                    "type": "boolean",
                    "description": "Whether the dataset schema might not be up to date"
                }
            }
        },
        "DatasetStorageMode": {
            "properties": {
                "targetStorageMode": {
                    "type": "string",
                    "description": "The dataset storage mode"
                }
            }
        },
        "UpstreamDatasetsProperties": {
            "properties": {
                "upstreamDatasets": {
                    "type": "array",
                    "description": "The upstream datasets",
                    "items": {
                        "$ref": "#/definitions/DependentDataset"
                    }
                }
            }
        },
        "Dataset": {
            "description": "A Power BI dataset. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSecurityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetUserProperties"
                },
                {
                    "$ref": "#/definitions/DatasetMiscProperties"
                }
            ]
        },
        "AdminDataset": {
            "description": "A Power BI dataset returned by Admin APIs. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSecurityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetUserProperties"
                },
                {
                    "$ref": "#/definitions/DatasetMiscProperties"
                },
                {
                    "$ref": "#/definitions/DatasetStorageMode"
                }
            ]
        },
        "WorkspaceInfoDataset": {
            "description": "A Power BI dataset returned by WorkspaceInfo APIs. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSchemaProperties"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetStorageMode"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDataflowProperties"
                },
                {
                    "$ref": "#/definitions/UpstreamDatasetsProperties"
                }
            ]
        },
        "Encryption": {
            "description": "Encryption information for a dataset",
            "properties": {
                "EncryptionStatus": {
                    "type": "string",
                    "description": "Dataset encryption status",
                    "enum": [
                        "Unknown",
                        "NotSupported",
                        "InSyncWithWorkspace",
                        "NotInSyncWithWorkspace"
                    ],
                    "x-ms-enum": {
                        "name": "EncryptionStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Unknown",
                                "description": "The encryption status is unknown due to dataset corruption"
                            },
                            {
                                "value": "NotSupported",
                                "description": "Encryption is not supported for this dataset"
                            },
                            {
                                "value": "InSyncWithWorkspace",
                                "description": "Encryption is supported and is in sync with the encryption settings"
                            },
                            {
                                "value": "NotInSyncWithWorkspace",
                                "description": "Encryption is supported but isn't in sync with the encryption settings"
                            }
                        ]
                    }
                }
            }
        },
        "CreateDatasetRequest": {
            "required": [
                "name",
                "tables"
            ],
            "description": "A Power BI dataset",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The dataset name"
                },
                "tables": {
                    "type": "array",
                    "description": "The dataset tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                },
                "relationships": {
                    "type": "array",
                    "description": "The dataset relationships",
                    "items": {
                        "$ref": "#/definitions/Relationship"
                    }
                },
                "datasources": {
                    "type": "array",
                    "description": "The data sources associated with this dataset",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                },
                "defaultMode": {
                    "type": "string",
                    "description": "The dataset mode or type",
                    "enum": [
                        "AsAzure",
                        "AsOnPrem",
                        "Push",
                        "Streaming",
                        "PushStreaming"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetMode",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "AsAzure",
                                "description": "A dataset with a live connection to Azure Analysis Services"
                            },
                            {
                                "value": "AsOnPrem",
                                "description": "A dataset with a live connection to on-premises Azure Analysis Services"
                            },
                            {
                                "value": "Push",
                                "description": "A dataset that allows programmatic access for pushing data into PowerBI"
                            },
                            {
                                "value": "Streaming",
                                "description": "A dataset that supports data streaming. For more information, see [Real-time streaming in Power BI](/power-bi/connect-data/service-real-time-streaming)."
                            },
                            {
                                "value": "PushStreaming",
                                "description": "A dataset that supports data streaming and allows programmatic access for pushing data into Power BI"
                            }
                        ]
                    }
                }
            }
        },
        "Table": {
            "required": [
                "name",
                "columns"
            ],
            "description": "A dataset table",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The table name"
                },
                "columns": {
                    "type": "array",
                    "description": "The column schema for this table",
                    "items": {
                        "$ref": "#/definitions/Column"
                    }
                },
                "rows": {
                    "type": "array",
                    "description": "The data rows within this table",
                    "items": {
                        "$ref": "#/definitions/Row"
                    }
                },
                "measures": {
                    "type": "array",
                    "description": "The measures within this table",
                    "items": {
                        "$ref": "#/definitions/Measure"
                    }
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "(Optional) Whether this dataset table is hidden"
                },
                "description": {
                    "type": "string",
                    "description": "The table description"
                },
                "source": {
                    "type": "array",
                    "description": "The table source",
                    "items": {
                        "$ref": "#/definitions/ASMashupExpression"
                    }
                }
            }
        },
        "ASMashupExpression": {
            "description": "A dataset table source",
            "required": [
                "expression"
            ],
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "The source expression"
                }
            }
        },
        "PostRowsRequest": {
            "description": "",
            "properties": {
                "rows": {
                    "type": "array",
                    "description": "An array of data rows pushed to a dataset table",
                    "items": {
                        "$ref": "#/definitions/Object"
                    }
                }
            }
        },
        "DependentDataflows": {
            "description": "The OData response wrapper for a list of Power BI dependent dataflows",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dependent dataflows",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                }
            }
        },
        "DependentDatasets": {
            "description": "The OData response wrapper for a list of Power BI dependent datasets",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dependent datasets",
                    "items": {
                        "$ref": "#/definitions/DependentDataset"
                    }
                }
            }
        },
        "DatasetToDataflowLinksResponse": {
            "description": "The OData response wrapper for a list of Power BI dataset to dataflow links",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dataset to dataflow links ",
                    "items": {
                        "$ref": "#/definitions/DatasetToDataflowLinkResponse"
                    }
                }
            }
        },
        "Relationship": {
            "required": [
                "name",
                "fromTable",
                "fromColumn",
                "toTable",
                "toColumn"
            ],
            "description": "A relationship between tables in a dataset",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The relationship name and identifier"
                },
                "crossFilteringBehavior": {
                    "type": "string",
                    "description": "The filter direction of the relationship",
                    "enum": [
                        "OneDirection",
                        "BothDirections",
                        "Automatic"
                    ],
                    "x-ms-enum": {
                        "name": "CrossFilteringBehavior",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "OneDirection",
                                "description": "For filtering purposes, the filter will be applied on the table where values are being aggregated."
                            },
                            {
                                "value": "BothDirections",
                                "description": "For filtering purposes, both tables are treated as a single table."
                            },
                            {
                                "value": "Automatic",
                                "description": "Cross filtering behavior is automatically defined"
                            }
                        ]
                    },
                    "default": "OneDirection"
                },
                "fromTable": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The name of the foreign key table"
                },
                "fromColumn": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The name of the foreign key column"
                },
                "toTable": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The name of the primary key table"
                },
                "toColumn": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The name of the primary key column"
                }
            }
        },
        "Datasource": {
            "description": "A Power BI data source",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "(Deprecated) The data source name. Available only for DirectQuery."
                },
                "connectionString": {
                    "type": "string",
                    "description": "(Deprecated) The data source connection string. Available only for DirectQuery."
                },
                "datasourceType": {
                    "type": "string",
                    "description": "The data source type"
                },
                "connectionDetails": {
                    "$ref": "#/definitions/DatasourceConnectionDetails",
                    "description": "The data source connection details"
                },
                "gatewayId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The bound gateway ID, which is empty when not bound to a gateway. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The bound data source ID, which is empty when not bound to a gateway"
                }
            }
        },
        "DatasourceConnectionDetails": {
            "description": "The Power BI data source connection details",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "The connection server"
                },
                "database": {
                    "type": "string",
                    "description": "The connection database"
                },
                "url": {
                    "type": "string",
                    "description": "The connection URL"
                }
            }
        },
        "UpdateDatasourcesRequest": {
            "required": [
                "updateDetails"
            ],
            "description": "",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "An array of data source connection update requests",
                    "items": {
                        "$ref": "#/definitions/UpdateDatasourceConnectionRequest"
                    }
                }
            }
        },
        "UpdateDatasourceConnectionRequest": {
            "required": [
                "connectionDetails"
            ],
            "description": "",
            "properties": {
                "connectionDetails": {
                    "$ref": "#/definitions/DatasourceConnectionDetails",
                    "description": "The target connection details of the updated data source"
                },
                "datasourceSelector": {
                    "$ref": "#/definitions/Datasource",
                    "description": "The connection details of the data source that needs update. This is mandatory when a dataset has more than one data source."
                }
            }
        },
        "Column": {
            "required": [
                "name",
                "dataType"
            ],
            "description": "A dataset column",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The column name"
                },
                "dataType": {
                    "type": "string",
                    "description": "The column data type"
                },
                "formatString": {
                    "type": "string",
                    "description": "(Optional) The format of the column as specified in [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)"
                },
                "sortByColumn": {
                    "type": "string",
                    "description": "(Optional) String name of a column in the same table to be used to order the current column"
                },
                "dataCategory": {
                    "type": "string",
                    "description": "(Optional) String value to be used for the data category which describes the data within this column"
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "(Optional) Property indicating if the column is hidden from view. Default is false."
                },
                "summarizeBy": {
                    "type": "string",
                    "description": "(Optional) Aggregate Function to use for summarizing this column"
                }
            }
        },
        "Row": {
            "description": "A data row in a dataset",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique row ID"
                }
            }
        },
        "Measure": {
            "required": [
                "name",
                "expression"
            ],
            "description": "A Power BI measure",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The measure name"
                },
                "expression": {
                    "type": "string",
                    "description": "A valid DAX expression"
                },
                "formatString": {
                    "type": "string",
                    "description": "(Optional) A string describing how the value should be formatted when it is displayed as specified in [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)"
                },
                "description": {
                    "type": "string",
                    "description": "(Optional) Measure description"
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "(Optional) Is measure hidden"
                }
            }
        },
        "Tables": {
            "description": "The OData response wrapper for a Power BI table collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The Power BI tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                }
            }
        },
        "GatewayDatasources": {
            "description": "The OData response wrapper for a Power BI gateway data source collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of gateway data sources",
                    "items": {
                        "$ref": "#/definitions/GatewayDatasource"
                    }
                }
            }
        },
        "GatewayDatasource": {
            "required": [
                "id",
                "gatewayId",
                "credentialType"
            ],
            "description": "A Power BI gateway data source",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID for the data source"
                },
                "gatewayId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The associated gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceName": {
                    "type": "string",
                    "description": "The name of the data source"
                },
                "datasourceType": {
                    "type": "string",
                    "description": "The type of [data source](/power-bi/connect-data/power-bi-data-sources).\n\n\n| API name for the data source | | |\n|-|-|-|\n| ActiveDirectory | AdobeAnalytics | AdoDotNet |\n| AnalysisServices | AzureBlobs | AzureDataLakeStorage |\n| AzureMarketplace | AzureTables | BizTalk |\n| CDPA | CustomConnector | CustomHttpApi |\n| DB2 | Essbase | EventHub |\n| Excel | Exchange | Extension |\n| Facebook | File | Folder |\n| GoogleAnalytics | Hdfs | HDInsight |\n| Informix | MQ | MySql |\n| OData | ODBC | OleDb |\n| Oracle | PostgreSql | PowerQueryMashup \n| PubNub | Salesforce | SAPBW |\n| SAPBWMessageServer | SapErp | SAPHana |\n| SharePoint | SharePointDocLib | SharePointList |\n| Sql | Sybase | Teradata |\n| UIFlow | Web |"
                },
                "connectionDetails": {
                    "type": "string",
                    "description": "Connection details in JSON format"
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of data source credentials",
                    "enum": [
                        "Basic",
                        "Windows",
                        "Anonymous",
                        "OAuth2",
                        "Key"
                    ],
                    "x-ms-enum": {
                        "name": "credentialType",
                        "modelAsExtensible": true
                    }
                },
                "credentialDetails": {
                    "$ref": "#/definitions/GatewayDatasourceCredentialDetails",
                    "description": "The connection details for the data source that needs update. The connection details are mandatory when the dataset has more than one data source."
                }
            }
        },
        "DependentDataflow": {
            "description": "A Power BI dependent dataflow",
            "properties": {
                "targetDataflowId": {
                    "type": "string",
                    "description": "The target dataflow ID"
                },
                "groupId": {
                    "type": "string",
                    "description": "The target group ID"
                }
            }
        },
        "DependentDataset": {
            "description": "A Power BI dependent dataset",
            "properties": {
                "targetDatasetId": {
                    "type": "string",
                    "description": "The target dataset ID"
                },
                "groupId": {
                    "type": "string",
                    "description": "The target group ID"
                }
            }
        },
        "DatasetToDataflowLinkResponse": {
            "description": "A Power BI dataset to dataflow link",
            "properties": {
                "datasetObjectId": {
                    "type": "string",
                    "description": "The dataset object ID"
                },
                "dataflowObjectId": {
                    "type": "string",
                    "description": "The dataflow object ID"
                },
                "workspaceObjectId": {
                    "type": "string",
                    "description": "The workspace object ID"
                }
            }
        },
        "Datasources": {
            "description": "The OData response wrapper for a Power BI data source collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The data source collection",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                }
            }
        },
        "Reports": {
            "description": "The OData response wrapper for a Power BI report collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The report collection",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                }
            }
        },
        "AdminReports": {
            "description": "OData response wrapper for a Power BI Admin report collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The report collection",
                    "items": {
                        "$ref": "#/definitions/AdminReport"
                    }
                }
            }
        },
        "Pages": {
            "description": "The OData response wrapper for a Power BI page collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The page collection",
                    "items": {
                        "$ref": "#/definitions/Page"
                    }
                }
            }
        },
        "Dashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/Dashboard"
                    }
                }
            }
        },
        "AdminDashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/AdminDashboard"
                    }
                }
            }
        },
        "WorkspaceInfoDashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDashboard"
                    }
                }
            }
        },
        "Tiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/Tile"
                    }
                }
            }
        },
        "AdminTiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/AdminTile"
                    }
                }
            }
        },
        "WorkspaceInfoTiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoTile"
                    }
                }
            }
        },
        "Imports": {
            "description": "The OData response wrapper for a Power BI import collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The import collection",
                    "items": {
                        "$ref": "#/definitions/Import"
                    }
                }
            }
        },
        "Groups": {
            "description": "The OData response wrapper for a list of Power BI groups",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of groups",
                    "items": {
                        "$ref": "#/definitions/Group"
                    }
                }
            }
        },
        "AdminGroups": {
            "description": "The OData response wrapper for a list of Power BI groups returned by Admin APIs",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of groups",
                    "items": {
                        "$ref": "#/definitions/AdminGroup"
                    }
                }
            }
        },
        "Apps": {
            "description": "The OData response wrapper for a list of Power BI installed apps",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of installed apps",
                    "items": {
                        "$ref": "#/definitions/App"
                    }
                }
            }
        },
        "Gateways": {
            "description": "The OData response wrapper for a list of Power BI gateways",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of gateways",
                    "items": {
                        "$ref": "#/definitions/Gateway"
                    }
                }
            }
        },
        "Refreshes": {
            "description": "The OData response wrapper for a Power BI refresh history list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The refresh history list",
                    "items": {
                        "$ref": "#/definitions/Refresh"
                    }
                }
            }
        },
        "DatasourceUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a data source",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a data source",
                    "items": {
                        "$ref": "#/definitions/DatasourceUser"
                    }
                }
            }
        },
        "GroupUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a workspace",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a workspace",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                }
            }
        },
        "AppUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to an app",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to an app",
                    "items": {
                        "$ref": "#/definitions/AppUser"
                    }
                }
            }
        },
        "CapacityUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a capacity",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a capacity",
                    "items": {
                        "$ref": "#/definitions/CapacityUser"
                    }
                }
            }
        },
        "ReportUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a report",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a report",
                    "items": {
                        "$ref": "#/definitions/ReportUser"
                    }
                }
            }
        },
        "DashboardUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dashboard",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dashboard",
                    "items": {
                        "$ref": "#/definitions/DashboardUser"
                    }
                }
            }
        },
        "DatasetUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dataset",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dataset",
                    "items": {
                        "$ref": "#/definitions/DatasetUser"
                    }
                }
            }
        },
        "DataflowUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dataflow",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dataflow",
                    "items": {
                        "$ref": "#/definitions/DataflowUser"
                    }
                }
            }
        },
        "ArtifactAccessResponse": {
            "description": "The OData response wrapper for a list of Power BI items (such as a report or a dashboard) that a user can access",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "artifactAccessEntities": {
                    "type": "array",
                    "description": "The list of Power BI items that a user can access",
                    "items": {
                        "$ref": "#/definitions/ArtifactAccessEntry"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI of the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "The token for the next chunk in the result set"
                }
            }
        },
        "EndorsmentProperties": {
            "description": "A list of properties returned for an artifact by WorkspaceInfo APIs.",
            "properties": {
                "endorsementDetails": {
                    "$ref": "#/definitions/EndorsementDetails",
                    "description": "The endorsement details"
                }
            }
        },
        "SensitivityProperties": {
            "description": "A list of properties returned for an artifact by WorkspaceInfo APIs.",
            "properties": {
                "sensitivityLabel": {
                    "$ref": "#/definitions/SensitivityLabel",
                    "description": "The sensitivity label"
                }
            }
        },
        "SubscriptionsByUserResponse": {
            "description": "OData response wrapper for a Power BI subscriptions for user",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "subscriptionEntities": {
                    "type": "array",
                    "description": "The subscriptions for user",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "ReportBaseProperties": {
            "required": [
                "id"
            ],
            "description": "Power BI report common properties. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the report"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID of the report"
                },
                "appId": {
                    "type": "string",
                    "description": "The app ID, returned only if the report belongs to an app"
                },
                "description": {
                    "type": "string",
                    "description": "The report description"
                },
                "reportType": {
                    "type": "string",
                    "description": "The report type",
                    "enum": [
                        "PaginatedReport"
                    ]
                }
            }
        },
        "ReportNavigationProperties": {
            "description": "A list of navigation related properties of a report.",
            "properties": {
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the report"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the report"
                }
            }
        },
        "ReportAuthoringProperties": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The report owner. Available only for reports created after June 2019."
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The last user that modified the report"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The report creation date and time"
                },
                "modifiedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The report modified date time."
                }
            }
        },
        "ReportAuthoringPropertiesById": {
            "properties": {
                "createdById": {
                    "type": "string",
                    "description": "The ID of the report owner. Available only for reports created after June 2019."
                },
                "modifiedById": {
                    "type": "string",
                    "description": "The ID of the last user that modified the report"
                }
            }
        },
        "ReportUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The artifact user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Report Users as Admin](/rest/api/power-bi/admin/reports-get-report-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/ReportUser"
                    }
                }
            }
        },
        "SubscriptionProperties": {
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "description": "(Empty Value)The artifact subscription Details. It will be removed from the payload response in an upcoming release. To retrieve subscription information for report, please consider using the Get Report Subscriptions as Admin API.",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "RelatedDatasetProperties": {
            "properties": {
                "datasetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID of the related dataset, returned only if the related dataset belongs to a different workspace"
                }
            }
        },
        "Report": {
            "description": "A Power BI report. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportNavigationProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "AdminReport": {
            "description": "A Power BI report returned by Admin APIs. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportNavigationProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "WorkspaceInfoReport": {
            "description": "A Power BI report returned by Workspace Info APIs. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringPropertiesById"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/RelatedDatasetProperties"
                }
            ]
        },
        "Page": {
            "description": "A Power BI report page",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the report page"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the report page"
                },
                "order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order of the report page"
                }
            }
        },
        "DashboardBaseProperties": {
            "required": [
                "id"
            ],
            "description": "Power BI dashboard common properties. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dashboard ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the dashboard"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether the dashboard is read-only"
                },
                "appId": {
                    "type": "string",
                    "description": "The app ID, returned only if the dashboard belongs to an app"
                }
            }
        },
        "DashboardNavigationProperties": {
            "description": "A list of navigation related properties of a Dashboard.",
            "properties": {
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the dashboard"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the dashboard"
                }
            }
        },
        "DashboardUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The dashboard user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Dashboard Users as Admin](/rest/api/power-bi/admin/datasets-get-dashboard-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/DashboardUser"
                    }
                }
            }
        },
        "DataClassificationProperties": {
            "properties": {
                "dataClassification": {
                    "type": "string",
                    "description": "The data classification tag of the artifact"
                }
            }
        },
        "AdminDashboardTilesProperties": {
            "properties": {
                "tiles": {
                    "type": "array",
                    "description": "The tiles that belong to the dashboard",
                    "items": {
                        "$ref": "#/definitions/AdminTile"
                    }
                }
            }
        },
        "WorkspaceInfoDashboardTilesProperties": {
            "properties": {
                "tiles": {
                    "type": "array",
                    "description": "The tiles that belong to the dashboard",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoTile"
                    }
                }
            }
        },
        "Dashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DashboardNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "AdminDashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard returned by Admin APIs. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DashboardNavigationProperties"
                },
                {
                    "$ref": "#/definitions/AdminDashboardTilesProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "WorkspaceInfoDashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard returned by WorkspaceInfo APIs. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DataClassificationProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDashboardTilesProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                }
            ]
        },
        "TileBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tile ID"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the tile "
                },
                "reportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID. Available only for tiles created from a report."
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID. Available only for tiles created from a report or by using a dataset, such as Q&A tiles."
                }
            }
        },
        "TileLayoutProperties": {
            "properties": {
                "rowSpan": {
                    "type": "integer",
                    "description": "The number of tile span rows"
                },
                "colSpan": {
                    "type": "integer",
                    "description": "The number of tile span columns"
                }
            }
        },
        "TileEmbedProperties": {
            "properties": {
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the tile"
                },
                "embedData": {
                    "type": "string",
                    "description": "The embed data for the tile"
                }
            }
        },
        "Tile": {
            "description": "A Power BI tile",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/TileLayoutProperties"
                },
                {
                    "$ref": "#/definitions/TileEmbedProperties"
                }
            ]
        },
        "AdminTile": {
            "description": "A Power BI tile returned by Admin APIs.",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/TileLayoutProperties"
                },
                {
                    "$ref": "#/definitions/TileEmbedProperties"
                }
            ]
        },
        "WorkspaceInfoTile": {
            "description": "A Power BI tile returned by WorkspaceInfo APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/RelatedDatasetProperties"
                }
            ]
        },
        "GroupBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID"
                },
                "name": {
                    "type": "string",
                    "description": "The group name"
                }
            }
        },
        "GroupExtendedProperties": {
            "properties": {
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Is the group read only"
                },
                "isOnDedicatedCapacity": {
                    "type": "boolean",
                    "description": "Is the group on dedicated capacity"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "dataflowStorageId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID"
                }
            }
        },
        "GroupAdminProperties": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The group description"
                },
                "type": {
                    "type": "string",
                    "description": "The type of group"
                },
                "state": {
                    "type": "string",
                    "description": "The group state"
                },
                "users": {
                    "type": "array",
                    "description": "(Empty value) The users that belong to the group and their access rights. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Group Users As Admin](/rest/api/power-bi/admin/groups-get-group-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "The reports that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDashboard"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDataset"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDataflow"
                    }
                },
                "workbooks": {
                    "type": "array",
                    "description": "The workbooks that belong to the group",
                    "items": {
                        "$ref": "#/definitions/Workbook"
                    }
                },
                "pipelineId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The deployment pipeline ID that the workspace is assigned to."
                }
            }
        },
        "RefreshableGroup": {
            "description": "A Power BI group associated to a Refreshable item",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                }
            ]
        },
        "Group": {
            "description": "A Power BI group",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                },
                {
                    "$ref": "#/definitions/GroupExtendedProperties"
                }
            ]
        },
        "AdminGroup": {
            "description": "A Power BI group returned by admin APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                },
                {
                    "$ref": "#/definitions/GroupExtendedProperties"
                },
                {
                    "$ref": "#/definitions/GroupAdminProperties"
                }
            ]
        },
        "App": {
            "required": [
                "id"
            ],
            "description": "A Power BI installed app",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The app ID"
                },
                "name": {
                    "type": "string",
                    "description": "The app name"
                },
                "description": {
                    "type": "string",
                    "description": "The app description"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the app was last updated"
                },
                "publishedBy": {
                    "type": "string",
                    "description": "The app publisher"
                }

            }
        },
        "Subscription": {
            "required": [
                "id"
            ],
            "description": "artifact email subscription",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The subscription ID"
                },
                "title": {
                    "type": "string",
                    "description": "The app name"
                },
                "artifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The subscribed artifact ID"
                },
                "artifactDisplayName": {
                    "type": "string",
                    "description": "The subscribed artifact Name"
                },
                "subArtifactDisplayName": {
                    "type": "string",
                    "description": "Page Name in case of Reports only"
                },
                "artifactType": {
                    "type": "string",
                    "description": "artifactType"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "subscription Enabled or not"
                },
                "frequency": {
                    "type": "string",
                    "description": "Frequency of Email Subscription"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of subscription"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of subscription"
                },
                "linkToContent": {
                    "type": "boolean",
                    "description": "subscription link exists in email subscription"
                },
                "previewImage": {
                    "type": "boolean",
                    "description": "screenshot of the report exists in email subscription"
                },
                "attachmentFormat": {
                    "type": "string",
                    "description": "Format of the report attached in the eamil subscription"
                },
                "users": {
                    "type": "array",
                    "description": "The Email subscribee Details. This value can be null when Get Subscirpions By User As Admin API is called. It will be removed from the payload response in an upcoming release. To retrieve subscription information on an artifact please consider using the Get Dashboard or Report Subscriptions as Admin API. ",
                    "items": {
                        "$ref": "#/definitions/SubscriptionUser"
                    }
                }
            }
        },
        "Subscriptions": {
            "description": "OData response wrapper for a Power BI subscriptions",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "powerBI email subscription",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "GatewayPublicKey": {
            "description": "A Power BI gateway public key",
            "properties": {
                "exponent": {
                    "type": "string",
                    "description": "The public key exponent"
                },
                "modulus": {
                    "type": "string",
                    "description": "The public key modulus"
                }
            }
        },
        "Gateway": {
            "required": [
                "id"
            ],
            "description": "A Power BI gateway",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "name": {
                    "type": "string",
                    "description": "The gateway name"
                },
                "type": {
                    "type": "string",
                    "description": "The gateway type"
                },
                "gatewayAnnotation": {
                    "type": "string",
                    "description": "Gateway metadata in JSON format"
                },
                "publicKey": {
                    "$ref": "#/definitions/GatewayPublicKey",
                    "description": "The gateway public key"
                },
                "gatewayStatus": {
                    "type": "string",
                    "description": "The gateway connectivity status"
                }
            }
        },
        "PublishDatasourceToGatewayRequest": {
            "required": [
                "dataSourceType",
                "connectionDetails",
                "credentialDetails",
                "dataSourceName"
            ],
            "description": "A publish data source to gateway request",
            "properties": {
                "dataSourceType": {
                    "type": "string",
                    "description": "The data source type"
                },
                "connectionDetails": {
                    "type": "string",
                    "description": "The connection details"
                },
                "credentialDetails": {
                    "$ref": "#/definitions/CredentialDetails"
                },
                "dataSourceName": {
                    "type": "string",
                    "description": "The data source name"
                }
            }
        },
        "CredentialDetails": {
            "required": [
                "credentials",
                "credentialType",
                "encryptedConnection",
                "encryptionAlgorithm",
                "privacyLevel"
            ],
            "description": "The credential details",
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "The credentials, which depend on the 'credentialType' value. For more information, see [Update Datasource](/rest/api/power-bi/gateways/update-datasource#examples) examples."
                },
                "credentialType": {
                    "type": "string",
                    "description": "The credential type",
                    "enum": [
                        "Basic",
                        "Windows",
                        "Anonymous",
                        "OAuth2",
                        "Key"
                    ],
                    "x-ms-enum": {
                        "name": "credentialType",
                        "modelAsExtensible": true
                    }
                },
                "encryptedConnection": {
                    "type": "string",
                    "description": "Whether to encrypt the data source connection. The API call will fail if you select encryption and Power BI is unable to establish an encrypted connection with the data source.",
                    "enum": [
                        "Encrypted",
                        "NotEncrypted"
                    ],
                    "x-ms-enum": {
                        "name": "encryptedConnection",
                        "modelAsExtensible": true
                    }
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm. For a cloud data source, specify *None*. For an on-premises data source, specify *RSA-OAEP* and use the gateway public key.",
                    "enum": [
                        "None",
                        "RSA-OAEP"
                    ],
                    "x-ms-enum": {
                        "name": "encryptionAlgorithm",
                        "modelAsExtensible": true
                    }
                },
                "privacyLevel": {
                    "type": "string",
                    "description": "The privacy level, which is relevant when combining data from multiple sources.",
                    "enum": [
                        "None",
                        "Public",
                        "Organizational",
                        "Private"
                    ],
                    "x-ms-enum": {
                        "name": "privacyLevel",
                        "modelAsExtensible": true
                    }
                },
                "useCallerAADIdentity": {
                    "type": "boolean",
                    "description": "Use to indicate that the Azure AD identity (OAuth2 credentials) of the API caller (which must be the data source owner) will be used to configure data source credentials (the owner OAuth access token). Typically, you’d either use this flag or `useEndUserOAuth2Credentials`."
                },
                "useEndUserOAuth2Credentials": {
                    "type": "boolean",
                    "description": "Use with data sources that support [single sign-on (SSO)](/power-bi/connect-data/power-bi-data-sources#single-sign-on-sso-for-directquery-sources) to indicate that the end-user Azure AD identity (OAuth2 credentials) is used for connecting to the data source in DirectQuery mode. Typically, you’d either use this flag or `useCallerAADIdentity`."
                }
            }
        },
        "GatewayDatasourceCredentialDetails": {
            "description": "The data source credential details",
            "properties": {
                "useEndUserOAuth2Credentials": {
                    "type": "boolean",
                    "description": "Use with data sources that support [single sign-on (SSO)](/power-bi/connect-data/power-bi-data-sources#single-sign-on-sso-for-directquery-sources) to indicate that the end-user Azure AD identity (OAuth2 credentials) is used for connecting to the data source in DirectQuery mode."
                }
            }
        },
        "UpdateDatasourceRequest": {
            "required": [
                "credentialDetails"
            ],
            "description": "An update data source to gateway request",
            "properties": {
                "credentialDetails": {
                    "$ref": "#/definitions/CredentialDetails"
                }
            }
        },
        "BindToGatewayRequest": {
            "required": [
                "gatewayObjectId"
            ],
            "description": "The bind dataset to gateway request",
            "properties": {
                "gatewayObjectId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceObjectIds": {
                    "type": "array",
                    "description": "The unique identifiers for the datasources in the gateway",
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A data source ID"
                    }
                }
            }
        },
        "ConnectionDetails": {
            "required": [
                "connectionString"
            ],
            "description": "A connection string wrapper",
            "properties": {
                "connectionString": {
                    "type": "string",
                    "description": "A dataset connection string"
                }
            }
        },
        "Refresh": {
            "description": "A Power BI refresh history entry",
            "properties": {
                "refreshType": {
                    "type": "string",
                    "description": "The type of refresh request",
                    "enum": [
                        "Scheduled",
                        "OnDemand",
                        "ViaApi"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Scheduled",
                                "description": "The refresh was triggered by a dataset refresh schedule setting"
                            },
                            {
                                "value": "OnDemand",
                                "description": "The refresh was triggered interactively through the Power BI portal"
                            },
                            {
                                "value": "ViaApi",
                                "description": "The refresh was triggered by an API call"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the refresh"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of the refresh (may be empty if a refresh is in progress)"
                },
                "serviceExceptionJson": {
                    "type": "string",
                    "description": "Failure error code in JSON format (empty if no error)"
                },
                "status": {
                    "type": "string",
                    "description": "- `Unknown` if the completion state is unknown or a refresh is in progress.\n- `Completed` for a successfully completed refresh.\n- `Failed` for an unsuccessful refresh (`serviceExceptionJson` will contain the error code).\n- `Disabled` if the refresh is disabled by a selective refresh."
                },
                "requestId": {
                    "type": "string",
                    "description": "The identifier of the refresh request. Provide this identifier in all service requests."
                }
            }
        },
        "RefreshRequest": {
            "description": "Power BI refresh request",
            "properties": {
                "notifyOption": {
                    "type": "string",
                    "description": "Mail notification options",
                    "enum": [
                        "NoNotification",
                        "MailOnFailure",
                        "MailOnCompletion"
                    ],
                    "x-ms-enum": {
                        "name": "NotifyOption",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NoNotification",
                                "description": "No notification will be sent"
                            },
                            {
                                "value": "MailOnFailure",
                                "description": "A mail notification will be sent on refresh failure"
                            },
                            {
                                "value": "MailOnCompletion",
                                "description": "A mail notification indicating success or failure will be sent on refresh completion"
                            }
                        ]
                    }
                }
            },
            "required": [
                "notifyOption"
            ]
        },
        "RefreshScheduleRequest": {
            "required": [
                "value"
            ],
            "description": "Power BI refresh schedule request",
            "properties": {
                "value": {
                    "description": "An object that contains the details of a refresh schedule",
                    "$ref": "#/definitions/RefreshSchedule"
                }
            }
        },
        "RefreshSchedule": {
            "description": "A Power BI refresh schedule for [imported model](/power-bi/connect-data/refresh-data#datasets-in-import-mode)",
            "properties": {
                "days": {
                    "type": "array",
                    "description": "The days on which to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "Days of week",
                        "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                        ],
                        "x-ms-enum": {
                            "name": "days",
                            "modelAsExtensible": true
                        }
                    }
                },
                "times": {
                    "type": "array",
                    "description": "The times of day to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "A time of day in the format of `hh:mm`, where `hh` is the hour (from *00* to *23*) and `mm` is the minute (can only be *00* or *30*)."
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the refresh is enabled"
                },
                "localTimeZoneId": {
                    "type": "string",
                    "description": "The ID of the time zone to use. For more information, see [Time zone info](/dotnet/api/system.timezoneinfo.id)."
                },
                "NotifyOption": {
                    "type": "string",
                    "description": "The notification option on termination of a scheduled refresh",
                    "enum": [
                        "NoNotification",
                        "MailOnFailure"
                    ],
                    "x-ms-enum": {
                        "name": "ScheduleNotifyOption",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NoNotification",
                                "description": "No notification will be sent"
                            },
                            {
                                "value": "MailOnFailure",
                                "description": "A mail notification will be sent on refresh failure"
                            }
                        ]
                    }
                }
            }
        },
        "DirectQueryRefreshScheduleRequest": {
            "required": [
                "value"
            ],
            "description": "Power BI refresh schedule request for DirectQuery or LiveConnection ",
            "properties": {
                "value": {
                    "description": "An object containing the refresh schedule details for DirectQuery or LiveConnection",
                    "$ref": "#/definitions/DirectQueryRefreshSchedule"
                }
            }
        },
        "DirectQueryRefreshSchedule": {
            "description": "A Power BI refresh schedule for DirectQuery or LiveConnection, specifying either the frequency or a combination of days and times.",
            "properties": {
                "frequency": {
                    "type": "integer",
                    "description": "The interval in minutes between successive refreshes. Supported values are *15*, *30*, *60*, *120*, and *180*."
                },
                "days": {
                    "type": "array",
                    "description": "The days on which to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "Days of week",
                        "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                        ],
                        "x-ms-enum": {
                            "name": "days",
                            "modelAsExtensible": true
                        }
                    }
                },
                "times": {
                    "type": "array",
                    "description": "The times of day to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "A time of day in the format of `hh:mm`, where `hh` is the hour (from *00* to *23*) and `mm` is the minute (can only be *00* or *30*)."
                    }
                },
                "localTimeZoneId": {
                    "type": "string",
                    "description": "The ID of the time zone to use. For more information, see [Time zone info](/dotnet/api/system.timezoneinfo.id)"
                }
            }
        },
        "MashupParameter": {
            "description": "A Power BI dataset parameter",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type"
                },
                "currentValue": {
                    "type": "string",
                    "description": "The current value of the parameter"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Whether the dataset parameter is required"
                },
                "suggestedValues": {
                    "type": "array",
                    "description": "A list of suggested parameter values",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "type",
                "isRequired"
            ]
        },
        "UpdateMashupParameterDetails": {
            "description": "The update details for a Power BI dataset parameter",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "newValue": {
                    "type": "string",
                    "description": "The new value for the parameter"
                }
            },
            "required": [
                "name"
            ]
        },
        "UpdateMashupParametersRequest": {
            "description": "An update request for a Power BI dataset parameter",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "A list of dataset parameters to update",
                    "items": {
                        "$ref": "#/definitions/UpdateMashupParameterDetails"
                    }
                }
            },
            "required": [
                "updateDetails"
            ]
        },
        "MashupParameters": {
            "description": "The OData response wrapper for a list of Power BI dataset parameters",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "A list of dataset parameters",
                    "items": {
                        "$ref": "#/definitions/MashupParameter"
                    }
                }
            }
        },
        "DatasourceUser": {
            "required": [
                "datasourceAccessRight"
            ],
            "description": "A Power BI user with access to the data source",
            "properties": {
                "datasourceAccessRight": {
                    "type": "string",
                    "description": "The access right (permission level) that a user has on the data source",
                    "enum": [
                        "None",
                        "Read",
                        "ReadOverrideEffectiveIdentity"
                    ],
                    "x-ms-enum": {
                        "name": "DatasourceUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to access the data source. Only applies when updating user permissions."
                            },
                            {
                                "value": "Read",
                                "description": "Datasets owned by the user have read access to the data source"
                            },
                            {
                                "value": "ReadOverrideEffectiveIdentity",
                                "description": "The user can override the effective identity for Power BI Embedded"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "The [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal"
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "GroupUser": {
            "required": [
                "groupUserAccessRight"
            ],
            "description": "A Power BI user with access to the workspace",
            "properties": {
                "groupUserAccessRight": {
                    "type": "string",
                    "description": "The access right (permission level) that a user has on the workspace",
                    "enum": [
                        "None",
                        "Member",
                        "Admin",
                        "Contributor",
                        "Viewer"
                    ],
                    "x-ms-enum": {
                        "name": "GroupUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No access to workspace content"
                            },
                            {
                                "value": "Member",
                                "description": "Read, reshare and explore (ReadReshareExplore) access rights to workspace content"
                            },
                            {
                                "value": "Admin",
                                "description": "Administrator rights to workspace content"
                            },
                            {
                                "value": "Contributor",
                                "description": "Read and explore (ReadExplore) access to workspace content"
                            },
                            {
                                "value": "Viewer",
                                "description": "Read-only (Read) access to workspace content"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "The [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "The identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "AppUser": {
            "required": [
                "appUserAccessRight"
            ],
            "description": "A Power BI user access right entry for app",
            "properties": {
                "appUserAccessRight": {
                    "type": "string",
                    "description": "Access rights user has for the app",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadCopy",
                        "ReadExploreCopy",
                        "ReadReshareExplore",
                        "ReadReshareExploreCopy",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore",
                        "ReadWriteExploreCopy",
                        "ReadReshareCopy",
                        "All"

                    ],
                    "x-ms-enum": {
                        "name": "AppUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in app"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in app"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in app"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in app"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants Read, Write and Reshare access to content in app"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to content in app"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in app"
                            },
                            {
                                "value": "ReadExploreCopy",
                                "description": "Grants Read, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareExploreCopy",
                                "description": "Grants Read, Reshare, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants Read, Write and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants Read, Write, Reshare and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteExploreCopy",
                                "description": "Grants Read, Write, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareCopy",
                                "description": "Grants Read, Reshare, and Copy access to content in app"
                            },
                            {
                                "value": "All",
                                "description": "Grants Read, Write, Explore, Reshare and Copy access to content in app"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "CapacityUser": {
            "required": [
                "capacityUserAccessRight"
            ],
            "description": "A Power BI user access right entry for capacity",
            "properties": {
                "capacityUserAccessRight": {
                    "type": "string",
                    "description": "Access right user has on the capacity",
                    "enum": [
                        "None",
                        "Assign",
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "capacityUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "User doesn't have access to the capacity"
                            },
                            {
                                "value": "Assign",
                                "description": "User has contributor rights and can assign workspaces to the capacity"
                            },
                            {
                                "value": "Admin",
                                "description": "User has administrator rights on the capacity"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "ReportUser": {
            "required": [
                "reportUserAccessRight"
            ],
            "description": "A Power BI user access right entry for report",
            "properties": {
                "reportUserAccessRight": {
                    "type": "string",
                    "description": "Access rights user has for the report (Permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadCopy",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "ReportUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in report"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in report"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in report"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in report"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in report"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in report"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DashboardUser": {
            "required": [
                "dashboardUserAccessRight"
            ],
            "description": "A Power BI user access right entry for dashboard",
            "properties": {
                "dashboardUserAccessRight": {
                    "type": "string",
                    "description": "Access rights user has for the dashboard (Permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadCopy",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "DashboardUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in dashboard"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dashboard"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in dashboard"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dashboard"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in dashboard"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in report"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DatasetUser": {
            "required": [
                "datasetUserAccessRight"
            ],
            "description": "A Power BI user access right entry for dataset",
            "properties": {
                "datasetUserAccessRight": {
                    "type": "string",
                    "description": "Access rights user has for the dataset (Permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadReshareExplore",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "Removes permission to content in dataset"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dataset"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in dataset"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dataset"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants Read, Write and Reshare access to content in dataset"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to content in dataset"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare and Explore access to content in dataset"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants Read, Write and Explore access to content in dataset"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants Read, Write, Reshare and Explore access to content in dataset"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DatasetUserAccess": {
            "required": [
                "identifier",
                "principalType",
                "accessRight"
            ],
            "description": "A Power BI user access right entry for a dataset",
            "properties": {
                "accessRight": {
                    "type": "string",
                    "description": "(Required) The access right a user has for the dataset",
                    "enum": [
                        "Read",
                        "ReadReshare",
                        "ReadExplore",
                        "ReadReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetUserAccessRightEntry",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dataset"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dataset"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to content in dataset"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare and Explore access to content in dataset"
                            }
                        ]
                    }
                },
                "identifier": {
                    "type": "string",
                    "description": "For principal type `User`, enter *UPN*. Otherwise provide the [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DataflowUser": {
            "required": [
                "dataflowUserAccessRight"
            ],
            "description": "A Power BI user access right entry for dataflow",
            "properties": {
                "DataflowUserAccessRight": {
                    "type": "string",
                    "description": "Access rights user has for the dataflow (Permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "DataflowUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "Removes permission to content in dataflow"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dataflow"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in dataflow"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dataflow"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in dataflow"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "SubscriptionUser": {
            "required": [
                "emailAddress",
                "principalType",
                "identifier"
            ],
            "description": "A Power BI email subscription user",
            "properties": {
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "ArtifactAccessEntry": {
            "required": [
                "artifactId",
                "displayName",
                "artifactType",
                "accessRight"
            ],
            "description": "A user access entry for a Power BI item",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "description": "The Power BI item ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the Power BI item"
                },
                "artifactType": {
                    "type": "string",
                    "description": "The type of Power BI item"
                },
                "accessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the Power BI item"
                }
            }
        },
        "PrincipalType": {
            "type": "string",
            "description": "The principal type",
            "enum": [
                "None",
                "User",
                "Group",
                "App"
            ],
            "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsExtensible": true,
                "values": [
                    {
                        "value": "None",
                        "description": "No principal type. Use for whole organization level access."
                    },
                    {
                        "value": "User",
                        "description": "User principal type"
                    },
                    {
                        "value": "Group",
                        "description": "Group principal type"
                    },
                    {
                        "value": "App",
                        "description": "Service principal type"
                    }
                ]
            }
        },
        "CloneReportRequest": {
            "required": [
                "name"
            ],
            "description": "Power BI clone report request",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The new report name"
                },
                "targetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "(Optional) Parameter for specifying the target workspace ID. An empty GUID (`00000000-0000-0000-0000-000000000000`) indicates **My workspace**. If this parameter isn't provided, the new report will be cloned within the same workspace as the source report."
                },
                "targetModelId": {
                    "type": "string",
                    "description": "(Optional) Parameter for specifying the target associated dataset ID. If not provided, the new report will be associated with the same dataset as the source report."
                }
            }
        },
        "RebindReportRequest": {
            "required": [
                "datasetId"
            ],
            "description": "Power BI rebind report request",
            "properties": {
                "datasetId": {
                    "type": "string",
                    "description": "The new dataset for the rebound report. If the dataset resides in a different workspace than the report, a shared dataset will be created in the report's workspace."
                }
            }
        },
        "ExportReportRequest": {
            "required": [
                "format"
            ],
            "description": "The export to file request",
            "properties": {
                "format": {
                    "type": "string",
                    "description": "The requested format for the exported file",
                    "enum": [
                        "PPTX",
                        "PDF",
                        "PNG",
                        "IMAGE",
                        "XLSX",
                        "DOCX",
                        "CSV",
                        "XML",
                        "MHTML",
                        "ACCESSIBLEPDF"
                    ],
                    "x-ms-enum": {
                        "name": "FileFormat",
                        "values": [
                            {
                                "value": "PPTX",
                                "description": "Microsoft PowerPoint"
                            },
                            {
                                "value": "PDF",
                                "description": "PDF"
                            },
                            {
                                "value": "PNG",
                                "description": "PNG (only supported for Power BI reports)"
                            },
                            {
                                "value": "IMAGE",
                                "description": "BMP, EMF, GIF, JPEG, PNG, or TIFF [image](/sql/reporting-services/image-device-information-settings) formats (only supported for paginated reports)"
                            },
                            {
                                "value": "XLSX",
                                "description": "Microsoft Excel (only supported for paginated reports)"
                            },
                            {
                                "value": "DOCX",
                                "description": "Microsoft Word (only supported for paginated reports)"
                            },
                            {
                                "value": "CSV",
                                "description": "CSV (only supported for paginated reports)"
                            },
                            {
                                "value": "XML",
                                "description": "XML (only supported for paginated reports)"
                            },
                            {
                                "value": "MHTML",
                                "description": "MHTML (only supported for paginated reports)"
                            },
                            {
                                "value": "ACCESSIBLEPDF",
                                "description": "Accessible PDF (only supported for paginated reports)"
                            }
                        ]
                    }
                },
                "powerBIReportConfiguration": {
                    "$ref": "#/definitions/PowerBIReportExportConfiguration",
                    "description": "The configuration used to export a Power BI report"
                },
                "paginatedReportConfiguration": {
                    "$ref": "#/definitions/PaginatedReportExportConfiguration",
                    "description": "The configuration used to export a paginated report"
                }
            }
        },
        "PowerBIReportExportConfiguration": {
            "description": "The export to file configuration for a Power BI report",
            "properties": {
                "settings": {
                    "$ref": "#/definitions/ExportReportSettings",
                    "description": "The settings to be applied for the export to file job"
                },
                "defaultBookmark": {
                    "$ref": "#/definitions/PageBookmark",
                    "description": "A default bookmark to apply on all pages that don't have a specific bookmark"
                },
                "reportLevelFilters": {
                    "type": "array",
                    "description": "A list of report level filters to apply. Currently, only one filter is supported.",
                    "items": {
                        "$ref": "#/definitions/ExportFilter"
                    }
                },
                "pages": {
                    "type": "array",
                    "description": "A list of pages to export and their properties. The same page may appear more than once with different visuals.",
                    "items": {
                        "$ref": "#/definitions/ExportReportPage"
                    }
                },
                "identities": {
                    "type": "array",
                    "description": "A list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                }
            }
        },
        "PaginatedReportExportConfiguration": {
            "description": "The export to file configuration for a paginated report ",
            "properties": {
                "identities": {
                    "type": "array",
                    "description": "The single identity to use when exporting a report. Required when a report uses a Power BI dataset or an Azure Analysis Services data source.",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "formatSettings": {
                    "type": "object",
                    "description": "A dictionary of format settings. The keys are the device information property names for the requested file format.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parameterValues": {
                    "type": "array",
                    "description": "A list of report parameters",
                    "items": {
                        "$ref": "#/definitions/ParameterValue"
                    }
                }
            }
        },
        "ExportReportSettings": {
            "description": "Export to file request settings",
            "properties": {
                "locale": {
                    "type": "string",
                    "description": "The locale to apply"
                },
                "includeHiddenPages": {
                    "type": "boolean",
                    "description": "Whether to include hidden pages when exporting an entire report. If not provided, the default behavior is to exclude hidden pages. This property will be ignored when specific pages are exported."
                }
            }
        },
        "ExportReportPage": {
            "description": "A single page configuration for the export request",
            "required": [
                "pageName"
            ],
            "properties": {
                "pageName": {
                    "type": "string",
                    "description": "The page name"
                },
                "visualName": {
                    "type": "string",
                    "description": "The name of the visual to export. Specify a name, in case only a single visual from this page is exported."
                },
                "bookmark": {
                    "$ref": "#/definitions/PageBookmark",
                    "description": "The bookmark to apply on the page"
                }
            }
        },
        "PageBookmark": {
            "description": "The bookmark to apply on a single page. Provide name or state, but not both.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The bookmark name"
                },
                "state": {
                    "type": "string",
                    "description": "The bookmark state"
                }
            }
        },
        "ExportFilter": {
            "description": "A filter to be applied during the export operation",
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "The filter to apply. For information about the filter syntax, see [Filter a report](/power-bi/collaborate-share/service-url-filters)."
                }
            }
        },
        "ParameterValue": {
            "description": "Data contract for paginated report parameters",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "value": {
                    "type": "string",
                    "description": "The parameter value"
                }
            }
        },
        "GroupCreationRequest": {
            "required": [
                "name"
            ],
            "description": "A Power BI request to create a new group",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the newly created group"
                }
            }
        },
        "GroupRestoreRequest": {
            "description": "A Power BI request to restore a deleted group",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the group to be restored"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the owner of the group to be restored"
                }
            },
            "required": [
                "emailAddress"
            ]
        },
        "IdentityBlob": {
            "required": [
                "value"
            ],
            "description": "A blob for specifying an identity. Only supported for datasets with a DirectQuery connection to Azure SQL",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "An OAuth 2.0 access token for Azure SQL"
                }
            }
        },
        "EffectiveIdentity": {
            "required": [
                "username"
            ],
            "description": "Defines the user identity and roles. For more information, see [Row-level security with Power BI Embedded](/power-bi/developer/embedded/embedded-row-level-security).",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The effective username within a token that applies row-level security rules. For an on-premises model, the username can contain alphanumeric or any of the following characters `.`, `-`, `_`, `!`, `#`, `^`, `~`, `\\\\`, `@`. For cloud models, the username can contain any ASCII character. For either model, the username length must not exceed 256 characters, and the username shouldn't contain spaces."
                },
                "datasets": {
                    "type": "array",
                    "description": "An array of datasets for which this identity applies",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "description": "An array of row-level security (RLS) roles within a token that applies RLS rules. An identity can contain up to 50 roles. A role can contain any character except `,`, and its length must not exceed 50 characters.",
                    "items": {
                        "type": "string"
                    }
                },
                "customData": {
                    "type": "string",
                    "description": "[Custom data](/power-bi/developer/embedded/embedded-row-level-security#using-the-customdata-feature) that's used to apply row-level security rules. Only supported for live connections to Azure Analysis Services."
                },
                "identityBlob": {
                    "$ref": "#/definitions/IdentityBlob",
                    "description": "A blob that specifies an [identity](/power-bi/developer/embedded/embedded-row-level-security#token-based-identity-sdk-additions). Only supported for datasets with a DirectQuery connection to Azure SQL."
                },
                "reports": {
                    "type": "array",
                    "description": "An array of reports for which this identity applies. Only supported for paginated reports.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "GenerateTokenRequestV2Dataset": {
            "required": [
                "id"
            ],
            "description": "A dataset object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The dataset ID"
                },
                "xmlaPermissions": {
                    "type": "string",
                    "description": "XMLA Permissions",
                    "enum": [
                        "Off",
                        "ReadOnly"
                    ],
                    "x-ms-enum": {
                        "name": "XmlaPermissions",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Off",
                                "description": "Indicates that the generated embed token doesn't grant access permissions to the dataset's XMLA endpoint."
                            },
                            {
                                "value": "ReadOnly",
                                "description": "Indicates that the generated embed token grants Read access permissions to the dataset's XMLA endpoint."
                            }
                        ]
                    }
                }
            }
        },
        "GenerateTokenRequestV2TargetWorkspace": {
            "required": [
                "id"
            ],
            "description": "A workspace object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID"
                }
            }
        },
        "GenerateTokenRequestV2Report": {
            "required": [
                "id"
            ],
            "description": "A report object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "allowEdit": {
                    "type": "boolean",
                    "description": "Whether the generated embed token supports report editing"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID"
                }
            }
        },
        "GenerateTokenRequest": {
            "description": "Power BI Generate Token Request",
            "properties": {
                "accessLevel": {
                    "type": "string",
                    "description": "The required access level for embed token generation",
                    "enum": [
                        "View",
                        "Edit",
                        "Create"
                    ],
                    "x-ms-enum": {
                        "name": "TokenAccessLevel",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "View",
                                "description": "Indicates that the generated embed token grants view-only permission"
                            },
                            {
                                "value": "Edit",
                                "description": "Indicates that the generated embed token grants view and edit permissions. Only applies when you generate an embed token for report embedding."
                            },
                            {
                                "value": "Create",
                                "description": "Indicates that the generated embed token grants create permission. Only applies when you generate an embed token for report creation."
                            }
                        ]
                    }
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID used for report creation. Only applies when you generate an embed token for report creation."
                },
                "allowSaveAs": {
                    "type": "boolean",
                    "description": "Whether an embedded report can be saved as a new report. The default value is `false`. Only applies when you generate an embed token for report embedding."
                },
                "identities": {
                    "type": "array",
                    "description": "A list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "lifetimeInMinutes": {
                    "type": "integer",
                    "description": "The maximum lifetime of the token in minutes, starting from the time it was generated. Can be used to shorten the expiration time of a token, but not to extend it. The value must be a positive integer. Zero (0) is equivalent to null and will be ignored, resulting in the default expiration time."
                }
            }
        },
        "GenerateTokenRequestV2": {
            "description": "Power BI Generate Token Request V2",
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "A list of datasets",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2Dataset"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list of reports",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2Report"
                    }
                },
                "targetWorkspaces": {
                    "type": "array",
                    "description": "The list of workspaces that the embed token will allow saving to",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2TargetWorkspace"
                    }
                },
                "identities": {
                    "type": "array",
                    "description": "The list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "lifetimeInMinutes": {
                    "type": "integer",
                    "description": "The maximum lifetime of the token in minutes, starting from the time it was generated. Can be used to shorten the token's expiration time, but not to extend it. The value must be a positive integer. Zero (`0`) is equivalent to `null`, and will set the default expiration time."
                }
            }
        },
        "EmbedToken": {
            "required": [
                "token",
                "tokenId",
                "expiration"
            ],
            "description": "A Power BI embed token",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The embed token"
                },
                "tokenId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique token ID. Through audit logs, the token ID can be used to correlate operations that use the token with the generate operation."
                },
                "expiration": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time (UTC) of token expiration"
                }
            }
        },
        "CloneTileRequest": {
            "required": [
                "targetDashboardId"
            ],
            "description": " A Power BI request to clone a tile",
            "properties": {
                "targetDashboardId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The target dashboard ID"
                },
                "targetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "(Optional) A parameter for specifying a target workspace ID. An empty GUID (`00000000-0000-0000-0000-000000000000`) indicates 'My Workspace'. If this parameter isn't provided, the tile will be cloned within the same workspace as the source tile."
                },
                "targetReportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "(Optional) A parameter for specifying a target report ID. When cloning a tile linked to a report, pass the target report ID to rebind the new tile to a different report."
                },
                "targetModelId": {
                    "type": "string",
                    "description": "(Optional) A parameter for specifying a target model ID. When cloning a tile linked to a dataset, pass the target model ID to rebind the new tile to a different dataset."
                },
                "positionConflictAction": {
                    "type": "string",
                    "description": "(Optional) A parameter for specifying an action in case of a position conflict. If there's a conflict and this parameter isn't provided, then the default value `Tail` will be applied. If there's no conflict, then the cloned tile will have the same position as in the source.",
                    "enum": [
                        "Tail",
                        "Abort"
                    ],
                    "x-ms-enum": {
                        "name": "positionConflictAction",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Tail",
                                "description": "In the event of position conflict, the tile will be added at the end of the specified dashboard."
                            },
                            {
                                "value": "Abort",
                                "description": "In the event of position conflict, the request will be aborted."
                            }
                        ]
                    }
                }
            }
        },
        "AddDashboardRequest": {
            "required": [
                "name"
            ],
            "description": "A Power BI request to add a dashboard",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the new dashboard"
                }
            }
        },
        "SourceReport": {
            "required": [
                "sourceReportId"
            ],
            "description": "Source from existing report",
            "properties": {
                "sourceReportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The source report ID"
                },
                "sourceWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The source workspace ID"
                }
            }
        },
        "UpdateReportContentRequest": {
            "required": [
                "sourceType",
                "sourceReport"
            ],
            "description": "Power BI update report content request",
            "properties": {
                "sourceType": {
                    "type": "string",
                    "description": "The source type for the content update.",
                    "enum": [
                        "ExistingReport"
                    ],
                    "x-ms-enum": {
                        "name": "sourceType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "ExistingReport",
                                "description": "Use an existing report as a source for updating the content of a target report."
                            }
                        ]
                    }
                },
                "sourceReport": {
                    "$ref": "#/definitions/SourceReport"
                }
            }
        },
        "Capacity": {
            "required": [
                "id",
                "state",
                "capacityUserAccessRight"
            ],
            "description": "A Power BI capacity",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The capacity display name"
                },
                "admins": {
                    "type": "array",
                    "description": "An array of capacity admins.",
                    "items": {
                        "type": "string"
                    }
                },
                "sku": {
                    "type": "string",
                    "description": "The capacity SKU."
                },
                "state": {
                    "type": "string",
                    "description": "The capacity state",
                    "enum": [
                        "NotActivated",
                        "Active",
                        "Provisioning",
                        "ProvisionFailed",
                        "PreSuspended",
                        "Suspended",
                        "Deleting",
                        "Deleted",
                        "Invalid",
                        "UpdatingSku"
                    ],
                    "x-ms-enum": {
                        "name": "CapacityState",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotActivated",
                                "description": "Not Supported"
                            },
                            {
                                "value": "Active",
                                "description": "Capacity ready for use"
                            },
                            {
                                "value": "Provisioning",
                                "description": "Capacity in activation process"
                            },
                            {
                                "value": "ProvisionFailed",
                                "description": "Capacity failed to provisioned"
                            },
                            {
                                "value": "Suspended",
                                "description": "Capacity suspended for use"
                            },
                            {
                                "value": "PreSuspended",
                                "description": "Not Supported"
                            },
                            {
                                "value": "Deleting",
                                "description": "Capacity in process of being deleted"
                            },
                            {
                                "value": "Deleted",
                                "description": "Capacity has been deleted and is not available"
                            },
                            {
                                "value": "Invalid",
                                "description": "Capacity can not be used"
                            },
                            {
                                "value": "UpdatingSku",
                                "description": "Capacity Sku change is in progress"
                            }
                        ]
                    }
                },
                "capacityUserAccessRight": {
                    "type": "string",
                    "description": "Access right user has on the capacity",
                    "enum": [
                        "None",
                        "Assign",
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "capacityUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "User doesn't have access to the capacity"
                            },
                            {
                                "value": "Assign",
                                "description": "User has contributor rights and can assign workspaces to the capacity"
                            },
                            {
                                "value": "Admin",
                                "description": "User has administrator rights on the capacity"
                            }
                        ]
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The Azure region where the capacity is provisioned"
                },
                "tenantKeyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of an encryption key (only applicable to the admin route)"
                },
                "tenantKey": {
                    "$ref": "#/definitions/TenantKey",
                    "description": "Encryption key information (Only applicable for admin route)"
                }
            }
        },
        "Capacities": {
            "description": "OData response wrapper for a Power BI capacity list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The Capacity List",
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    }
                }
            }
        },
        "AvailableFeatures": {
            "description": "OData response wrapper for a Power BI available features list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "description": "The available features list",
                    "items": {
                        "$ref": "#/definitions/AvailableFeature"
                    }
                }
            }
        },
        "AvailableFeature": {
            "required": [
                "name",
                "state",
                "extendedState"
            ],
            "description": "Power BI available feature",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The feature name"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ],
                    "x-ms-enum": {
                        "name": "FeatureState",
                        "modelAsExtensible": true
                    },
                    "description": "The feature state"
                },
                "extendedState": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "DisabledByAdmin",
                        "UserNotLicensed"
                    ],
                    "x-ms-enum": {
                        "name": "FeatureExtendedState",
                        "modelAsExtensible": true
                    },
                    "description": "The feature extended state"
                },
                "additionalInfo": {
                    "description": "Additional feature information",
                    "$ref": "#/definitions/AdditionalFeatureInfo"
                }
            }
        },
        "AdditionalFeatureInfo": {
            "description": "Additional feature information",
            "properties": {
                "Usage": {
                    "type": "integer",
                    "description": "Workspaces that aren’t assigned to a capacity get a limited amount of [embed tokens](/power-bi/developer/embedded/embed-tokens#embed-token), to allow experimenting with the APIs. The `Usage` value represents the percentage of embed tokens that have been consumed. The `Usage` value only applies to the **embed trial** feature. For more information, see [Development testing](/power-bi/developer/embedded/move-to-production#development-testing)."
                }
            }
        },
        "AssignToCapacityRequest": {
            "required": [
                "capacityId"
            ],
            "description": "Power BI assign to capacity request",
            "properties": {
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID. To unassign from capacity, use an Empty Guid (`00000000-0000-0000-0000-000000000000`)."
                }
            }
        },
        "WorkspaceCapacityAssignmentStatus": {
            "required": [
                "status"
            ],
            "description": "Power BI workspace assignment status to capacity response",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Workspace assignment status",
                    "enum": [
                        "Pending",
                        "InProgress",
                        "CompletedSuccessfully",
                        "AssignmentFailed"
                    ],
                    "x-ms-enum": {
                        "name": "AssignmentStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Pending",
                                "description": "Assignment request was initiated, but was not started yet"
                            },
                            {
                                "value": "InProgress",
                                "description": "Assignment operation is in progress"
                            },
                            {
                                "value": "CompletedSuccessfully",
                                "description": "Assignment operation was completed successfully"
                            },
                            {
                                "value": "AssignmentFailed",
                                "description": "Assignment failed"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of workspace assignment operation"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of workspace assignment operation"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "activityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The activity ID of the assignment operation, which can be provided in case of assignment failures"
                }
            }
        },
        "TemporaryUploadLocation": {
            "required": [
                "Url",
                "ExpirationTime"
            ],
            "description": "Power BI update report content request",
            "properties": {
                "Url": {
                    "type": "string",
                    "description": "The shared access signature (SAS) url for the temporary blob storage"
                },
                "ExpirationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration time of the shared access signature (SAS) url"
                }
            }
        },
        "Workloads": {
            "description": "OData response wrapper for capacity workload settings list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The capacity workload settings list",
                    "items": {
                        "$ref": "#/definitions/Workload"
                    }
                }
            }
        },
        "WorkloadState": {
            "type": "string",
            "enum": [
                "Disabled",
                "Enabled",
                "Unsupported"
            ],
            "x-ms-enum": {
                "name": "WorkloadState",
                "modelAsExtensible": true,
                "values": [
                    {
                        "value": "Disabled",
                        "description": "The workload is disabled"
                    },
                    {
                        "value": "Enabled",
                        "description": "The workload is enabled"
                    },
                    {
                        "value": "Unsupported",
                        "description": "The workload is unsupported by the current capacity SKU and cannot be enabled. This value cannot be set by the user in the [Patch Workload](/rest/api/power-bi/capacities/patchworkload)"
                    }
                ]
            },
            "description": "The capacity workload state"
        },
        "Workload": {
            "required": [
                "state"
            ],
            "description": "Capacity workload setting",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The workload name"
                },
                "state": {
                    "$ref": "#/definitions/WorkloadState"
                },
                "maxMemoryPercentageSetByUser": {
                    "type": "integer",
                    "description": "The memory percentage maximum Limit set by the user"
                }
            }
        },
        "PatchWorkloadRequest": {
            "required": [
                "state"
            ],
            "description": "Patch workload setting request",
            "properties": {
                "state": {
                    "$ref": "#/definitions/WorkloadState"
                },
                "maxMemoryPercentageSetByUser": {
                    "type": "integer",
                    "description": "The memory percentage maximum Limit set by the user"
                }
            }
        },
        "DataflowBaseProperties": {
            "required": [
                "objectId"
            ],
            "description": "The metadata of a dataflow. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "properties": {
                "objectId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dataflow ID"
                },
                "name": {
                    "type": "string",
                    "description": "The dataflow name"
                },
                "description": {
                    "type": "string",
                    "description": "The dataflow description"
                },
                "modelUrl": {
                    "type": "string",
                    "description": "A URL to the dataflow definition file (model.json)"
                },
                "configuredBy": {
                    "type": "string",
                    "description": "The dataflow owner"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The user that modified this dataflow"
                },
                "modifiedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "modification date time"
                },
                "users": {
                    "type": "array",
                    "description": "The Dataflow User Access Details. This value will be empty. It will be removed from the payload response in an upcoming release. To retrieve user information on an artifact, please consider using the Get Dataflow User as Admin APIs, or the PostWorkspaceInfo API with the getArtifactUser parameter.",
                    "items": {
                        "$ref": "#/definitions/DataflowUser"
                    }
                }
            }
        },
        "WorkspaceInfoDataflowProperties": {
            "properties": {
                "datasourceUsages": {
                    "type": "array",
                    "description": "The datasource usages",
                    "items": {
                        "$ref": "#/definitions/DatasourceUsage"
                    }
                },
                "upstreamDataflows": {
                    "type": "array",
                    "description": "Upstream Dataflows",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                }
            }
        },
        "DataflowWorkspaceIdProperty": {
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dataflow workspace ID"
                }
            }
        },
        "Dataflow": {
            "description": "The metadata of a dataflow. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                }
            ]
        },
        "AdminDataflow": {
            "description": "The metadata of a dataflow returned by Admin APIs. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                },
                {
                    "$ref": "#/definitions/DataflowWorkspaceIdProperty"
                }
            ]
        },
        "WorkspaceInfoDataflow": {
            "description": "The metadata of a dataflow returned by Workspace Info APIs. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDataflowProperties"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                }
            ]
        },
        "Dataflows": {
            "description": "OData response wrapper for a dataflow metadata list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dataflow metadata List",
                    "items": {
                        "$ref": "#/definitions/Dataflow"
                    }
                }
            }
        },
        "DataflowStorageAccount": {
            "required": [
                "id",
                "isEnabled"
            ],
            "description": "A Power BI dataflow storage account",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID"
                },
                "name": {
                    "type": "string",
                    "description": "The Power BI dataflow storage account name"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates if workspaces can be assigned to this storage account"
                }
            }
        },
        "DataflowStorageAccounts": {
            "description": "OData response wrapper for Power BI dataflow storage account list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The Power BI dataflow storage account list",
                    "items": {
                        "$ref": "#/definitions/DataflowStorageAccount"
                    }
                }
            }
        },
        "AssignToDataflowStorageRequest": {
            "required": [
                "dataflowStorageId"
            ],
            "description": "Power BI assign to Power BI dataflow storage account request",
            "properties": {
                "dataflowStorageId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID. To unassign the specified workspace from a Power BI dataflow storage account, use an empty GUID (`00000000-0000-0000-0000-000000000000`)."
                }
            }
        },
        "Export": {
            "description": "An object describing Export to file details and current state",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The Export to file job ID"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the Export to file job"
                },
                "lastActionDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time of last change in the Export to file job"
                },
                "reportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the exported report"
                },
                "reportName": {
                    "type": "string",
                    "description": "The name of the exported report"
                },
                "status": {
                    "type": "string",
                    "description": "The current state of the Export to file job",
                    "enum": [
                        "Undefined",
                        "NotStarted",
                        "Running",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "ExportState",
                        "values": [
                            {
                                "value": "Undefined",
                                "description": "Indicates that the state of the Export to file job is undefined"
                            },
                            {
                                "value": "NotStarted",
                                "description": "Indicates that the Export to file job did not start"
                            },
                            {
                                "value": "Running",
                                "description": "Indicates that the Export to file job is running"
                            },
                            {
                                "value": "Succeeded",
                                "description": "Indicates that the Export to file job finished succesfully"
                            },
                            {
                                "value": "Failed",
                                "description": "Indicates that the Export to file job failed"
                            }
                        ]
                    }
                },
                "percentComplete": {
                    "type": "integer",
                    "description": "Indicate job progress as percentage",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 100
                },
                "resourceLocation": {
                    "type": "string",
                    "description": "The URL for retrieving the exported file"
                },
                "ResourceFileExtension": {
                    "type": "string",
                    "description": "The extension of the exported file"
                },
                "expirationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration time of the URL"
                }
            }
        },
        "TenantKeyCreationRequest": {
            "description": "Add encryption key request",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the encryption key"
                },
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies an encryption key in Azure Key Vault."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether an encryption key is the default key for the entire tenant. Any newly created capacity inherits the default key."
                },
                "activate": {
                    "type": "boolean",
                    "description": "Indicates to activate any inactivated capacities to use this key for its encryption"
                }
            }
        },
        "TenantKeys": {
            "description": "Encryption keys information",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "Encryption keys",
                    "items": {
                        "$ref": "#/definitions/TenantKey"
                    }
                }
            }
        },
        "TenantKey": {
            "description": "Encryption key information",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the encryption key"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the encryption key"
                },
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies the encryption key in Azure Key Vault"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the encryption key is the default key for the entire tenant. Any newly created capacity inherits the default key."
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the encryption key"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last update time of the encryption key"
                }
            }
        },
        "TenantKeyRotationRequest": {
            "description": "Request to rotate an encryption key",
            "properties": {
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies the encryption key in Azure Key Vault"
                }
            }
        },
        "CapacityPatchRequest": {
            "description": "Patch capacity request",
            "properties": {
                "tenantKeyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the encryption key"
                }
            }
        },
        "AssignWorkspacesToCapacityRequest": {
            "description": "Request body for assigning workspaces to a premium capacity as tenant admin",
            "properties": {
                "capacityMigrationAssignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CapacityMigrationAssignment"
                    }
                }
            }
        },
        "CapacityMigrationAssignment": {
            "required": [
                "workspacesToAssign",
                "targetCapacityObjectId"
            ],
            "description": "Assignment contract for migrating workspaces to premium capacity as tenant admin",
            "properties": {
                "workspacesToAssign": {
                    "type": "array",
                    "description": "The workspace IDs to be migrated to premium capacity",
                    "items": {
                        "type": "string",
                        "description": "The workspace ID"
                    }
                },
                "targetCapacityObjectId": {
                    "type": "string",
                    "description": "The premium capacity ID"
                }
            }
        },
        "UnassignWorkspacesCapacityRequest": {
            "required": [
                "workspacesToUnassign"
            ],
            "description": "Request body for migrating workspaces to shared capacity as tenant admin",
            "properties": {
                "workspacesToUnassign": {
                    "type": "array",
                    "description": "Workspaces to be migrated to shared capacity",
                    "items": {
                        "type": "string",
                        "description": "The workspace ID"
                    }
                }
            }
        },
        "ActivityEventResponse": {
            "description": "OData response wrapper for audit activity events list",
            "properties": {
                "activityEventEntities": {
                    "type": "array",
                    "description": "The activity event entities",
                    "items": {
                        "$ref": "#/definitions/Object"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "UnusedArtifactsResponse": {
            "description": "OData response wrapper for unused artifact entities",
            "properties": {
                "unusedArtifactEntities": {
                    "type": "array",
                    "description": "The unused artifact entities",
                    "items": {
                        "$ref": "#/definitions/UnusedArtifactEntity"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "UnusedArtifactEntity": {
            "required": [
                "artifactId",
                "displayName",
                "artifactType"
            ],
            "description": "Unused artifact entity",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "description": "Artifact ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the artifact"
                },
                "artifactType": {
                    "type": "string",
                    "description": "Type of the artifact"
                },
                "artifactSizeInMB": {
                    "type": "integer",
                    "description": "Artifact size in MB if applicable"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Artifact created time if applicable"
                },
                "lastAccessedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Artifact last accessed time if applicable"
                }
            }
        },
        "Workbooks": {
            "description": "Power BI workbook list",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The workbooks",
                    "items": {
                        "$ref": "#/definitions/Workbook"
                    }
                }
            }
        },
        "Workbook": {
            "description": "A Power BI workbook",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The workbook name"
                },
                "datasetId": {
                    "type": "string",
                    "description": "DatasetId for workbooks. Only applies for workbooks that has an associated dataset."
                }
            }
        },
        "Refreshables": {
            "description": "Power BI refreshable list",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The refreshables",
                    "items": {
                        "$ref": "#/definitions/Refreshable"
                    }
                }
            }
        },
        "Refreshable": {
            "description": "A Power BI refreshable",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The object ID of the refreshable"
                },
                "name": {
                    "type": "string",
                    "description": "Display name of refreshable"
                },
                "kind": {
                    "type": "string",
                    "description": "The refreshable kind",
                    "enum": [
                        "Dataset"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshableKind",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Dataset",
                                "description": "Dataset"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the window for which summary data exists"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time of the window for which summary data exists"
                },
                "refreshCount": {
                    "type": "integer",
                    "description": "The number of refreshes within the summary time window"
                },
                "refreshFailures": {
                    "type": "integer",
                    "description": "The number of refresh failures within the summary time window"
                },
                "averageDuration": {
                    "type": "number",
                    "description": "The average duration in seconds of a refresh within the summary time window"
                },
                "medianDuration": {
                    "type": "number",
                    "description": "The median duration in seconds of a refresh within the summary time window"
                },
                "refreshesPerDay": {
                    "type": "integer",
                    "description": "The number of refreshes per day (scheduled and on-demand) within the time window for which refresh data exists"
                },
                "lastRefresh": {
                    "$ref": "#/definitions/Refresh",
                    "description": "The last Power BI refresh history entry for the refreshable item"
                },
                "refreshSchedule": {
                    "$ref": "#/definitions/RefreshSchedule",
                    "description": "The refresh schedule for the refreshable item"
                },
                "configuredBy": {
                    "type": "array",
                    "description": "Refreshable owners",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "The capacity for the refreshable item"
                },
                "group": {
                    "$ref": "#/definitions/RefreshableGroup",
                    "description": "The associated group for the refreshable item"
                }
            }
        },
        "UpdateRdlDatasourcesRequest": {
            "required": [
                "updateDetails"
            ],
            "description": "A paginated report datasources update request.",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "The paginated report datasources update details.",
                    "items": {
                        "$ref": "#/definitions/UpdateRdlDatasourceDetails"
                    }
                }
            }
        },
        "UpdateRdlDatasourceDetails": {
            "required": [
                "connectionDetails",
                "datasourceName"
            ],
            "description": "The new connection details and the target datasource name to be updated.",
            "properties": {
                "connectionDetails": {
                    "$ref": "#/definitions/RdlDatasourceConnectionDetails",
                    "description": "The new server and database name."
                },
                "datasourceName": {
                    "type": "string",
                    "description": "The target datasource name to be updated."
                }
            }
        },
        "RdlDatasourceConnectionDetails": {
            "description": "A paginated report datasource connection details.",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "The connection server."
                },
                "database": {
                    "type": "string",
                    "description": "The connection database."
                }
            }
        },
        "DataflowTransactions": {
            "description": "A dataflow transaction odata list wrapper",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dataflow transactions",
                    "items": {
                        "$ref": "#/definitions/DataflowTransaction"
                    }
                }
            }
        },
        "DataflowTransaction": {
            "required": [
                "id"
            ],
            "description": "A Power BI dataflow transaction",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The transaction ID"
                },
                "refreshType": {
                    "type": "string",
                    "description": "The type of refresh transaction"
                },
                "startTime": {
                    "type": "string",
                    "description": "Start time of the transaction"
                },
                "endTime": {
                    "type": "string",
                    "description": "End time of the transaction"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the transaction"
                }
            }
        },
        "DataflowTransactionStatus": {
            "description": "Status of dataflow refresh transaction",
            "properties": {
                "transactionId": {
                    "description": "The transaction ID",
                    "type": "string"
                },
                "status": {
                    "description": "Status of transaction",
                    "type": "string",
                    "enum": [
                        "invalid",
                        "successfullyMarked",
                        "alreadyConcluded",
                        "notFound"
                    ]
                }
            }
        },
        "DataflowUpdateRequestMessage": {
            "description": "Request payload for updating dataflow information",
            "properties": {
                "name": {
                    "description": "New name of the dataflow",
                    "type": "string"
                },
                "description": {
                    "description": "New description for the dataflow",
                    "type": "string"
                },
                "allowNativeQueries": {
                    "description": "Allow native queries",
                    "type": "boolean"
                },
                "computeEngineBehavior": {
                    "description": "Compute Engine Behavior",
                    "type": "string",
                    "enum": [
                        "computeOptimized",
                        "computeOn",
                        "computeDisabled"
                    ]
                }
            }
        },
        "CreateInstallTicketRequest": {
            "description": "Power BI Create Install Ticket Request",
            "properties": {
                "installDetails": {
                    "type": "array",
                    "description": "List of install details",
                    "items": {
                        "$ref": "#/definitions/TemplateAppInstallDetails"
                    }
                }
            }
        },
        "TemplateAppInstallDetails": {
            "required": [
                "appId",
                "packageKey",
                "ownerTenantId"
            ],
            "description": "Power BI Template App Install Details",
            "properties": {
                "appId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID of the application"
                },
                "packageKey": {
                    "type": "string",
                    "description": "Application version secure key"
                },
                "ownerTenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The object ID for the application owner's tenant"
                },
                "config": {
                    "$ref": "#/definitions/TemplateAppConfigurationRequest",
                    "description": "Automated install configuration."
                }
            }
        },
        "TemplateAppConfigurationRequest": {
            "description": "Power BI Template App Automated install configuration. Dictionary of name-value pairs",
            "properties": {
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "param1": "value1",
                        "param2": "value2"
                    }
                }
            }
        },
        "InstallTicket": {
            "required": [
                "ticket",
                "ticketId",
                "expiration"
            ],
            "description": "Power BI Template Apps automated install token",
            "properties": {
                "ticket": {
                    "type": "string",
                    "description": "Install ticket"
                },
                "ticketId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID of a ticket, which can be used to correlate operations that use this ticket with the generate operation through audit logs"
                },
                "expiration": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Expiration time of token. In UTC."
                }
            }
        },
        "ArtifactId": {
            "description": "The unique ID of an artifact, which is in UUID format for dashboards, reports, and dataflows",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID"
                }
            }
        },
        "ArtifactStringId": {
            "description": "The unique ID of an artifact, which is in string or UUID format for datasets",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID"
                }
            }
        },
        "InformationProtectionArtifactsChangeLabel": {
            "description": "A composite of artifact IDs that will be used to update the information protection labels of those artifacts",
            "properties": {
                "dashboards": {
                    "type": "array",
                    "description": "List of unique dashboard IDs.",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "List of unique report IDs.",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "List of unique dataset IDs.",
                    "items": {
                        "$ref": "#/definitions/ArtifactStringId"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "List of unique dataflow IDs.",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                }
            }
        },
        "InformationProtectionChangeLabelResponse": {
            "description": "A composite of artifact IDs and label change status",
            "properties": {
                "dashboards": {
                    "type": "array",
                    "description": "List of unique dashboard IDs with label change status.",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "List of unique report IDs with label change status.",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "List of unique dataflow IDs with label change status.",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "List of unique dataset IDs with label change status.",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                }
            }
        },
        "ChangeLabelStatus": {
            "description": "Artifact ID with information protection label status",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique ID of an artifact, which is in UUID format for dashboards, reports, and dataflows, and string format for datasets"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the result of the label change operation",
                    "enum": [
                        "Failed",
                        "FailedToGetUsageRights",
                        "InsufficientUsageRights",
                        "NotFound",
                        "Succeeded"
                    ],
                    "x-ms-enum": {
                        "name": "status",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Failed",
                                "description": "Label was not changed. Please retry."
                            },
                            {
                                "value": "FailedToGetUsageRights",
                                "description": "Failed to set new label. Artifact has a sensitivity label with protection settings. Power BI could not verify if user has sufficient usage rights to change label."
                            },
                            {
                                "value": "InsufficientUsageRights",
                                "description": "Failed to set new label. Artifact has a sensitivity label with protection settings that the admin, or both the admin and the delegated user, do not have sufficient usage rights to update label."
                            },
                            {
                                "value": "NotFound",
                                "description": "Artifact ID or label was not found."
                            },
                            {
                                "value": "Succeeded",
                                "description": "Label was changed on the given artifact."
                            }
                        ]
                    }
                }
            }
        },
        "InformationProtectionChangeLabelDetails": {
            "description": "Set label details.",
            "required": [
                "artifacts",
                "labelId"
            ],
            "properties": {
                "artifacts": {
                    "description": "A composite of artifact ID lists for each type",
                    "$ref": "#/definitions/InformationProtectionArtifactsChangeLabel"
                },
                "labelId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Label ID (must be in the user’s policy)."
                },
                "delegatedUser": {
                    "description": "Delegated user details. A delegated user is a user in the admin’s organization on whose behalf the admin sets a label. Although the admin sets the label, the delegated user is marked as the label issuer.",
                    "$ref": "#/definitions/DelegatedUser"
                },
                "assignmentMethod": {
                    "type": "string",
                    "enum": [
                        "Standard",
                        "Priviledged"
                    ],
                    "x-ms-enum": {
                        "name": "assignmentMethod",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Standard",
                                "description": "Specifies that the label was set as part of an automatic process."
                            },
                            {
                                "value": "Priviledged",
                                "description": "Specifies that the label was set manually."
                            }
                        ]
                    },
                    "description": "Specifies whether the assigned label is to be regarded as having been set manually or as the result of automatic labeling. (default value is Standard)."
                }
            }
        },
        "DelegatedUser": {
            "description": "Delegated user details. The user must be an existing user in Power BI and Azure AAD, who has signed in to Power BI during the last 3 months.",
            "required": [
                "emailAddress"
            ],
            "properties": {
                "emailAddress": {
                    "description": "Delegated user email address.",
                    "type": "string"
                }
            }
        },
        "Pipelines": {
            "description": "OData response wrapper for a collection of Power BI deployment pipelines",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipelines",
                    "items": {
                        "$ref": "#/definitions/Pipeline"
                    }
                }
            }
        },
        "AdminPipelines": {
            "description": "OData response wrapper for a collection of Power BI deployment pipelines",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipelines",
                    "items": {
                        "$ref": "#/definitions/AdminPipeline"
                    }
                }
            }
        },
        "PipelineBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The deployment pipeline ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The deployment pipeline display name"
                },
                "description": {
                    "type": "string",
                    "description": "The deployment pipeline description"
                },
                "stages": {
                    "type": "array",
                    "description": "The collection of deployment pipeline stages. Only returned when `$expand` is set to `stages` in the request.",
                    "items": {
                        "$ref": "#/definitions/PipelineStage"
                    }
                }
            }
        },
        "PipelineUsersProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "The collection of deployment pipeline users. Only returned when `$expand` is set to `users` in the request.",
                    "items": {
                        "$ref": "#/definitions/PipelineUser"
                    }
                }
            }
        },
        "Pipeline": {
            "description": "A Power BI pipeline",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineBaseProperties"
                }
            ]
        },
        "AdminPipeline": {
            "description": "A Power BI pipeline returned by user APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineBaseProperties"
                },
                {
                    "$ref": "#/definitions/PipelineUsersProperties"
                }
            ]
        },
        "PipelineStages": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline stages.",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline stages",
                    "items": {
                        "$ref": "#/definitions/PipelineStage"
                    }
                }
            }
        },
        "PipelineStage": {
            "required": [
                "order"
            ],
            "description": "A Power BI deployment pipeline stage",
            "properties": {
                "order": {
                    "type": "integer",
                    "description": "The stage order, starting from zero."
                },
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The assigned workspace ID. Only applicable when there's an assigned workspace."
                },
                "workspaceName": {
                    "type": "string",
                    "description": "The assigned workspace name. Only applicable when there's an assigned workspace and the user has access to the workspace."
                }
            }
        },
        "PipelineStageArtifacts": {
            "description": "Supported items from a workspace that's assigned to a deployment pipeline stage",
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "The datasets collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDataset"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "The reports collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDashboard"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDataflow"
                    }
                }
            }
        },
        "PipelineStageArtifactBase": {
            "required": [
                "artifactId"
            ],
            "description": "Power BI item metadata for a deployment pipeline stage",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI item ID"
                },
                "artifactDisplayName": {
                    "type": "string",
                    "description": "The Power BI item display name"
                },
                "sourceArtifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item from the workspace assigned to the source stage, which will update the current artifact upon deployment. Applicable only when the user has at least contributor access to the source stage workspace."
                },
                "targetArtifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The artifact ID from the workspace of the target stage, which will be updated by the current artifact upon deployment. Applicable only when the user has at least contributor access to the target stage workspace."
                },
                "lastDeploymentTime ": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last deployment date and time of the Power BI item"
                }
            }
        },
        "PipelineStageDataflow": {
            "description": "The metadata for a deployment pipeline dataflow",
            "allOf": [ { "$ref": "#/definitions/PipelineStageArtifactBase" } ]
        },
        "PipelineStageDataset": {
            "description": "The metadata for a deployment pipeline dataset",
            "allOf": [ { "$ref": "#/definitions/PipelineStageArtifactBase" } ]
        },
        "PipelineStageReport": {
            "description": "The metadata for a deployment pipeline report",
            "allOf": [ { "$ref": "#/definitions/PipelineStageArtifactBase" } ]
        },
        "PipelineStageDashboard": {
            "description": "The metadata for a deployment pipeline dashboard",
            "allOf": [ { "$ref": "#/definitions/PipelineStageArtifactBase" } ]
        },
        "PipelineOperations": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline operations",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline operations",
                    "items": {
                        "$ref": "#/definitions/PipelineOperation"
                    }
                }
            }
        },
        "PipelineOperation": {
            "required": [
                "id",
                "status",
                "lastUpdatedTime"
            ],
            "description": "A Power BI deployment pipeline operation",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The operation ID"
                },
                "type": {
                    "type": "string",
                    "description": "The operation type",
                    "enum": [
                        "Deploy"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Deploy",
                                "description": "Deploy content between stages"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The pipeline operation status",
                    "enum": [
                        "NotStarted",
                        "Executing",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotStarted",
                                "description": "Operation not started"
                            },
                            {
                                "value": "Executing",
                                "description": "Operation executing"
                            },
                            {
                                "value": "Succeeded",
                                "description": "Operation succeeded"
                            },
                            {
                                "value": "Failed",
                                "description": "Operation failed"
                            }
                        ]
                    }
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation was last updated"
                },
                "executionStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation started"
                },
                "executionEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation ended"
                },
                "sourceStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of a source pipeline deployment stage. Development (0), Test (1), Production (2)."
                },
                "targetStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of a target pipeline deployment stage. Development (0), Test (1), Production (2)."
                },
                "executionPlan": {
                    "description": "The deployment execution plan. Only applicable to a single pipeline operation.",
                    "$ref": "#/definitions/DeploymentExecutionPlan"
                }
            }
        },
        "DeploymentExecutionPlan": {
            "description": "A deployment execution plan",
            "properties": {
                "steps": {
                    "type": "array",
                    "description": "The collection of execution plan steps",
                    "items": {
                        "$ref": "#/definitions/DeploymentExecutionStep"
                    }
                }
            }
        },
        "DeploymentExecutionStep": {
            "required": [
                "index",
                "type",
                "status",
                "lastUpdatedTime"
            ],
            "description": "A deployment execution step",
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "The step index"
                },
                "type": {
                    "type": "string",
                    "description": "The type of deployment step",
                    "enum": [
                        "DatasetDeployment",
                        "ReportDeployment",
                        "DashboardDeployment",
                        "DataflowDeployment"
                    ],
                    "x-ms-enum": {
                        "name": "DeploymentStepType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "DatasetDeployment",
                                "description": "A step for deploying a single dataset"
                            },
                            {
                                "value": "ReportDeployment",
                                "description": "A step for deploying a single report"
                            },
                            {
                                "value": "DashboardDeployment",
                                "description": "A step for deploying a single dashboard"
                            },
                            {
                                "value": "DataflowDeployment",
                                "description": "A step for deploying a single dataflow"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the pipeline operation",
                    "enum": [
                        "NotStarted",
                        "Executing",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotStarted",
                                "description": "The pipeline operation didn't start"
                            },
                            {
                                "value": "Executing",
                                "description": "The pipeline operation is executing"
                            },
                            {
                                "value": "Succeeded",
                                "description": "The pipeline operation succeeded"
                            },
                            {
                                "value": "Failed",
                                "description": "The pipeline operation failed"
                            }
                        ]
                    }
                },
                "sourceAndTarget": {
                    "description": "The source and target items of the step",
                    "$ref": "#/definitions/DeploymentSourceAndTarget"
                },
                "error": {
                    "description": "The error details. Only applicable if the pipeline operation failed.",
                    "$ref": "#/definitions/DeploymentError"
                }
            }
        },
        "DeploymentSourceAndTarget": {
            "required": [
                "source"
            ],
            "description": "Source and target items",
            "properties": {
                "source": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item that's deployed from the source stage"
                },
                "target": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item that will be overwritten in the target stage. Only applies when overwriting a Power BI item."
                }
            }
        },
        "DeploymentError": {
            "description": "Error details for the deployment step",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "The error code"
                },
                "errorDetails": {
                    "type": "string",
                    "description": "Additional error details"
                }
            }
        },
        "DeployRequestBase": {
            "required": [
                "sourceStageOrder"
            ],
            "description": "Base request to deploy content from a deployment pipeline stage",
            "properties": {
                "sourceStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of the pipeline deployment stage that the content should be deployed from. Development (0), Test (1), Production (2)."
                },
                "isBackwardDeployment": {
                    "type": "boolean",
                    "description": "Whether the deployment will be from a later stage in the deployment pipeline, to an earlier one. The default value is `false`."
                },
                "newWorkspace": {
                    "description": "The configuration details for creating a new workspace. Required when deploying to a stage that has no assigned workspaces. The deployment will fail if the new workspace configuration details are not provided when required.",
                    "$ref": "#/definitions/PipelineNewWorkspaceRequest"
                },
                "updateAppSettings": {
                    "description": "Update org app in the target workspace settings",
                    "$ref": "#/definitions/PipelineUpdateAppSettings"
                },
                "options": {
                    "description": "Options that control the behavior of the entire deployment",
                    "$ref": "#/definitions/DeploymentOptions"
                }
            }
        },
        "DeployAllRequest": {
            "description": "A request to deploy all supported items from a deployment pipeline stage",
            "allOf": [ { "$ref": "#/definitions/DeployRequestBase" } ]
        },
        "SelectiveDeployRequest": {
            "description": "A request to selectively deploy items from a deployment pipeline stage",
            "allOf": [ { "$ref": "#/definitions/DeployRequestBase" } ],
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "A list of datasets to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list of reports to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "A list of dashboards to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "A list of dataflows to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                }
            }
        },
        "PipelineNewWorkspaceRequest": {
            "description": "The configuration details for creating a new workspace. Required when deploying to a stage that has no assigned workspaces.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the new workspace"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the capacity that the new workspace will be assigned to. If unspecified and the API caller has permissions for the source stage workspace capacity, then that capacity will be used. Otherwise, Power BI will select a capacity that the API caller has permissions for."
                }
            }
        },
        "PipelineUpdateAppSettings": {
            "description": "Configuration update org app after deployment",
            "properties": {
                "updateAppInTargetWorkspace": {
                    "type": "boolean",
                    "description": "Whether to update the app in the target workspace"
                }
            }
        },
        "DeploymentOptions": {
            "description": "Deployment configuration options. Can be specified either for the entire deployment or for a specific Power BI item (such as a report or dashboard). If both are specified, only the deployment options for the Power BI item are used.",
            "properties": {
                "allowCreateArtifact": {
                    "type": "boolean",
                    "description": "Whether creating a new Power BI item (such as a report or a dashboard) in the target stage workspace is allowed. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowOverwriteArtifact": {
                    "type": "boolean",
                    "description": "Whether overwriting a Power BI item (such as a report or a dashboard) in the target stage workspace is allowed. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowSkipTilesWithMissingPrerequisites": {
                    "type": "boolean",
                    "description": "Whether to skip tiles that don't have a model or a report in the target stage workspace. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowPurgeData": {
                    "type": "boolean",
                    "description": "Whether to delete all data from the target Power BI item (such as a report or a dashboard) when there's a schema mismatch. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowTakeOver": {
                    "type": "boolean",
                    "description": "Allow overriding the previous paginated report owner and becoming the owner of the paginated report. Applicable when deploying a paginated report to a stage that already contains a copy of the paginated report that isn't owned by you. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowOverwriteTargetArtifactLabel": {
                    "type": "boolean",
                    "description": "Whether the label of a target Power BI item (such as a report or a dashboard) can be changed. The label gets changed when the source is protected but the target isn't. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                }
            }
        },
        "DeployArtifactRequest": {
            "required": [
                "sourceId"
            ],
            "description": "The artifact to be deployed",
            "properties": {
                "sourceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The artifact ID"
                },
                "options": {
                    "description": "The deployment configuration options for a specific Power BI item (such as a report or a dashboard)",
                    "$ref": "#/definitions/DeploymentOptions"
                }
            }
        },
        "CreatePipelineRequest": {
            "required": [
                "displayName"
            ],
            "description": "A request to create a new deployment pipeline",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name for the new deployment pipeline",
                    "maxLength": 256
                },
                "description": {
                    "type": "string",
                    "description": "The description for the new deployment pipeline",
                    "maxLength": 1024
                }
            }
        },
        "UpdatePipelineRequest": {
            "description": "A request to update an existing deployment pipeline. An updated display name and/or a description is required.",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The updated display name for the deployment pipeline",
                    "maxLength": 256
                },
                "description": {
                    "type": "string",
                    "description": "The updated description for the deployment pipeline",
                    "maxLength": 1024
                }
            }
        },
        "AssignWorkspaceRequest": {
            "required": [
                "workspaceId"
            ],
            "description": "A request to assign a workspace to a deployment pipeline stage",
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID."
                }
            }
        },
        "PipelineUsers": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline users",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline users",
                    "items": {
                        "$ref": "#/definitions/PipelineUser"
                    }
                }
            }
        },
        "PipelineUser": {
            "required": [
                "identifier",
                "principalType"
            ],
            "description": "A Power BI user access right entry for a deployment pipeline",
            "properties": {
                "accessRight": {
                    "type": "string",
                    "description": "(Required) The access right a user has for the deployment pipeline",
                    "enum": [
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Admin",
                                "description": "Grants administrator rights to a deployment pipeine"
                            }
                        ]
                    }
                },
                "identifier": {
                    "type": "string",
                    "description": "For the service principal type `User`, enter *UPN*. Otherwise provide the [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the service principal."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DatasetExecuteQueriesRequest": {
            "type": "object",
            "required": [
                "queries"
            ],
            "properties": {
                "queries": {
                    "type": "array",
                    "description": "The list of dataset queries to execute",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesQuery"
                    }
                },
                "serializerSettings": {
                    "description": "The serialization settings for the result set",
                    "$ref": "#/definitions/DatasetExecuteQueriesSerializationSettings"
                }
            },
            "description": "A request to execute queries against a dataset"
        },
        "DatasetExecuteQueriesQuery": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The DAX query to be executed"
                }
            },
            "description": "A dataset query"
        },
        "DatasetExecuteQueriesSerializationSettings": {
            "type": "object",
            "properties": {
                "includeNulls": {
                    "type": "boolean",
                    "description": "Whether null (blank) values should be included in the result set. If unspecified, the default value is `false`."
                }
            },
            "description": "The serialization settings for the results of a dataset query"
        },
        "DatasetExecuteQueriesResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "description": "The list of results, one per input query.",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesQueryResult"
                    }
                }
            },
            "description": "The response to a dataset execute queries request"
        },
        "DatasetExecuteQueriesQueryResult": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "description": "A list of tables data for a query",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesTableResult"
                    }
                }
            },
            "description": "The results from a single dataset query"
        },
        "DatasetExecuteQueriesTableResult": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "description": "A list of rows",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesRowResult"
                    }
                }
            },
            "description": "A table of data"
        },
        "DatasetExecuteQueriesRowResult": {
            "type": "object",
            "example": {
                "Country": "United States",
                "Sales": 100.5
            },
            "description": "A set of key-value pairs representing the column name and a row value. The column name is the key of the pair."
        }
    },
    "parameters": {

    },
    "responses": {

    },
    "security": [
    ],
    "tags": [

    ]
}
